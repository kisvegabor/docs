<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="lv__canvas_8h" kind="file" language="C++">
    <compoundname>lv_canvas.h</compoundname>
    <innerclass refid="structlv__canvas__ext__t" prot="public">lv_canvas_ext_t</innerclass>
      <sectiondef kind="enum">
      <memberdef kind="enum" id="lv__canvas_8h_1aa156d1cebb38c8a65846c4d9c006012a" prot="public" static="no">
        <name>@60</name>
        <enumvalue id="lv__canvas_8h_1aa156d1cebb38c8a65846c4d9c006012aaebb33eb634ad27758418d523e6bfb6fd" prot="public">
          <name>LV_CANVAS_PART_MAIN</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kisvegabor/projects/littlevgl/eclipse-workspace/lv_sim_eclipse_sdl/lvgl/scripts/release_tmp/lvgl/src/lv_widgets/lv_canvas.h" line="39" column="1" bodyfile="/home/kisvegabor/projects/littlevgl/eclipse-workspace/lv_sim_eclipse_sdl/lvgl/scripts/release_tmp/lvgl/src/lv_widgets/lv_canvas.h" bodystart="39" bodyend="41"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="lv__canvas_8h_1a97e44355f510964b66402231d9f6b7ce" prot="public" static="no">
        <type>uint8_t</type>
        <definition>typedef uint8_t lv_canvas_part_t</definition>
        <argsstring></argsstring>
        <name>lv_canvas_part_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kisvegabor/projects/littlevgl/eclipse-workspace/lv_sim_eclipse_sdl/lvgl/scripts/release_tmp/lvgl/src/lv_widgets/lv_canvas.h" line="42" column="1" bodyfile="/home/kisvegabor/projects/littlevgl/eclipse-workspace/lv_sim_eclipse_sdl/lvgl/scripts/release_tmp/lvgl/src/lv_widgets/lv_canvas.h" bodystart="42" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="lv__canvas_8h_1ac89798c0aadacdba97226c0679a7ed8c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref> *</type>
        <definition>lv_obj_t* lv_canvas_create</definition>
        <argsstring>(lv_obj_t *par, const lv_obj_t *copy)</argsstring>
        <name>lv_canvas_create</name>
        <param>
          <type><ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref> *</type>
          <declname>par</declname>
        </param>
        <param>
          <type>const <ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref> *</type>
          <declname>copy</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Create a canvas object <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>par</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to an object, it will be the parent of the new canvas </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>copy</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to a canvas object, if not NULL then the new object will be copied from it </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>pointer to the created canvas </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kisvegabor/projects/littlevgl/eclipse-workspace/lv_sim_eclipse_sdl/lvgl/scripts/release_tmp/lvgl/src/lv_widgets/lv_canvas.h" line="54" column="1"/>
      </memberdef>
      <memberdef kind="function" id="lv__canvas_8h_1a65cfb1d41e6908f15f7463dfb3980cec" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void lv_canvas_set_buffer</definition>
        <argsstring>(lv_obj_t *canvas, void *buf, lv_coord_t w, lv_coord_t h, lv_img_cf_t cf)</argsstring>
        <name>lv_canvas_set_buffer</name>
        <param>
          <type><ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref> *</type>
          <declname>canvas</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>buf</declname>
        </param>
        <param>
          <type>lv_coord_t</type>
          <declname>w</declname>
        </param>
        <param>
          <type>lv_coord_t</type>
          <declname>h</declname>
        </param>
        <param>
          <type>lv_img_cf_t</type>
          <declname>cf</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set a buffer for the canvas. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>buf</parametername>
</parameternamelist>
<parameterdescription>
<para>a buffer where the content of the canvas will be. The required size is (lv_img_color_format_get_px_size(cf) * w) / 8 * h) It can be allocated with <computeroutput><ref refid="lv__mem_8h_1a511f0e6fc64046da6a0b6c922632038d" kindref="member">lv_mem_alloc()</ref></computeroutput> or it can be statically allocated array (e.g. static lv_color_t buf[100*50]) or it can be an address in RAM or external SRAM </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>canvas</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to a canvas object </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>w</parametername>
</parameternamelist>
<parameterdescription>
<para>width of the canvas </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>h</parametername>
</parameternamelist>
<parameterdescription>
<para>height of the canvas </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>cf</parametername>
</parameternamelist>
<parameterdescription>
<para>color format. <computeroutput>LV_IMG_CF_...</computeroutput> </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kisvegabor/projects/littlevgl/eclipse-workspace/lv_sim_eclipse_sdl/lvgl/scripts/release_tmp/lvgl/src/lv_widgets/lv_canvas.h" line="72" column="1"/>
      </memberdef>
      <memberdef kind="function" id="lv__canvas_8h_1abb258299eb77016c16d852c0100352ff" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void lv_canvas_set_px</definition>
        <argsstring>(lv_obj_t *canvas, lv_coord_t x, lv_coord_t y, lv_color_t c)</argsstring>
        <name>lv_canvas_set_px</name>
        <param>
          <type><ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref> *</type>
          <declname>canvas</declname>
        </param>
        <param>
          <type>lv_coord_t</type>
          <declname>x</declname>
        </param>
        <param>
          <type>lv_coord_t</type>
          <declname>y</declname>
        </param>
        <param>
          <type><ref refid="unionlv__color1__t" kindref="compound">lv_color_t</ref></type>
          <declname>c</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set the color of a pixel on the canvas <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>canvas</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>x coordinate of the point to set </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>y</parametername>
</parameternamelist>
<parameterdescription>
<para>x coordinate of the point to set </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>c</parametername>
</parameternamelist>
<parameterdescription>
<para>color of the point </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kisvegabor/projects/littlevgl/eclipse-workspace/lv_sim_eclipse_sdl/lvgl/scripts/release_tmp/lvgl/src/lv_widgets/lv_canvas.h" line="81" column="1"/>
      </memberdef>
      <memberdef kind="function" id="lv__canvas_8h_1a3a4b96429bd0b14aa00cee3dacb45a02" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void lv_canvas_set_palette</definition>
        <argsstring>(lv_obj_t *canvas, uint8_t id, lv_color_t c)</argsstring>
        <name>lv_canvas_set_palette</name>
        <param>
          <type><ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref> *</type>
          <declname>canvas</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>id</declname>
        </param>
        <param>
          <type><ref refid="unionlv__color1__t" kindref="compound">lv_color_t</ref></type>
          <declname>c</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set the palette color of a canvas with index format. Valid only for <computeroutput>LV_IMG_CF_INDEXED1/2/4/8</computeroutput> <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>canvas</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to canvas object </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>id</parametername>
</parameternamelist>
<parameterdescription>
<para>the palette color to set:<itemizedlist>
<listitem><para>for <computeroutput>LV_IMG_CF_INDEXED1</computeroutput>: 0..1</para></listitem><listitem><para>for <computeroutput>LV_IMG_CF_INDEXED2</computeroutput>: 0..3</para></listitem><listitem><para>for <computeroutput>LV_IMG_CF_INDEXED4</computeroutput>: 0..15</para></listitem><listitem><para>for <computeroutput>LV_IMG_CF_INDEXED8</computeroutput>: 0..255 </para></listitem></itemizedlist>
</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>c</parametername>
</parameternamelist>
<parameterdescription>
<para>the color to set </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kisvegabor/projects/littlevgl/eclipse-workspace/lv_sim_eclipse_sdl/lvgl/scripts/release_tmp/lvgl/src/lv_widgets/lv_canvas.h" line="93" column="1"/>
      </memberdef>
      <memberdef kind="function" id="lv__canvas_8h_1a239cd4f0a242aff85570021edf6e40e8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="unionlv__color1__t" kindref="compound">lv_color_t</ref></type>
        <definition>lv_color_t lv_canvas_get_px</definition>
        <argsstring>(lv_obj_t *canvas, lv_coord_t x, lv_coord_t y)</argsstring>
        <name>lv_canvas_get_px</name>
        <param>
          <type><ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref> *</type>
          <declname>canvas</declname>
        </param>
        <param>
          <type>lv_coord_t</type>
          <declname>x</declname>
        </param>
        <param>
          <type>lv_coord_t</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the color of a pixel on the canvas <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>canvas</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>x coordinate of the point to set </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>y</parametername>
</parameternamelist>
<parameterdescription>
<para>x coordinate of the point to set </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>color of the point </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kisvegabor/projects/littlevgl/eclipse-workspace/lv_sim_eclipse_sdl/lvgl/scripts/release_tmp/lvgl/src/lv_widgets/lv_canvas.h" line="106" column="1"/>
      </memberdef>
      <memberdef kind="function" id="lv__canvas_8h_1ab88808b96446336d7c25436d4e7c8d75" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structlv__img__dsc__t" kindref="compound">lv_img_dsc_t</ref> *</type>
        <definition>lv_img_dsc_t* lv_canvas_get_img</definition>
        <argsstring>(lv_obj_t *canvas)</argsstring>
        <name>lv_canvas_get_img</name>
        <param>
          <type><ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref> *</type>
          <declname>canvas</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the image of the canvas as a pointer to an <computeroutput><ref refid="structlv__img__dsc__t" kindref="compound">lv_img_dsc_t</ref></computeroutput> variable. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>canvas</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to a canvas object </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>pointer to the image descriptor. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kisvegabor/projects/littlevgl/eclipse-workspace/lv_sim_eclipse_sdl/lvgl/scripts/release_tmp/lvgl/src/lv_widgets/lv_canvas.h" line="113" column="1"/>
      </memberdef>
      <memberdef kind="function" id="lv__canvas_8h_1a5b23403e36dffc964c9a6225467106af" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void lv_canvas_copy_buf</definition>
        <argsstring>(lv_obj_t *canvas, const void *to_copy, lv_coord_t x, lv_coord_t y, lv_coord_t w, lv_coord_t h)</argsstring>
        <name>lv_canvas_copy_buf</name>
        <param>
          <type><ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref> *</type>
          <declname>canvas</declname>
        </param>
        <param>
          <type>const void *</type>
          <declname>to_copy</declname>
        </param>
        <param>
          <type>lv_coord_t</type>
          <declname>x</declname>
        </param>
        <param>
          <type>lv_coord_t</type>
          <declname>y</declname>
        </param>
        <param>
          <type>lv_coord_t</type>
          <declname>w</declname>
        </param>
        <param>
          <type>lv_coord_t</type>
          <declname>h</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Copy a buffer to the canvas <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>canvas</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to a canvas object </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>to_copy</parametername>
</parameternamelist>
<parameterdescription>
<para>buffer to copy. The color format has to match with the canvas&apos;s buffer color format </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>left side of the destination position </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>y</parametername>
</parameternamelist>
<parameterdescription>
<para>top side of the destination position </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>w</parametername>
</parameternamelist>
<parameterdescription>
<para>width of the buffer to copy </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>h</parametername>
</parameternamelist>
<parameterdescription>
<para>height of the buffer to copy </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kisvegabor/projects/littlevgl/eclipse-workspace/lv_sim_eclipse_sdl/lvgl/scripts/release_tmp/lvgl/src/lv_widgets/lv_canvas.h" line="129" column="1"/>
      </memberdef>
      <memberdef kind="function" id="lv__canvas_8h_1a5dd04a2ac880d07ea124c15da8f0299e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void lv_canvas_transform</definition>
        <argsstring>(lv_obj_t *canvas, lv_img_dsc_t *img, int16_t angle, uint16_t zoom, lv_coord_t offset_x, lv_coord_t offset_y, int32_t pivot_x, int32_t pivot_y, bool antialias)</argsstring>
        <name>lv_canvas_transform</name>
        <param>
          <type><ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref> *</type>
          <declname>canvas</declname>
        </param>
        <param>
          <type><ref refid="structlv__img__dsc__t" kindref="compound">lv_img_dsc_t</ref> *</type>
          <declname>img</declname>
        </param>
        <param>
          <type>int16_t</type>
          <declname>angle</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>zoom</declname>
        </param>
        <param>
          <type>lv_coord_t</type>
          <declname>offset_x</declname>
        </param>
        <param>
          <type>lv_coord_t</type>
          <declname>offset_y</declname>
        </param>
        <param>
          <type>int32_t</type>
          <declname>pivot_x</declname>
        </param>
        <param>
          <type>int32_t</type>
          <declname>pivot_y</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>antialias</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Transform and image and store the result on a canvas. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>canvas</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to a canvas object to store the result of the transformation. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>img</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to an image descriptor to transform. Can be the image descriptor of an other canvas too (<computeroutput><ref refid="lv__canvas_8h_1ab88808b96446336d7c25436d4e7c8d75" kindref="member">lv_canvas_get_img()</ref></computeroutput>). </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>angle</parametername>
</parameternamelist>
<parameterdescription>
<para>the angle of rotation (0..3600), 0.1 deg resolution </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>zoom</parametername>
</parameternamelist>
<parameterdescription>
<para>zoom factor (256 no zoom); </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>offset_x</parametername>
</parameternamelist>
<parameterdescription>
<para>offset X to tell where to put the result data on destination canvas </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>offset_y</parametername>
</parameternamelist>
<parameterdescription>
<para>offset X to tell where to put the result data on destination canvas </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>pivot_x</parametername>
</parameternamelist>
<parameterdescription>
<para>pivot X of rotation. Relative to the source canvas Set to <computeroutput>source width / 2</computeroutput> to rotate around the center </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>pivot_y</parametername>
</parameternamelist>
<parameterdescription>
<para>pivot Y of rotation. Relative to the source canvas Set to <computeroutput>source height / 2</computeroutput> to rotate around the center </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>antialias</parametername>
</parameternamelist>
<parameterdescription>
<para>apply anti-aliasing during the transformation. Looks better but slower. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kisvegabor/projects/littlevgl/eclipse-workspace/lv_sim_eclipse_sdl/lvgl/scripts/release_tmp/lvgl/src/lv_widgets/lv_canvas.h" line="147" column="1"/>
      </memberdef>
      <memberdef kind="function" id="lv__canvas_8h_1a6d19fd6eb6564fba323d45a48108812d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void lv_canvas_blur_hor</definition>
        <argsstring>(lv_obj_t *canvas, const lv_area_t *area, uint16_t r)</argsstring>
        <name>lv_canvas_blur_hor</name>
        <param>
          <type><ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref> *</type>
          <declname>canvas</declname>
        </param>
        <param>
          <type>const <ref refid="structlv__area__t" kindref="compound">lv_area_t</ref> *</type>
          <declname>area</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>r</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Apply horizontal blur on the canvas <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>canvas</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to a canvas object </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>area</parametername>
</parameternamelist>
<parameterdescription>
<para>the area to blur. If <computeroutput>NULL</computeroutput> the whole canvas will be blurred. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>r</parametername>
</parameternamelist>
<parameterdescription>
<para>radius of the blur </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kisvegabor/projects/littlevgl/eclipse-workspace/lv_sim_eclipse_sdl/lvgl/scripts/release_tmp/lvgl/src/lv_widgets/lv_canvas.h" line="159" column="1"/>
      </memberdef>
      <memberdef kind="function" id="lv__canvas_8h_1ab012dc122434c2f96c8484b1715ce692" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void lv_canvas_blur_ver</definition>
        <argsstring>(lv_obj_t *canvas, const lv_area_t *area, uint16_t r)</argsstring>
        <name>lv_canvas_blur_ver</name>
        <param>
          <type><ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref> *</type>
          <declname>canvas</declname>
        </param>
        <param>
          <type>const <ref refid="structlv__area__t" kindref="compound">lv_area_t</ref> *</type>
          <declname>area</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>r</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Apply vertical blur on the canvas <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>canvas</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to a canvas object </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>area</parametername>
</parameternamelist>
<parameterdescription>
<para>the area to blur. If <computeroutput>NULL</computeroutput> the whole canvas will be blurred. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>r</parametername>
</parameternamelist>
<parameterdescription>
<para>radius of the blur </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kisvegabor/projects/littlevgl/eclipse-workspace/lv_sim_eclipse_sdl/lvgl/scripts/release_tmp/lvgl/src/lv_widgets/lv_canvas.h" line="167" column="1"/>
      </memberdef>
      <memberdef kind="function" id="lv__canvas_8h_1acc3d60a59311eac7037cff197d5d4e18" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void lv_canvas_fill_bg</definition>
        <argsstring>(lv_obj_t *canvas, lv_color_t color, lv_opa_t opa)</argsstring>
        <name>lv_canvas_fill_bg</name>
        <param>
          <type><ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref> *</type>
          <declname>canvas</declname>
        </param>
        <param>
          <type><ref refid="unionlv__color1__t" kindref="compound">lv_color_t</ref></type>
          <declname>color</declname>
        </param>
        <param>
          <type>lv_opa_t</type>
          <declname>opa</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Fill the canvas with color <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>canvas</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to a canvas </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>color</parametername>
</parameternamelist>
<parameterdescription>
<para>the background color </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>opa</parametername>
</parameternamelist>
<parameterdescription>
<para>the desired opacity </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kisvegabor/projects/littlevgl/eclipse-workspace/lv_sim_eclipse_sdl/lvgl/scripts/release_tmp/lvgl/src/lv_widgets/lv_canvas.h" line="175" column="1"/>
      </memberdef>
      <memberdef kind="function" id="lv__canvas_8h_1a1cd8e1b6330bd4c16db4b82905a4bf32" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void lv_canvas_draw_rect</definition>
        <argsstring>(lv_obj_t *canvas, lv_coord_t x, lv_coord_t y, lv_coord_t w, lv_coord_t h, const lv_draw_rect_dsc_t *rect_dsc)</argsstring>
        <name>lv_canvas_draw_rect</name>
        <param>
          <type><ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref> *</type>
          <declname>canvas</declname>
        </param>
        <param>
          <type>lv_coord_t</type>
          <declname>x</declname>
        </param>
        <param>
          <type>lv_coord_t</type>
          <declname>y</declname>
        </param>
        <param>
          <type>lv_coord_t</type>
          <declname>w</declname>
        </param>
        <param>
          <type>lv_coord_t</type>
          <declname>h</declname>
        </param>
        <param>
          <type>const <ref refid="structlv__draw__rect__dsc__t" kindref="compound">lv_draw_rect_dsc_t</ref> *</type>
          <declname>rect_dsc</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Draw a rectangle on the canvas <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>canvas</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to a canvas object </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>left coordinate of the rectangle </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>y</parametername>
</parameternamelist>
<parameterdescription>
<para>top coordinate of the rectangle </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>w</parametername>
</parameternamelist>
<parameterdescription>
<para>width of the rectangle </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>h</parametername>
</parameternamelist>
<parameterdescription>
<para>height of the rectangle </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>rect_dsc</parametername>
</parameternamelist>
<parameterdescription>
<para>descriptor of the rectangle </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kisvegabor/projects/littlevgl/eclipse-workspace/lv_sim_eclipse_sdl/lvgl/scripts/release_tmp/lvgl/src/lv_widgets/lv_canvas.h" line="186" column="1"/>
      </memberdef>
      <memberdef kind="function" id="lv__canvas_8h_1af5758f23436009119309daeeda41a7cd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void lv_canvas_draw_text</definition>
        <argsstring>(lv_obj_t *canvas, lv_coord_t x, lv_coord_t y, lv_coord_t max_w, lv_draw_label_dsc_t *label_draw_dsc, const char *txt, lv_label_align_t align)</argsstring>
        <name>lv_canvas_draw_text</name>
        <param>
          <type><ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref> *</type>
          <declname>canvas</declname>
        </param>
        <param>
          <type>lv_coord_t</type>
          <declname>x</declname>
        </param>
        <param>
          <type>lv_coord_t</type>
          <declname>y</declname>
        </param>
        <param>
          <type>lv_coord_t</type>
          <declname>max_w</declname>
        </param>
        <param>
          <type><ref refid="structlv__draw__label__dsc__t" kindref="compound">lv_draw_label_dsc_t</ref> *</type>
          <declname>label_draw_dsc</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>txt</declname>
        </param>
        <param>
          <type>lv_label_align_t</type>
          <declname>align</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Draw a text on the canvas. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>canvas</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to a canvas object </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>left coordinate of the text </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>y</parametername>
</parameternamelist>
<parameterdescription>
<para>top coordinate of the text </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>max_w</parametername>
</parameternamelist>
<parameterdescription>
<para>max width of the text. The text will be wrapped to fit into this size </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>label_draw_dsc</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to a valid label descriptor <computeroutput><ref refid="structlv__draw__label__dsc__t" kindref="compound">lv_draw_label_dsc_t</ref></computeroutput> </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>txt</parametername>
</parameternamelist>
<parameterdescription>
<para>text to display </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>align</parametername>
</parameternamelist>
<parameterdescription>
<para>align of the text (<computeroutput>LV_LABEL_ALIGN_LEFT/RIGHT/CENTER</computeroutput>) </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kisvegabor/projects/littlevgl/eclipse-workspace/lv_sim_eclipse_sdl/lvgl/scripts/release_tmp/lvgl/src/lv_widgets/lv_canvas.h" line="199" column="1"/>
      </memberdef>
      <memberdef kind="function" id="lv__canvas_8h_1a577e4831a91f8f49a161ba1522cf74e9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void lv_canvas_draw_img</definition>
        <argsstring>(lv_obj_t *canvas, lv_coord_t x, lv_coord_t y, const void *src, const lv_draw_img_dsc_t *img_draw_dsc)</argsstring>
        <name>lv_canvas_draw_img</name>
        <param>
          <type><ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref> *</type>
          <declname>canvas</declname>
        </param>
        <param>
          <type>lv_coord_t</type>
          <declname>x</declname>
        </param>
        <param>
          <type>lv_coord_t</type>
          <declname>y</declname>
        </param>
        <param>
          <type>const void *</type>
          <declname>src</declname>
        </param>
        <param>
          <type>const <ref refid="structlv__draw__img__dsc__t" kindref="compound">lv_draw_img_dsc_t</ref> *</type>
          <declname>img_draw_dsc</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Draw an image on the canvas <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>canvas</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to a canvas object </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>left coordinate of the image </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>y</parametername>
</parameternamelist>
<parameterdescription>
<para>top coordinate of the image </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>src</parametername>
</parameternamelist>
<parameterdescription>
<para>image source. Can be a pointer an <computeroutput><ref refid="structlv__img__dsc__t" kindref="compound">lv_img_dsc_t</ref></computeroutput> variable or a path an image. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>img_draw_dsc</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to a valid label descriptor <computeroutput><ref refid="structlv__draw__img__dsc__t" kindref="compound">lv_draw_img_dsc_t</ref></computeroutput> </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kisvegabor/projects/littlevgl/eclipse-workspace/lv_sim_eclipse_sdl/lvgl/scripts/release_tmp/lvgl/src/lv_widgets/lv_canvas.h" line="211" column="1"/>
      </memberdef>
      <memberdef kind="function" id="lv__canvas_8h_1ac40e3903c3c2c4f69dfd9754791e1313" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void lv_canvas_draw_line</definition>
        <argsstring>(lv_obj_t *canvas, const lv_point_t points[], uint32_t point_cnt, const lv_draw_line_dsc_t *line_draw_dsc)</argsstring>
        <name>lv_canvas_draw_line</name>
        <param>
          <type><ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref> *</type>
          <declname>canvas</declname>
        </param>
        <param>
          <type>const <ref refid="structlv__point__t" kindref="compound">lv_point_t</ref></type>
          <declname>points</declname>
          <array>[]</array>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>point_cnt</declname>
        </param>
        <param>
          <type>const <ref refid="structlv__draw__line__dsc__t" kindref="compound">lv_draw_line_dsc_t</ref> *</type>
          <declname>line_draw_dsc</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Draw a line on the canvas <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>canvas</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to a canvas object </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>points</parametername>
</parameternamelist>
<parameterdescription>
<para>point of the line </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>point_cnt</parametername>
</parameternamelist>
<parameterdescription>
<para>number of points </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>line_draw_dsc</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to an initialized <computeroutput><ref refid="structlv__draw__line__dsc__t" kindref="compound">lv_draw_line_dsc_t</ref></computeroutput> variable </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kisvegabor/projects/littlevgl/eclipse-workspace/lv_sim_eclipse_sdl/lvgl/scripts/release_tmp/lvgl/src/lv_widgets/lv_canvas.h" line="221" column="1"/>
      </memberdef>
      <memberdef kind="function" id="lv__canvas_8h_1a808786a78deb7d5141020004a7caf330" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void lv_canvas_draw_polygon</definition>
        <argsstring>(lv_obj_t *canvas, const lv_point_t points[], uint32_t point_cnt, const lv_draw_rect_dsc_t *poly_draw_dsc)</argsstring>
        <name>lv_canvas_draw_polygon</name>
        <param>
          <type><ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref> *</type>
          <declname>canvas</declname>
        </param>
        <param>
          <type>const <ref refid="structlv__point__t" kindref="compound">lv_point_t</ref></type>
          <declname>points</declname>
          <array>[]</array>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>point_cnt</declname>
        </param>
        <param>
          <type>const <ref refid="structlv__draw__rect__dsc__t" kindref="compound">lv_draw_rect_dsc_t</ref> *</type>
          <declname>poly_draw_dsc</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Draw a polygon on the canvas <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>canvas</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to a canvas object </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>points</parametername>
</parameternamelist>
<parameterdescription>
<para>point of the polygon </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>point_cnt</parametername>
</parameternamelist>
<parameterdescription>
<para>number of points </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>poly_draw_dsc</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to an initialized <computeroutput><ref refid="structlv__draw__rect__dsc__t" kindref="compound">lv_draw_rect_dsc_t</ref></computeroutput> variable </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kisvegabor/projects/littlevgl/eclipse-workspace/lv_sim_eclipse_sdl/lvgl/scripts/release_tmp/lvgl/src/lv_widgets/lv_canvas.h" line="231" column="1"/>
      </memberdef>
      <memberdef kind="function" id="lv__canvas_8h_1a2416bd11c279be6d827f55b65e1d4859" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void lv_canvas_draw_arc</definition>
        <argsstring>(lv_obj_t *canvas, lv_coord_t x, lv_coord_t y, lv_coord_t r, int32_t start_angle, int32_t end_angle, const lv_draw_line_dsc_t *arc_draw_dsc)</argsstring>
        <name>lv_canvas_draw_arc</name>
        <param>
          <type><ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref> *</type>
          <declname>canvas</declname>
        </param>
        <param>
          <type>lv_coord_t</type>
          <declname>x</declname>
        </param>
        <param>
          <type>lv_coord_t</type>
          <declname>y</declname>
        </param>
        <param>
          <type>lv_coord_t</type>
          <declname>r</declname>
        </param>
        <param>
          <type>int32_t</type>
          <declname>start_angle</declname>
        </param>
        <param>
          <type>int32_t</type>
          <declname>end_angle</declname>
        </param>
        <param>
          <type>const <ref refid="structlv__draw__line__dsc__t" kindref="compound">lv_draw_line_dsc_t</ref> *</type>
          <declname>arc_draw_dsc</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Draw an arc on the canvas <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>canvas</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to a canvas object </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>origo x of the arc </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>y</parametername>
</parameternamelist>
<parameterdescription>
<para>origo y of the arc </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>r</parametername>
</parameternamelist>
<parameterdescription>
<para>radius of the arc </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>start_angle</parametername>
</parameternamelist>
<parameterdescription>
<para>start angle in degrees </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>end_angle</parametername>
</parameternamelist>
<parameterdescription>
<para>end angle in degrees </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>arc_draw_dsc</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to an initialized <computeroutput><ref refid="structlv__draw__line__dsc__t" kindref="compound">lv_draw_line_dsc_t</ref></computeroutput> variable </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kisvegabor/projects/littlevgl/eclipse-workspace/lv_sim_eclipse_sdl/lvgl/scripts/release_tmp/lvgl/src/lv_widgets/lv_canvas.h" line="244" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"></codeline>
<codeline lineno="6"><highlight class="preprocessor">#ifndef<sp/>LV_CANVAS_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LV_CANVAS_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">/*********************</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>INCLUDES</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*********************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../lv_conf_internal.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>LV_USE_CANVAS<sp/>!=<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../lv_core/lv_obj.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../lv_widgets/lv_img.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../lv_draw/lv_draw_img.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="comment">/*********************</highlight></codeline>
<codeline lineno="25"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>DEFINES</highlight></codeline>
<codeline lineno="26"><highlight class="comment"><sp/>*********************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="comment">/**********************</highlight></codeline>
<codeline lineno="29"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>TYPEDEFS</highlight></codeline>
<codeline lineno="30"><highlight class="comment"><sp/>**********************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="comment">/*Data<sp/>of<sp/>canvas*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32" refid="structlv__canvas__ext__t" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structlv__img__ext__t" kindref="compound">lv_img_ext_t</ref><sp/>img;<sp/></highlight><highlight class="comment">/*Ext.<sp/>of<sp/>ancestor*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*New<sp/>data<sp/>for<sp/>this<sp/>type<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structlv__img__dsc__t" kindref="compound">lv_img_dsc_t</ref><sp/>dsc;</highlight></codeline>
<codeline lineno="36"><highlight class="normal">}<sp/><ref refid="structlv__canvas__ext__t" kindref="compound">lv_canvas_ext_t</ref>;</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="comment">/*Canvas<sp/>part*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/>LV_CANVAS_PART_MAIN,</highlight></codeline>
<codeline lineno="41"><highlight class="normal">};</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>uint8_t<sp/>lv_canvas_part_t;</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="comment">/**********************</highlight></codeline>
<codeline lineno="45"><highlight class="comment"><sp/>*<sp/>GLOBAL<sp/>PROTOTYPES</highlight></codeline>
<codeline lineno="46"><highlight class="comment"><sp/>**********************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref><sp/>*<sp/><ref refid="lv__canvas_8h_1ac89798c0aadacdba97226c0679a7ed8c" kindref="member">lv_canvas_create</ref>(<ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref><sp/>*<sp/>par,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref><sp/>*<sp/>copy);</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight><highlight class="comment">/*=====================</highlight></codeline>
<codeline lineno="57"><highlight class="comment"><sp/>*<sp/>Setter<sp/>functions</highlight></codeline>
<codeline lineno="58"><highlight class="comment"><sp/>*====================*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="lv__canvas_8h_1a65cfb1d41e6908f15f7463dfb3980cec" kindref="member">lv_canvas_set_buffer</ref>(<ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref><sp/>*<sp/>canvas,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<sp/>buf,<sp/>lv_coord_t<sp/>w,<sp/>lv_coord_t<sp/>h,<sp/>lv_img_cf_t<sp/>cf);</highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="lv__canvas_8h_1abb258299eb77016c16d852c0100352ff" kindref="member">lv_canvas_set_px</ref>(<ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref><sp/>*<sp/>canvas,<sp/>lv_coord_t<sp/>x,<sp/>lv_coord_t<sp/>y,<sp/><ref refid="unionlv__color1__t" kindref="compound">lv_color_t</ref><sp/>c);</highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="lv__canvas_8h_1a3a4b96429bd0b14aa00cee3dacb45a02" kindref="member">lv_canvas_set_palette</ref>(<ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref><sp/>*<sp/>canvas,<sp/>uint8_t<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/><ref refid="unionlv__color1__t" kindref="compound">lv_color_t</ref><sp/>c);</highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight><highlight class="comment">/*=====================</highlight></codeline>
<codeline lineno="96"><highlight class="comment"><sp/>*<sp/>Getter<sp/>functions</highlight></codeline>
<codeline lineno="97"><highlight class="comment"><sp/>*====================*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"><ref refid="unionlv__color1__t" kindref="compound">lv_color_t</ref><sp/><ref refid="lv__canvas_8h_1a239cd4f0a242aff85570021edf6e40e8" kindref="member">lv_canvas_get_px</ref>(<ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref><sp/>*<sp/>canvas,<sp/>lv_coord_t<sp/>x,<sp/>lv_coord_t<sp/>y);</highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"><ref refid="structlv__img__dsc__t" kindref="compound">lv_img_dsc_t</ref><sp/>*<sp/><ref refid="lv__canvas_8h_1ab88808b96446336d7c25436d4e7c8d75" kindref="member">lv_canvas_get_img</ref>(<ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref><sp/>*<sp/>canvas);</highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight><highlight class="comment">/*=====================</highlight></codeline>
<codeline lineno="116"><highlight class="comment"><sp/>*<sp/>Other<sp/>functions</highlight></codeline>
<codeline lineno="117"><highlight class="comment"><sp/>*====================*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="lv__canvas_8h_1a5b23403e36dffc964c9a6225467106af" kindref="member">lv_canvas_copy_buf</ref>(<ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref><sp/>*<sp/>canvas,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<sp/>to_copy,<sp/>lv_coord_t<sp/>x,<sp/>lv_coord_t<sp/>y,<sp/>lv_coord_t<sp/>w,</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lv_coord_t<sp/>h);</highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="lv__canvas_8h_1a5dd04a2ac880d07ea124c15da8f0299e" kindref="member">lv_canvas_transform</ref>(<ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref><sp/>*<sp/>canvas,<sp/><ref refid="structlv__img__dsc__t" kindref="compound">lv_img_dsc_t</ref><sp/>*<sp/>img,<sp/>int16_t<sp/>angle,<sp/>uint16_t<sp/>zoom,<sp/>lv_coord_t<sp/>offset_x,</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lv_coord_t<sp/>offset_y,</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int32_t<sp/>pivot_x,<sp/>int32_t<sp/>pivot_y,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>antialias);</highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="lv__canvas_8h_1a6d19fd6eb6564fba323d45a48108812d" kindref="member">lv_canvas_blur_hor</ref>(<ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref><sp/>*<sp/>canvas,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structlv__area__t" kindref="compound">lv_area_t</ref><sp/>*<sp/>area,<sp/>uint16_t<sp/>r);</highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="lv__canvas_8h_1ab012dc122434c2f96c8484b1715ce692" kindref="member">lv_canvas_blur_ver</ref>(<ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref><sp/>*<sp/>canvas,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structlv__area__t" kindref="compound">lv_area_t</ref><sp/>*<sp/>area,<sp/>uint16_t<sp/>r);</highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="lv__canvas_8h_1acc3d60a59311eac7037cff197d5d4e18" kindref="member">lv_canvas_fill_bg</ref>(<ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref><sp/>*<sp/>canvas,<sp/><ref refid="unionlv__color1__t" kindref="compound">lv_color_t</ref><sp/>color,<sp/>lv_opa_t<sp/>opa);</highlight></codeline>
<codeline lineno="176"><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="lv__canvas_8h_1a1cd8e1b6330bd4c16db4b82905a4bf32" kindref="member">lv_canvas_draw_rect</ref>(<ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref><sp/>*<sp/>canvas,<sp/>lv_coord_t<sp/>x,<sp/>lv_coord_t<sp/>y,<sp/>lv_coord_t<sp/>w,<sp/>lv_coord_t<sp/>h,</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structlv__draw__rect__dsc__t" kindref="compound">lv_draw_rect_dsc_t</ref><sp/>*<sp/>rect_dsc);</highlight></codeline>
<codeline lineno="188"><highlight class="normal"></highlight></codeline>
<codeline lineno="199"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="lv__canvas_8h_1af5758f23436009119309daeeda41a7cd" kindref="member">lv_canvas_draw_text</ref>(<ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref><sp/>*<sp/>canvas,<sp/>lv_coord_t<sp/>x,<sp/>lv_coord_t<sp/>y,<sp/>lv_coord_t<sp/>max_w,</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structlv__draw__label__dsc__t" kindref="compound">lv_draw_label_dsc_t</ref><sp/>*<sp/>label_draw_dsc,</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/>txt,<sp/>lv_label_align_t<sp/>align);</highlight></codeline>
<codeline lineno="202"><highlight class="normal"></highlight></codeline>
<codeline lineno="211"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="lv__canvas_8h_1a577e4831a91f8f49a161ba1522cf74e9" kindref="member">lv_canvas_draw_img</ref>(<ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref><sp/>*<sp/>canvas,<sp/>lv_coord_t<sp/>x,<sp/>lv_coord_t<sp/>y,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<sp/>src,</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structlv__draw__img__dsc__t" kindref="compound">lv_draw_img_dsc_t</ref><sp/>*<sp/>img_draw_dsc);</highlight></codeline>
<codeline lineno="213"><highlight class="normal"></highlight></codeline>
<codeline lineno="221"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="lv__canvas_8h_1ac40e3903c3c2c4f69dfd9754791e1313" kindref="member">lv_canvas_draw_line</ref>(<ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref><sp/>*<sp/>canvas,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structlv__point__t" kindref="compound">lv_point_t</ref><sp/>points[],<sp/>uint32_t<sp/>point_cnt,</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structlv__draw__line__dsc__t" kindref="compound">lv_draw_line_dsc_t</ref><sp/>*<sp/>line_draw_dsc);</highlight></codeline>
<codeline lineno="223"><highlight class="normal"></highlight></codeline>
<codeline lineno="231"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="lv__canvas_8h_1a808786a78deb7d5141020004a7caf330" kindref="member">lv_canvas_draw_polygon</ref>(<ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref><sp/>*<sp/>canvas,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structlv__point__t" kindref="compound">lv_point_t</ref><sp/>points[],<sp/>uint32_t<sp/>point_cnt,</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structlv__draw__rect__dsc__t" kindref="compound">lv_draw_rect_dsc_t</ref><sp/>*<sp/>poly_draw_dsc);</highlight></codeline>
<codeline lineno="233"><highlight class="normal"></highlight></codeline>
<codeline lineno="244"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="lv__canvas_8h_1a2416bd11c279be6d827f55b65e1d4859" kindref="member">lv_canvas_draw_arc</ref>(<ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref><sp/>*<sp/>canvas,<sp/>lv_coord_t<sp/>x,<sp/>lv_coord_t<sp/>y,<sp/>lv_coord_t<sp/>r,<sp/>int32_t<sp/>start_angle,</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int32_t<sp/>end_angle,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structlv__draw__line__dsc__t" kindref="compound">lv_draw_line_dsc_t</ref><sp/>*<sp/>arc_draw_dsc);</highlight></codeline>
<codeline lineno="246"><highlight class="normal"></highlight></codeline>
<codeline lineno="247"><highlight class="normal"></highlight><highlight class="comment">/**********************</highlight></codeline>
<codeline lineno="248"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>MACROS</highlight></codeline>
<codeline lineno="249"><highlight class="comment"><sp/>**********************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="250"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LV_CANVAS_BUF_SIZE_TRUE_COLOR(w,<sp/>h)<sp/>LV_IMG_BUF_SIZE_TRUE_COLOR(w,<sp/>h)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="251"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LV_CANVAS_BUF_SIZE_TRUE_COLOR_CHROMA_KEYED(w,<sp/>h)<sp/>LV_IMG_BUF_SIZE_TRUE_COLOR_CHROMA_KEYED(w,<sp/>h)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="252"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LV_CANVAS_BUF_SIZE_TRUE_COLOR_ALPHA(w,<sp/>h)<sp/>LV_IMG_BUF_SIZE_TRUE_COLOR_ALPHA(w,<sp/>h)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="253"><highlight class="normal"></highlight></codeline>
<codeline lineno="254"><highlight class="normal"></highlight><highlight class="comment">/*+<sp/>1:<sp/>to<sp/>be<sp/>sure<sp/>no<sp/>fractional<sp/>row*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="255"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LV_CANVAS_BUF_SIZE_ALPHA_1BIT(w,<sp/>h)<sp/>LV_IMG_BUF_SIZE_ALPHA_1BIT(w,<sp/>h)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="256"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LV_CANVAS_BUF_SIZE_ALPHA_2BIT(w,<sp/>h)<sp/>LV_IMG_BUF_SIZE_ALPHA_2BIT(w,<sp/>h)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="257"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LV_CANVAS_BUF_SIZE_ALPHA_4BIT(w,<sp/>h)<sp/>LV_IMG_BUF_SIZE_ALPHA_4BIT(w,<sp/>h)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="258"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LV_CANVAS_BUF_SIZE_ALPHA_8BIT(w,<sp/>h)<sp/>LV_IMG_BUF_SIZE_ALPHA_8BIT(w,<sp/>h)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="259"><highlight class="normal"></highlight></codeline>
<codeline lineno="260"><highlight class="normal"></highlight><highlight class="comment">/*4<sp/>*<sp/>X:<sp/>for<sp/>palette*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="261"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LV_CANVAS_BUF_SIZE_INDEXED_1BIT(w,<sp/>h)<sp/>LV_IMG_BUF_SIZE_INDEXED_1BIT(w,<sp/>h)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="262"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LV_CANVAS_BUF_SIZE_INDEXED_2BIT(w,<sp/>h)<sp/>LV_IMG_BUF_SIZE_INDEXED_2BIT(w,<sp/>h)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="263"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LV_CANVAS_BUF_SIZE_INDEXED_4BIT(w,<sp/>h)<sp/>LV_IMG_BUF_SIZE_INDEXED_4BIT(w,<sp/>h)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="264"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LV_CANVAS_BUF_SIZE_INDEXED_8BIT(w,<sp/>h)<sp/>LV_IMG_BUF_SIZE_INDEXED_8BIT(w,<sp/>h)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="265"><highlight class="normal"></highlight></codeline>
<codeline lineno="266"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*LV_USE_CANVAS*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="267"><highlight class="normal"></highlight></codeline>
<codeline lineno="268"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="269"><highlight class="normal">}<sp/></highlight><highlight class="comment">/*<sp/>extern<sp/>&quot;C&quot;<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="270"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="271"><highlight class="normal"></highlight></codeline>
<codeline lineno="272"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*LV_CANVAS_H*/</highlight><highlight class="preprocessor"></highlight></codeline>
    </programlisting>
    <location file="/home/kisvegabor/projects/littlevgl/eclipse-workspace/lv_sim_eclipse_sdl/lvgl/scripts/release_tmp/lvgl/src/lv_widgets/lv_canvas.h"/>
  </compounddef>
</doxygen>
