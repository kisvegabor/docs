<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="lv__task_8h" kind="file" language="C++">
    <compoundname>lv_task.h</compoundname>
    <innerclass refid="struct__lv__task__t" prot="public">_lv_task_t</innerclass>
      <sectiondef kind="enum">
      <memberdef kind="enum" id="lv__task_8h_1af3520ff6d43011872bab77edd27d4de3" prot="public" static="no">
        <name>@47</name>
        <enumvalue id="lv__task_8h_1af3520ff6d43011872bab77edd27d4de3a63f1ed372b224a31b8da52ebab208af5" prot="public">
          <name>LV_TASK_PRIO_OFF</name>
          <initializer>= 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="lv__task_8h_1af3520ff6d43011872bab77edd27d4de3a07a2ded65dab9ae8dcfa85fff6f77d23" prot="public">
          <name>LV_TASK_PRIO_LOWEST</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="lv__task_8h_1af3520ff6d43011872bab77edd27d4de3a0344c523bc7d1c7e3920abb5c0cfeeb5" prot="public">
          <name>LV_TASK_PRIO_LOW</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="lv__task_8h_1af3520ff6d43011872bab77edd27d4de3a844c317809c97853d1f0959fe381448e" prot="public">
          <name>LV_TASK_PRIO_MID</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="lv__task_8h_1af3520ff6d43011872bab77edd27d4de3a6e4148a4990dbfc98f449c9deb4c4ae9" prot="public">
          <name>LV_TASK_PRIO_HIGH</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="lv__task_8h_1af3520ff6d43011872bab77edd27d4de3a0da23266b0380ef5e9adb95f59679228" prot="public">
          <name>LV_TASK_PRIO_HIGHEST</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="lv__task_8h_1af3520ff6d43011872bab77edd27d4de3ad6a0021bc430f2998dd17f017073b351" prot="public">
          <name>_LV_TASK_PRIO_NUM</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Possible priorities for lv_tasks </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kisvegabor/projects/littlevgl/eclipse-workspace/lv_sim_eclipse_sdl/lvgl/scripts/release_tmp/lvgl/src/lv_misc/lv_task.h" line="46" column="1" bodyfile="/home/kisvegabor/projects/littlevgl/eclipse-workspace/lv_sim_eclipse_sdl/lvgl/scripts/release_tmp/lvgl/src/lv_misc/lv_task.h" bodystart="46" bodyend="54"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="lv__task_8h_1aca5c1acf415da803e1ba407eb9631a81" prot="public" static="no">
        <type>void(*</type>
        <definition>typedef void(* lv_task_cb_t) (struct _lv_task_t *)</definition>
        <argsstring>)(struct _lv_task_t *)</argsstring>
        <name>lv_task_cb_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Tasks execute this type type of functions. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kisvegabor/projects/littlevgl/eclipse-workspace/lv_sim_eclipse_sdl/lvgl/scripts/release_tmp/lvgl/src/lv_misc/lv_task.h" line="41" column="1" bodyfile="/home/kisvegabor/projects/littlevgl/eclipse-workspace/lv_sim_eclipse_sdl/lvgl/scripts/release_tmp/lvgl/src/lv_misc/lv_task.h" bodystart="41" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="lv__task_8h_1a6c90931e339c8e7d69c2663729f64f36" prot="public" static="no">
        <type>uint8_t</type>
        <definition>typedef uint8_t lv_task_prio_t</definition>
        <argsstring></argsstring>
        <name>lv_task_prio_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kisvegabor/projects/littlevgl/eclipse-workspace/lv_sim_eclipse_sdl/lvgl/scripts/release_tmp/lvgl/src/lv_misc/lv_task.h" line="55" column="1" bodyfile="/home/kisvegabor/projects/littlevgl/eclipse-workspace/lv_sim_eclipse_sdl/lvgl/scripts/release_tmp/lvgl/src/lv_misc/lv_task.h" bodystart="55" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="lv__task_8h_1a6802b3e3a3afab33e7f10868e5c522a3" prot="public" static="no">
        <type>struct <ref refid="struct__lv__task__t" kindref="compound">_lv_task_t</ref></type>
        <definition>typedef struct _lv_task_t  lv_task_t</definition>
        <argsstring></argsstring>
        <name>lv_task_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Descriptor of a lv_task </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kisvegabor/projects/littlevgl/eclipse-workspace/lv_sim_eclipse_sdl/lvgl/scripts/release_tmp/lvgl/src/lv_misc/lv_task.h" line="69" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="lv__task_8h_1a1fbec26f4fdfaa73d980ce1ac32cf8e1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void _lv_task_core_init</definition>
        <argsstring>(void)</argsstring>
        <name>_lv_task_core_init</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Init the lv_task module </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kisvegabor/projects/littlevgl/eclipse-workspace/lv_sim_eclipse_sdl/lvgl/scripts/release_tmp/lvgl/src/lv_misc/lv_task.h" line="78" column="1"/>
      </memberdef>
      <memberdef kind="function" id="lv__task_8h_1aab6da624f550834c19eec3ef341d7014" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct__lv__task__t" kindref="compound">lv_task_t</ref> *</type>
        <definition>lv_task_t* lv_task_create_basic</definition>
        <argsstring>(void)</argsstring>
        <name>lv_task_create_basic</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Create an &quot;empty&quot; task. It needs to initialized with at least <computeroutput>lv_task_set_cb</computeroutput> and <computeroutput>lv_task_set_period</computeroutput> <simplesect kind="return"><para>pointer to the created task </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kisvegabor/projects/littlevgl/eclipse-workspace/lv_sim_eclipse_sdl/lvgl/scripts/release_tmp/lvgl/src/lv_misc/lv_task.h" line="95" column="1"/>
      </memberdef>
      <memberdef kind="function" id="lv__task_8h_1ad078e07a5ce541e45cc5483864987307" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct__lv__task__t" kindref="compound">lv_task_t</ref> *</type>
        <definition>lv_task_t* lv_task_create</definition>
        <argsstring>(lv_task_cb_t task_xcb, uint32_t period, lv_task_prio_t prio, void *user_data)</argsstring>
        <name>lv_task_create</name>
        <param>
          <type>lv_task_cb_t</type>
          <declname>task_xcb</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>period</declname>
        </param>
        <param>
          <type>lv_task_prio_t</type>
          <declname>prio</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>user_data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Create a new lv_task <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>task_xcb</parametername>
</parameternamelist>
<parameterdescription>
<para>a callback which is the task itself. It will be called periodically. (the &apos;x&apos; in the argument name indicates that its not a fully generic function because it not follows the <computeroutput>func_name(object, callback, ...)</computeroutput> convention) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>period</parametername>
</parameternamelist>
<parameterdescription>
<para>call period in ms unit </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>prio</parametername>
</parameternamelist>
<parameterdescription>
<para>priority of the task (LV_TASK_PRIO_OFF means the task is stopped) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>user_data</parametername>
</parameternamelist>
<parameterdescription>
<para>custom parameter </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>pointer to the new task </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kisvegabor/projects/littlevgl/eclipse-workspace/lv_sim_eclipse_sdl/lvgl/scripts/release_tmp/lvgl/src/lv_misc/lv_task.h" line="107" column="1"/>
      </memberdef>
      <memberdef kind="function" id="lv__task_8h_1afde0b99f514da46d5af6548c62fb8c03" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void lv_task_del</definition>
        <argsstring>(lv_task_t *task)</argsstring>
        <name>lv_task_del</name>
        <param>
          <type><ref refid="struct__lv__task__t" kindref="compound">lv_task_t</ref> *</type>
          <declname>task</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Delete a lv_task <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>task</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to task_cb created by task </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kisvegabor/projects/littlevgl/eclipse-workspace/lv_sim_eclipse_sdl/lvgl/scripts/release_tmp/lvgl/src/lv_misc/lv_task.h" line="113" column="1"/>
      </memberdef>
      <memberdef kind="function" id="lv__task_8h_1a957defb9f9d7c71670bc017f1ecd2ddc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void lv_task_set_cb</definition>
        <argsstring>(lv_task_t *task, lv_task_cb_t task_cb)</argsstring>
        <name>lv_task_set_cb</name>
        <param>
          <type><ref refid="struct__lv__task__t" kindref="compound">lv_task_t</ref> *</type>
          <declname>task</declname>
        </param>
        <param>
          <type>lv_task_cb_t</type>
          <declname>task_cb</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set the callback the task (the function to call periodically) <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>task</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to a task </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>task_cb</parametername>
</parameternamelist>
<parameterdescription>
<para>the function to call periodically </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kisvegabor/projects/littlevgl/eclipse-workspace/lv_sim_eclipse_sdl/lvgl/scripts/release_tmp/lvgl/src/lv_misc/lv_task.h" line="120" column="1"/>
      </memberdef>
      <memberdef kind="function" id="lv__task_8h_1a3765ff7deb53af273e56acc25eeb3d03" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void lv_task_set_prio</definition>
        <argsstring>(lv_task_t *task, lv_task_prio_t prio)</argsstring>
        <name>lv_task_set_prio</name>
        <param>
          <type><ref refid="struct__lv__task__t" kindref="compound">lv_task_t</ref> *</type>
          <declname>task</declname>
        </param>
        <param>
          <type>lv_task_prio_t</type>
          <declname>prio</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set new priority for a lv_task <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>task</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to a lv_task </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>prio</parametername>
</parameternamelist>
<parameterdescription>
<para>the new priority </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kisvegabor/projects/littlevgl/eclipse-workspace/lv_sim_eclipse_sdl/lvgl/scripts/release_tmp/lvgl/src/lv_misc/lv_task.h" line="127" column="1"/>
      </memberdef>
      <memberdef kind="function" id="lv__task_8h_1a26a0623388938e311f72cad7b0eb7e38" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void lv_task_set_period</definition>
        <argsstring>(lv_task_t *task, uint32_t period)</argsstring>
        <name>lv_task_set_period</name>
        <param>
          <type><ref refid="struct__lv__task__t" kindref="compound">lv_task_t</ref> *</type>
          <declname>task</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>period</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set new period for a lv_task <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>task</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to a lv_task </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>period</parametername>
</parameternamelist>
<parameterdescription>
<para>the new period </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kisvegabor/projects/littlevgl/eclipse-workspace/lv_sim_eclipse_sdl/lvgl/scripts/release_tmp/lvgl/src/lv_misc/lv_task.h" line="134" column="1"/>
      </memberdef>
      <memberdef kind="function" id="lv__task_8h_1a13534e19f41075904115a60a3a2232aa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void lv_task_ready</definition>
        <argsstring>(lv_task_t *task)</argsstring>
        <name>lv_task_ready</name>
        <param>
          <type><ref refid="struct__lv__task__t" kindref="compound">lv_task_t</ref> *</type>
          <declname>task</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Make a lv_task ready. It will not wait its period. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>task</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to a lv_task. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kisvegabor/projects/littlevgl/eclipse-workspace/lv_sim_eclipse_sdl/lvgl/scripts/release_tmp/lvgl/src/lv_misc/lv_task.h" line="140" column="1"/>
      </memberdef>
      <memberdef kind="function" id="lv__task_8h_1ad0df152aed01363bd4afc46d5aa3d628" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void lv_task_set_repeat_count</definition>
        <argsstring>(lv_task_t *task, int32_t repeat_count)</argsstring>
        <name>lv_task_set_repeat_count</name>
        <param>
          <type><ref refid="struct__lv__task__t" kindref="compound">lv_task_t</ref> *</type>
          <declname>task</declname>
        </param>
        <param>
          <type>int32_t</type>
          <declname>repeat_count</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set the number of times a task will repeat. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>task</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to a lv_task. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>repeat_count</parametername>
</parameternamelist>
<parameterdescription>
<para>-1 : infinity; 0 : stop ; n&gt;0: residual times </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kisvegabor/projects/littlevgl/eclipse-workspace/lv_sim_eclipse_sdl/lvgl/scripts/release_tmp/lvgl/src/lv_misc/lv_task.h" line="147" column="1"/>
      </memberdef>
      <memberdef kind="function" id="lv__task_8h_1a415052f6b2a319f191fb50eb91e0e117" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void lv_task_reset</definition>
        <argsstring>(lv_task_t *task)</argsstring>
        <name>lv_task_reset</name>
        <param>
          <type><ref refid="struct__lv__task__t" kindref="compound">lv_task_t</ref> *</type>
          <declname>task</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Reset a lv_task. It will be called the previously set period milliseconds later. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>task</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to a lv_task. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kisvegabor/projects/littlevgl/eclipse-workspace/lv_sim_eclipse_sdl/lvgl/scripts/release_tmp/lvgl/src/lv_misc/lv_task.h" line="154" column="1"/>
      </memberdef>
      <memberdef kind="function" id="lv__task_8h_1a6d867c22a34e5150a1e3d0f376ada417" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void lv_task_enable</definition>
        <argsstring>(bool en)</argsstring>
        <name>lv_task_enable</name>
        <param>
          <type>bool</type>
          <declname>en</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Enable or disable the whole lv_task handling <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>en</parametername>
</parameternamelist>
<parameterdescription>
<para>true: lv_task handling is running, false: lv_task handling is suspended </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kisvegabor/projects/littlevgl/eclipse-workspace/lv_sim_eclipse_sdl/lvgl/scripts/release_tmp/lvgl/src/lv_misc/lv_task.h" line="160" column="1"/>
      </memberdef>
      <memberdef kind="function" id="lv__task_8h_1aa1ed2cc262d5606bf7a5790d13b95c88" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint8_t</type>
        <definition>uint8_t lv_task_get_idle</definition>
        <argsstring>(void)</argsstring>
        <name>lv_task_get_idle</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get idle percentage <simplesect kind="return"><para>the lv_task idle in percentage </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kisvegabor/projects/littlevgl/eclipse-workspace/lv_sim_eclipse_sdl/lvgl/scripts/release_tmp/lvgl/src/lv_misc/lv_task.h" line="166" column="1"/>
      </memberdef>
      <memberdef kind="function" id="lv__task_8h_1a13fecbcc8ddfb2bb50ed787fe239c5c6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct__lv__task__t" kindref="compound">lv_task_t</ref> *</type>
        <definition>lv_task_t* lv_task_get_next</definition>
        <argsstring>(lv_task_t *task)</argsstring>
        <name>lv_task_get_next</name>
        <param>
          <type><ref refid="struct__lv__task__t" kindref="compound">lv_task_t</ref> *</type>
          <declname>task</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Iterate through the tasks <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>task</parametername>
</parameternamelist>
<parameterdescription>
<para>NULL to start iteration or the previous return value to get the next task </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the next task or NULL if there is no more task </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kisvegabor/projects/littlevgl/eclipse-workspace/lv_sim_eclipse_sdl/lvgl/scripts/release_tmp/lvgl/src/lv_misc/lv_task.h" line="173" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"></codeline>
<codeline lineno="7"><highlight class="preprocessor">#ifndef<sp/>LV_TASK_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LV_TASK_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="comment">/*********************</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>INCLUDES</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*********************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../lv_conf_internal.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdint.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdbool.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="lv__mem_8h" kindref="compound">lv_mem.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;lv_ll.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="comment">/*********************</highlight></codeline>
<codeline lineno="25"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>DEFINES</highlight></codeline>
<codeline lineno="26"><highlight class="comment"><sp/>*********************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>LV_ATTRIBUTE_TASK_HANDLER</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LV_ATTRIBUTE_TASK_HANDLER</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LV_NO_TASK_READY<sp/>0xFFFFFFFF</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="comment">/**********************</highlight></codeline>
<codeline lineno="33"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>TYPEDEFS</highlight></codeline>
<codeline lineno="34"><highlight class="comment"><sp/>**********************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct__lv__task__t" kindref="compound">_lv_task_t</ref>;</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>void<sp/>(*lv_task_cb_t)(</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct__lv__task__t" kindref="compound">_lv_task_t</ref><sp/>*);</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/>LV_TASK_PRIO_OFF<sp/>=<sp/>0,</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/>LV_TASK_PRIO_LOWEST,</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/>LV_TASK_PRIO_LOW,</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/>LV_TASK_PRIO_MID,</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/>LV_TASK_PRIO_HIGH,</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/>LV_TASK_PRIO_HIGHEST,</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/>_LV_TASK_PRIO_NUM,</highlight></codeline>
<codeline lineno="54"><highlight class="normal">};</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>uint8_t<sp/>lv_task_prio_t;</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="60" refid="struct__lv__task__t" refkind="compound"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct__lv__task__t" kindref="compound">_lv_task_t</ref><sp/>{</highlight></codeline>
<codeline lineno="61" refid="struct__lv__task__t_1acea86df3e8ac37d7f15d8810e59ac1e9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="struct__lv__task__t_1acea86df3e8ac37d7f15d8810e59ac1e9" kindref="member">period</ref>;<sp/></highlight></codeline>
<codeline lineno="62" refid="struct__lv__task__t_1a45e9f69602e1ffc1bbc14670dfa9eca4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="struct__lv__task__t_1a45e9f69602e1ffc1bbc14670dfa9eca4" kindref="member">last_run</ref>;<sp/></highlight></codeline>
<codeline lineno="63" refid="struct__lv__task__t_1aeecd883579ab15e75e03e35916f1647d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>lv_task_cb_t<sp/><ref refid="struct__lv__task__t_1aeecd883579ab15e75e03e35916f1647d" kindref="member">task_cb</ref>;<sp/></highlight></codeline>
<codeline lineno="65" refid="struct__lv__task__t_1a6da7b78620d2d93e6e5f09192f7ceeb6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<sp/><ref refid="struct__lv__task__t_1a6da7b78620d2d93e6e5f09192f7ceeb6" kindref="member">user_data</ref>;<sp/></highlight></codeline>
<codeline lineno="67" refid="struct__lv__task__t_1a70d6d5a2edcc99f3bb486678d881b6bd" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>int32_t<sp/><ref refid="struct__lv__task__t_1a70d6d5a2edcc99f3bb486678d881b6bd" kindref="member">repeat_count</ref>;<sp/></highlight></codeline>
<codeline lineno="68" refid="struct__lv__task__t_1a436283203b4f533a33a132de7938a672" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/><ref refid="struct__lv__task__t_1a436283203b4f533a33a132de7938a672" kindref="member">prio</ref><sp/>:<sp/>3;<sp/></highlight></codeline>
<codeline lineno="69"><highlight class="normal">}<sp/><ref refid="struct__lv__task__t" kindref="compound">lv_task_t</ref>;</highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight><highlight class="comment">/**********************</highlight></codeline>
<codeline lineno="72"><highlight class="comment"><sp/>*<sp/>GLOBAL<sp/>PROTOTYPES</highlight></codeline>
<codeline lineno="73"><highlight class="comment"><sp/>**********************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>_lv_task_core_init(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="81"></codeline>
<codeline lineno="86"><highlight class="normal">LV_ATTRIBUTE_TASK_HANDLER<sp/>uint32_t<sp/>lv_task_handler(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight></codeline>
<codeline lineno="89"></codeline>
<codeline lineno="95"><highlight class="normal"><ref refid="struct__lv__task__t" kindref="compound">lv_task_t</ref><sp/>*<sp/>lv_task_create_basic(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"><ref refid="struct__lv__task__t" kindref="compound">lv_task_t</ref><sp/>*<sp/>lv_task_create(lv_task_cb_t<sp/>task_xcb,<sp/>uint32_t<sp/><ref refid="struct__lv__task__t_1acea86df3e8ac37d7f15d8810e59ac1e9" kindref="member">period</ref>,<sp/>lv_task_prio_t<sp/><ref refid="struct__lv__task__t_1a436283203b4f533a33a132de7938a672" kindref="member">prio</ref>,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<sp/><ref refid="struct__lv__task__t_1a6da7b78620d2d93e6e5f09192f7ceeb6" kindref="member">user_data</ref>);</highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>lv_task_del(<ref refid="struct__lv__task__t" kindref="compound">lv_task_t</ref><sp/>*<sp/>task);</highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>lv_task_set_cb(<ref refid="struct__lv__task__t" kindref="compound">lv_task_t</ref><sp/>*<sp/>task,<sp/>lv_task_cb_t<sp/><ref refid="struct__lv__task__t_1aeecd883579ab15e75e03e35916f1647d" kindref="member">task_cb</ref>);</highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>lv_task_set_prio(<ref refid="struct__lv__task__t" kindref="compound">lv_task_t</ref><sp/>*<sp/>task,<sp/>lv_task_prio_t<sp/><ref refid="struct__lv__task__t_1a436283203b4f533a33a132de7938a672" kindref="member">prio</ref>);</highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>lv_task_set_period(<ref refid="struct__lv__task__t" kindref="compound">lv_task_t</ref><sp/>*<sp/>task,<sp/>uint32_t<sp/><ref refid="struct__lv__task__t_1acea86df3e8ac37d7f15d8810e59ac1e9" kindref="member">period</ref>);</highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>lv_task_ready(<ref refid="struct__lv__task__t" kindref="compound">lv_task_t</ref><sp/>*<sp/>task);</highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>lv_task_set_repeat_count(<ref refid="struct__lv__task__t" kindref="compound">lv_task_t</ref><sp/>*<sp/>task,<sp/>int32_t<sp/><ref refid="struct__lv__task__t_1a70d6d5a2edcc99f3bb486678d881b6bd" kindref="member">repeat_count</ref>);</highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>lv_task_reset(<ref refid="struct__lv__task__t" kindref="compound">lv_task_t</ref><sp/>*<sp/>task);</highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>lv_task_enable(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>en);</highlight></codeline>
<codeline lineno="161"><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal">uint8_t<sp/>lv_task_get_idle(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="167"><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"><ref refid="struct__lv__task__t" kindref="compound">lv_task_t</ref><sp/>*<sp/>lv_task_get_next(<ref refid="struct__lv__task__t" kindref="compound">lv_task_t</ref><sp/>*<sp/>task);</highlight></codeline>
<codeline lineno="174"><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight><highlight class="comment">/**********************</highlight></codeline>
<codeline lineno="176"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>MACROS</highlight></codeline>
<codeline lineno="177"><highlight class="comment"><sp/>**********************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal">}<sp/></highlight><highlight class="comment">/*<sp/>extern<sp/>&quot;C&quot;<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="/home/kisvegabor/projects/littlevgl/eclipse-workspace/lv_sim_eclipse_sdl/lvgl/scripts/release_tmp/lvgl/src/lv_misc/lv_task.h"/>
  </compounddef>
</doxygen>
