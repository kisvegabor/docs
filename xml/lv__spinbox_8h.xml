<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="lv__spinbox_8h" kind="file" language="C++">
    <compoundname>lv_spinbox.h</compoundname>
    <innerclass refid="structlv__spinbox__ext__t" prot="public">lv_spinbox_ext_t</innerclass>
      <sectiondef kind="enum">
      <memberdef kind="enum" id="lv__spinbox_8h_1a26e1124d33b4acdb532c49f6498df549" prot="public" static="no">
        <name>@101</name>
        <enumvalue id="lv__spinbox_8h_1a26e1124d33b4acdb532c49f6498df549a51564b2b214f2cbedc8a0f0c37556a31" prot="public">
          <name>LV_SPINBOX_PART_BG</name>
          <initializer>= LV_TEXTAREA_PART_BG</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="lv__spinbox_8h_1a26e1124d33b4acdb532c49f6498df549a9841583bde45b8c813c78a57c667198c" prot="public">
          <name>LV_SPINBOX_PART_CURSOR</name>
          <initializer>= LV_TEXTAREA_PART_CURSOR</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="lv__spinbox_8h_1a26e1124d33b4acdb532c49f6498df549ae4036c93a7abbb1934edbc9e3ed25d56" prot="public">
          <name>_LV_SPINBOX_PART_VIRTUAL_LAST</name>
          <initializer>= _LV_TEXTAREA_PART_VIRTUAL_LAST</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="lv__spinbox_8h_1a26e1124d33b4acdb532c49f6498df549a1f6726efce228c0b4d35635ac44e907f" prot="public">
          <name>_LV_SPINBOX_PART_REAL_LAST</name>
          <initializer>= _LV_TEXTAREA_PART_REAL_LAST</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kisvegabor/projects/littlevgl/eclipse-workspace/lv_sim_eclipse_sdl/lvgl/scripts/release_tmp/lvgl/src/lv_widgets/lv_spinbox.h" line="52" column="1" bodyfile="/home/kisvegabor/projects/littlevgl/eclipse-workspace/lv_sim_eclipse_sdl/lvgl/scripts/release_tmp/lvgl/src/lv_widgets/lv_spinbox.h" bodystart="52" bodyend="57"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="lv__spinbox_8h_1ab926af015ac107981c142dcf4f625f30" prot="public" static="no">
        <type>uint8_t</type>
        <definition>typedef uint8_t lv_spinbox_part_t</definition>
        <argsstring></argsstring>
        <name>lv_spinbox_part_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kisvegabor/projects/littlevgl/eclipse-workspace/lv_sim_eclipse_sdl/lvgl/scripts/release_tmp/lvgl/src/lv_widgets/lv_spinbox.h" line="58" column="1" bodyfile="/home/kisvegabor/projects/littlevgl/eclipse-workspace/lv_sim_eclipse_sdl/lvgl/scripts/release_tmp/lvgl/src/lv_widgets/lv_spinbox.h" bodystart="58" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="lv__spinbox_8h_1a3be387e9a81afe2e5e4a027e5ebcd4ba" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref> *</type>
        <definition>lv_obj_t* lv_spinbox_create</definition>
        <argsstring>(lv_obj_t *par, const lv_obj_t *copy)</argsstring>
        <name>lv_spinbox_create</name>
        <param>
          <type><ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref> *</type>
          <declname>par</declname>
        </param>
        <param>
          <type>const <ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref> *</type>
          <declname>copy</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Create a spinbox objects <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>par</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to an object, it will be the parent of the new spinbox </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>copy</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to a spinbox object, if not NULL then the new object will be copied from it </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>pointer to the created spinbox </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kisvegabor/projects/littlevgl/eclipse-workspace/lv_sim_eclipse_sdl/lvgl/scripts/release_tmp/lvgl/src/lv_widgets/lv_spinbox.h" line="70" column="1"/>
      </memberdef>
      <memberdef kind="function" id="lv__spinbox_8h_1ac9954d07f465c354001d47718acf2544" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void lv_spinbox_set_rollover</definition>
        <argsstring>(lv_obj_t *spinbox, bool b)</argsstring>
        <name>lv_spinbox_set_rollover</name>
        <param>
          <type><ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref> *</type>
          <declname>spinbox</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set spinbox rollover function <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>spinbox</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to spinbox </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>b</parametername>
</parameternamelist>
<parameterdescription>
<para>true or false to enable or disable (default) </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kisvegabor/projects/littlevgl/eclipse-workspace/lv_sim_eclipse_sdl/lvgl/scripts/release_tmp/lvgl/src/lv_widgets/lv_spinbox.h" line="81" column="1"/>
      </memberdef>
      <memberdef kind="function" id="lv__spinbox_8h_1a596c05f521026b722a06c3314ffdd824" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void lv_spinbox_set_value</definition>
        <argsstring>(lv_obj_t *spinbox, int32_t i)</argsstring>
        <name>lv_spinbox_set_value</name>
        <param>
          <type><ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref> *</type>
          <declname>spinbox</declname>
        </param>
        <param>
          <type>int32_t</type>
          <declname>i</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set spinbox value <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>spinbox</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to spinbox </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>i</parametername>
</parameternamelist>
<parameterdescription>
<para>value to be set </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kisvegabor/projects/littlevgl/eclipse-workspace/lv_sim_eclipse_sdl/lvgl/scripts/release_tmp/lvgl/src/lv_widgets/lv_spinbox.h" line="88" column="1"/>
      </memberdef>
      <memberdef kind="function" id="lv__spinbox_8h_1aa7e92d5294f1ba7150da3ecc1516f760" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void lv_spinbox_set_digit_format</definition>
        <argsstring>(lv_obj_t *spinbox, uint8_t digit_count, uint8_t separator_position)</argsstring>
        <name>lv_spinbox_set_digit_format</name>
        <param>
          <type><ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref> *</type>
          <declname>spinbox</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>digit_count</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>separator_position</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set spinbox digit format (digit count and decimal format) <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>spinbox</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to spinbox </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>digit_count</parametername>
</parameternamelist>
<parameterdescription>
<para>number of digit excluding the decimal separator and the sign </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>separator_position</parametername>
</parameternamelist>
<parameterdescription>
<para>number of digit before the decimal point. If 0, decimal point is not shown </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kisvegabor/projects/littlevgl/eclipse-workspace/lv_sim_eclipse_sdl/lvgl/scripts/release_tmp/lvgl/src/lv_widgets/lv_spinbox.h" line="97" column="1"/>
      </memberdef>
      <memberdef kind="function" id="lv__spinbox_8h_1a3c38ae3f6dd3f596ed3963bd0b2d872f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void lv_spinbox_set_step</definition>
        <argsstring>(lv_obj_t *spinbox, uint32_t step)</argsstring>
        <name>lv_spinbox_set_step</name>
        <param>
          <type><ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref> *</type>
          <declname>spinbox</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>step</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set spinbox step <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>spinbox</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to spinbox </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>step</parametername>
</parameternamelist>
<parameterdescription>
<para>steps on increment/decrement </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kisvegabor/projects/littlevgl/eclipse-workspace/lv_sim_eclipse_sdl/lvgl/scripts/release_tmp/lvgl/src/lv_widgets/lv_spinbox.h" line="104" column="1"/>
      </memberdef>
      <memberdef kind="function" id="lv__spinbox_8h_1ab308848003544c0fc54505ae1ed7cea7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void lv_spinbox_set_range</definition>
        <argsstring>(lv_obj_t *spinbox, int32_t range_min, int32_t range_max)</argsstring>
        <name>lv_spinbox_set_range</name>
        <param>
          <type><ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref> *</type>
          <declname>spinbox</declname>
        </param>
        <param>
          <type>int32_t</type>
          <declname>range_min</declname>
        </param>
        <param>
          <type>int32_t</type>
          <declname>range_max</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set spinbox value range <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>spinbox</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to spinbox </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>range_min</parametername>
</parameternamelist>
<parameterdescription>
<para>maximum value, inclusive </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>range_max</parametername>
</parameternamelist>
<parameterdescription>
<para>minimum value, inclusive </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kisvegabor/projects/littlevgl/eclipse-workspace/lv_sim_eclipse_sdl/lvgl/scripts/release_tmp/lvgl/src/lv_widgets/lv_spinbox.h" line="112" column="1"/>
      </memberdef>
      <memberdef kind="function" id="lv__spinbox_8h_1aa2235aa2900d41f1d8e1973dae9f9fed" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void lv_spinbox_set_padding_left</definition>
        <argsstring>(lv_obj_t *spinbox, uint8_t padding)</argsstring>
        <name>lv_spinbox_set_padding_left</name>
        <param>
          <type><ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref> *</type>
          <declname>spinbox</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>padding</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set spinbox left padding in digits count (added between sign and first digit) <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>spinbox</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to spinbox </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>cb</parametername>
</parameternamelist>
<parameterdescription>
<para>Callback function called on value change event </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kisvegabor/projects/littlevgl/eclipse-workspace/lv_sim_eclipse_sdl/lvgl/scripts/release_tmp/lvgl/src/lv_widgets/lv_spinbox.h" line="119" column="1"/>
      </memberdef>
      <memberdef kind="function" id="lv__spinbox_8h_1a884cfef8eb2f549cbe15c86e55ef2129" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool lv_spinbox_get_rollover</definition>
        <argsstring>(lv_obj_t *spinbox)</argsstring>
        <name>lv_spinbox_get_rollover</name>
        <param>
          <type><ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref> *</type>
          <declname>spinbox</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get spinbox rollover function status <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>spinbox</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to spinbox </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kisvegabor/projects/littlevgl/eclipse-workspace/lv_sim_eclipse_sdl/lvgl/scripts/release_tmp/lvgl/src/lv_widgets/lv_spinbox.h" line="129" column="1"/>
      </memberdef>
      <memberdef kind="function" id="lv__spinbox_8h_1a85347e74e9cd4ff203244448c5b483a6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int32_t</type>
        <definition>int32_t lv_spinbox_get_value</definition>
        <argsstring>(lv_obj_t *spinbox)</argsstring>
        <name>lv_spinbox_get_value</name>
        <param>
          <type><ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref> *</type>
          <declname>spinbox</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the spinbox numeral value (user has to convert to float according to its digit format) <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>spinbox</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to spinbox </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>value integer value of the spinbox </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kisvegabor/projects/littlevgl/eclipse-workspace/lv_sim_eclipse_sdl/lvgl/scripts/release_tmp/lvgl/src/lv_widgets/lv_spinbox.h" line="136" column="1"/>
      </memberdef>
      <memberdef kind="function" id="lv__spinbox_8h_1a4ba35a86d06bf4af1b1abee5ebab4f4a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void lv_spinbox_step_next</definition>
        <argsstring>(lv_obj_t *spinbox)</argsstring>
        <name>lv_spinbox_step_next</name>
        <param>
          <type><ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref> *</type>
          <declname>spinbox</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Select next lower digit for edition by dividing the step by 10 <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>spinbox</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to spinbox </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kisvegabor/projects/littlevgl/eclipse-workspace/lv_sim_eclipse_sdl/lvgl/scripts/release_tmp/lvgl/src/lv_widgets/lv_spinbox.h" line="146" column="1"/>
      </memberdef>
      <memberdef kind="function" id="lv__spinbox_8h_1a0fd786948cda7fad47bee2c8ded6ca92" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void lv_spinbox_step_prev</definition>
        <argsstring>(lv_obj_t *spinbox)</argsstring>
        <name>lv_spinbox_step_prev</name>
        <param>
          <type><ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref> *</type>
          <declname>spinbox</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Select next higher digit for edition by multiplying the step by 10 <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>spinbox</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to spinbox </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kisvegabor/projects/littlevgl/eclipse-workspace/lv_sim_eclipse_sdl/lvgl/scripts/release_tmp/lvgl/src/lv_widgets/lv_spinbox.h" line="152" column="1"/>
      </memberdef>
      <memberdef kind="function" id="lv__spinbox_8h_1abf28619a10f48ccfcb736b51b9ee5e46" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void lv_spinbox_increment</definition>
        <argsstring>(lv_obj_t *spinbox)</argsstring>
        <name>lv_spinbox_increment</name>
        <param>
          <type><ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref> *</type>
          <declname>spinbox</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Increment spinbox value by one step <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>spinbox</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to spinbox </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kisvegabor/projects/littlevgl/eclipse-workspace/lv_sim_eclipse_sdl/lvgl/scripts/release_tmp/lvgl/src/lv_widgets/lv_spinbox.h" line="158" column="1"/>
      </memberdef>
      <memberdef kind="function" id="lv__spinbox_8h_1ad5971885a5b53fc67b46b82c27b43a4d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void lv_spinbox_decrement</definition>
        <argsstring>(lv_obj_t *spinbox)</argsstring>
        <name>lv_spinbox_decrement</name>
        <param>
          <type><ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref> *</type>
          <declname>spinbox</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Decrement spinbox value by one step <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>spinbox</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to spinbox </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kisvegabor/projects/littlevgl/eclipse-workspace/lv_sim_eclipse_sdl/lvgl/scripts/release_tmp/lvgl/src/lv_widgets/lv_spinbox.h" line="164" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"></codeline>
<codeline lineno="6"><highlight class="preprocessor">#ifndef<sp/>LV_SPINBOX_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LV_SPINBOX_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">/*********************</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>INCLUDES</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*********************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../lv_conf_internal.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>LV_USE_SPINBOX<sp/>!=<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="comment">/*Testing<sp/>of<sp/>dependencies*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>LV_USE_TEXTAREA<sp/>==<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#error<sp/>&quot;lv_spinbox:<sp/>lv_ta<sp/>is<sp/>required.<sp/>Enable<sp/>it<sp/>in<sp/>lv_conf.h<sp/>(LV_USE_TEXTAREA<sp/><sp/>1)<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../lv_core/lv_obj.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../lv_widgets/lv_textarea.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="comment">/*********************</highlight></codeline>
<codeline lineno="29"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>DEFINES</highlight></codeline>
<codeline lineno="30"><highlight class="comment"><sp/>*********************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LV_SPINBOX_MAX_DIGIT_COUNT<sp/>10</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="comment">/**********************</highlight></codeline>
<codeline lineno="34"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>TYPEDEFS</highlight></codeline>
<codeline lineno="35"><highlight class="comment"><sp/>**********************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="comment">/*Data<sp/>of<sp/>spinbox*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38" refid="structlv__spinbox__ext__t" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structlv__textarea__ext__t" kindref="compound">lv_textarea_ext_t</ref><sp/>ta;<sp/></highlight><highlight class="comment">/*Ext.<sp/>of<sp/>ancestor*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*New<sp/>data<sp/>for<sp/>this<sp/>type<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/>int32_t<sp/>value;</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/>int32_t<sp/>range_max;</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/>int32_t<sp/>range_min;</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/>int32_t<sp/>step;</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>rollover<sp/>:<sp/>1;<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>to<sp/>true<sp/>for<sp/>rollover<sp/>functionality</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/>digit_count<sp/>:<sp/>4;</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/>dec_point_pos<sp/>:<sp/>4;<sp/></highlight><highlight class="comment">/*if<sp/>0,<sp/>there<sp/>is<sp/>no<sp/>separator<sp/>and<sp/>the<sp/>number<sp/>is<sp/>an<sp/>integer*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/>digit_padding_left<sp/>:<sp/>4;</highlight></codeline>
<codeline lineno="49"><highlight class="normal">}<sp/><ref refid="structlv__spinbox__ext__t" kindref="compound">lv_spinbox_ext_t</ref>;</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="comment">/*Styles*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/>LV_SPINBOX_PART_BG<sp/>=<sp/>LV_TEXTAREA_PART_BG,</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/>LV_SPINBOX_PART_CURSOR<sp/>=<sp/>LV_TEXTAREA_PART_CURSOR,</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/>_LV_SPINBOX_PART_VIRTUAL_LAST<sp/>=<sp/>_LV_TEXTAREA_PART_VIRTUAL_LAST,</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/>_LV_SPINBOX_PART_REAL_LAST<sp/>=<sp/>_LV_TEXTAREA_PART_REAL_LAST,</highlight></codeline>
<codeline lineno="57"><highlight class="normal">};</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>uint8_t<sp/>lv_spinbox_part_t;</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight><highlight class="comment">/**********************</highlight></codeline>
<codeline lineno="61"><highlight class="comment"><sp/>*<sp/>GLOBAL<sp/>PROTOTYPES</highlight></codeline>
<codeline lineno="62"><highlight class="comment"><sp/>**********************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref><sp/>*<sp/><ref refid="lv__spinbox_8h_1a3be387e9a81afe2e5e4a027e5ebcd4ba" kindref="member">lv_spinbox_create</ref>(<ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref><sp/>*<sp/>par,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref><sp/>*<sp/>copy);</highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight><highlight class="comment">/*=====================</highlight></codeline>
<codeline lineno="73"><highlight class="comment"><sp/>*<sp/>Setter<sp/>functions</highlight></codeline>
<codeline lineno="74"><highlight class="comment"><sp/>*====================*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="lv__spinbox_8h_1ac9954d07f465c354001d47718acf2544" kindref="member">lv_spinbox_set_rollover</ref>(<ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref><sp/>*<sp/>spinbox,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>b);</highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="lv__spinbox_8h_1a596c05f521026b722a06c3314ffdd824" kindref="member">lv_spinbox_set_value</ref>(<ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref><sp/>*<sp/>spinbox,<sp/>int32_t<sp/>i);</highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="lv__spinbox_8h_1aa7e92d5294f1ba7150da3ecc1516f760" kindref="member">lv_spinbox_set_digit_format</ref>(<ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref><sp/>*<sp/>spinbox,<sp/>uint8_t<sp/>digit_count,<sp/>uint8_t<sp/>separator_position);</highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="lv__spinbox_8h_1a3c38ae3f6dd3f596ed3963bd0b2d872f" kindref="member">lv_spinbox_set_step</ref>(<ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref><sp/>*<sp/>spinbox,<sp/>uint32_t<sp/>step);</highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="lv__spinbox_8h_1ab308848003544c0fc54505ae1ed7cea7" kindref="member">lv_spinbox_set_range</ref>(<ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref><sp/>*<sp/>spinbox,<sp/>int32_t<sp/>range_min,<sp/>int32_t<sp/>range_max);</highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="lv__spinbox_8h_1aa2235aa2900d41f1d8e1973dae9f9fed" kindref="member">lv_spinbox_set_padding_left</ref>(<ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref><sp/>*<sp/>spinbox,<sp/>uint8_t<sp/>padding);</highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight><highlight class="comment">/*=====================</highlight></codeline>
<codeline lineno="122"><highlight class="comment"><sp/>*<sp/>Getter<sp/>functions</highlight></codeline>
<codeline lineno="123"><highlight class="comment"><sp/>*====================*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="lv__spinbox_8h_1a884cfef8eb2f549cbe15c86e55ef2129" kindref="member">lv_spinbox_get_rollover</ref>(<ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref><sp/>*<sp/>spinbox);</highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal">int32_t<sp/><ref refid="lv__spinbox_8h_1a85347e74e9cd4ff203244448c5b483a6" kindref="member">lv_spinbox_get_value</ref>(<ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref><sp/>*<sp/>spinbox);</highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight><highlight class="comment">/*=====================</highlight></codeline>
<codeline lineno="139"><highlight class="comment"><sp/>*<sp/>Other<sp/>functions</highlight></codeline>
<codeline lineno="140"><highlight class="comment"><sp/>*====================*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="lv__spinbox_8h_1a4ba35a86d06bf4af1b1abee5ebab4f4a" kindref="member">lv_spinbox_step_next</ref>(<ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref><sp/>*<sp/>spinbox);</highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="lv__spinbox_8h_1a0fd786948cda7fad47bee2c8ded6ca92" kindref="member">lv_spinbox_step_prev</ref>(<ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref><sp/>*<sp/>spinbox);</highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="lv__spinbox_8h_1abf28619a10f48ccfcb736b51b9ee5e46" kindref="member">lv_spinbox_increment</ref>(<ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref><sp/>*<sp/>spinbox);</highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="lv__spinbox_8h_1ad5971885a5b53fc67b46b82c27b43a4d" kindref="member">lv_spinbox_decrement</ref>(<ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref><sp/>*<sp/>spinbox);</highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight><highlight class="comment">/**********************</highlight></codeline>
<codeline lineno="167"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>MACROS</highlight></codeline>
<codeline lineno="168"><highlight class="comment"><sp/>**********************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*LV_USE_SPINBOX*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal">}<sp/></highlight><highlight class="comment">/*<sp/>extern<sp/>&quot;C&quot;<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*LV_SPINBOX_H*/</highlight><highlight class="preprocessor"></highlight></codeline>
    </programlisting>
    <location file="/home/kisvegabor/projects/littlevgl/eclipse-workspace/lv_sim_eclipse_sdl/lvgl/scripts/release_tmp/lvgl/src/lv_widgets/lv_spinbox.h"/>
  </compounddef>
</doxygen>
