<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="lv__indev_8h" kind="file" language="C++">
    <compoundname>lv_indev.h</compoundname>
      <sectiondef kind="func">
      <memberdef kind="function" id="lv__indev_8h_1a8d6c2cdb7d3252fcef33ca9321ac5836" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void _lv_indev_init</definition>
        <argsstring>(void)</argsstring>
        <name>_lv_indev_init</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Initialize the display input device subsystem </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kisvegabor/projects/littlevgl/eclipse-workspace/lv_sim_eclipse_sdl/lvgl/scripts/release_tmp/lvgl/src/lv_core/lv_indev.h" line="35" column="1"/>
      </memberdef>
      <memberdef kind="function" id="lv__indev_8h_1a5453512e576ea71f1edd1dfa3193f55d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void _lv_indev_read_task</definition>
        <argsstring>(lv_task_t *task)</argsstring>
        <name>_lv_indev_read_task</name>
        <param>
          <type><ref refid="struct__lv__task__t" kindref="compound">lv_task_t</ref> *</type>
          <declname>task</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Called periodically to read the input devices <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>task</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to the task itself </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kisvegabor/projects/littlevgl/eclipse-workspace/lv_sim_eclipse_sdl/lvgl/scripts/release_tmp/lvgl/src/lv_core/lv_indev.h" line="41" column="1"/>
      </memberdef>
      <memberdef kind="function" id="lv__indev_8h_1a7371c50b9253f035dbd1991ffb3dd46e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="lv__hal__indev_8h_1a21cbd71ad2a47405c19d01ac641e7155" kindref="member">lv_indev_t</ref> *</type>
        <definition>lv_indev_t* lv_indev_get_act</definition>
        <argsstring>(void)</argsstring>
        <name>lv_indev_get_act</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the currently processed input device. Can be used in action functions too. <simplesect kind="return"><para>pointer to the currently processed input device or NULL if no input device processing right now </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kisvegabor/projects/littlevgl/eclipse-workspace/lv_sim_eclipse_sdl/lvgl/scripts/release_tmp/lvgl/src/lv_core/lv_indev.h" line="48" column="1"/>
      </memberdef>
      <memberdef kind="function" id="lv__indev_8h_1a95c3bddace5c8c574705340580365145" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>lv_indev_type_t</type>
        <definition>lv_indev_type_t lv_indev_get_type</definition>
        <argsstring>(const lv_indev_t *indev)</argsstring>
        <name>lv_indev_get_type</name>
        <param>
          <type>const <ref refid="lv__hal__indev_8h_1a21cbd71ad2a47405c19d01ac641e7155" kindref="member">lv_indev_t</ref> *</type>
          <declname>indev</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the type of an input device <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>indev</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to an input device </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the type of the input device from <computeroutput>lv_hal_indev_type_t</computeroutput> (<computeroutput>LV_INDEV_TYPE_...</computeroutput>) </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kisvegabor/projects/littlevgl/eclipse-workspace/lv_sim_eclipse_sdl/lvgl/scripts/release_tmp/lvgl/src/lv_core/lv_indev.h" line="55" column="1"/>
      </memberdef>
      <memberdef kind="function" id="lv__indev_8h_1a716dec0e5e4bf06011027bacaee81183" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void lv_indev_reset</definition>
        <argsstring>(lv_indev_t *indev, lv_obj_t *obj)</argsstring>
        <name>lv_indev_reset</name>
        <param>
          <type><ref refid="lv__hal__indev_8h_1a21cbd71ad2a47405c19d01ac641e7155" kindref="member">lv_indev_t</ref> *</type>
          <declname>indev</declname>
        </param>
        <param>
          <type><ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref> *</type>
          <declname>obj</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Reset one or all input devices <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>indev</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to an input device to reset or NULL to reset all of them </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>obj</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to an object which triggers the reset. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kisvegabor/projects/littlevgl/eclipse-workspace/lv_sim_eclipse_sdl/lvgl/scripts/release_tmp/lvgl/src/lv_core/lv_indev.h" line="62" column="1"/>
      </memberdef>
      <memberdef kind="function" id="lv__indev_8h_1ae3e5517ee080bf69e058b820f5117153" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void lv_indev_reset_long_press</definition>
        <argsstring>(lv_indev_t *indev)</argsstring>
        <name>lv_indev_reset_long_press</name>
        <param>
          <type><ref refid="lv__hal__indev_8h_1a21cbd71ad2a47405c19d01ac641e7155" kindref="member">lv_indev_t</ref> *</type>
          <declname>indev</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Reset the long press state of an input device <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>indev_proc</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to an input device </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kisvegabor/projects/littlevgl/eclipse-workspace/lv_sim_eclipse_sdl/lvgl/scripts/release_tmp/lvgl/src/lv_core/lv_indev.h" line="68" column="1"/>
      </memberdef>
      <memberdef kind="function" id="lv__indev_8h_1ae6a3c34a4ff7928a9395757d109d4621" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void lv_indev_enable</definition>
        <argsstring>(lv_indev_t *indev, bool en)</argsstring>
        <name>lv_indev_enable</name>
        <param>
          <type><ref refid="lv__hal__indev_8h_1a21cbd71ad2a47405c19d01ac641e7155" kindref="member">lv_indev_t</ref> *</type>
          <declname>indev</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>en</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Enable or disable an input devices <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>indev</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to an input device </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>en</parametername>
</parameternamelist>
<parameterdescription>
<para>true: enable; false: disable </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kisvegabor/projects/littlevgl/eclipse-workspace/lv_sim_eclipse_sdl/lvgl/scripts/release_tmp/lvgl/src/lv_core/lv_indev.h" line="75" column="1"/>
      </memberdef>
      <memberdef kind="function" id="lv__indev_8h_1a007c53b2a7d206c77bc1d30ad03bb18e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void lv_indev_set_cursor</definition>
        <argsstring>(lv_indev_t *indev, lv_obj_t *cur_obj)</argsstring>
        <name>lv_indev_set_cursor</name>
        <param>
          <type><ref refid="lv__hal__indev_8h_1a21cbd71ad2a47405c19d01ac641e7155" kindref="member">lv_indev_t</ref> *</type>
          <declname>indev</declname>
        </param>
        <param>
          <type><ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref> *</type>
          <declname>cur_obj</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set a cursor for a pointer input device (for LV_INPUT_TYPE_POINTER and LV_INPUT_TYPE_BUTTON) <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>indev</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to an input device </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>cur_obj</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to an object to be used as cursor </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kisvegabor/projects/littlevgl/eclipse-workspace/lv_sim_eclipse_sdl/lvgl/scripts/release_tmp/lvgl/src/lv_core/lv_indev.h" line="82" column="1"/>
      </memberdef>
      <memberdef kind="function" id="lv__indev_8h_1aa6f0e316052745e71c1b482ac85861cf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void lv_indev_set_group</definition>
        <argsstring>(lv_indev_t *indev, lv_group_t *group)</argsstring>
        <name>lv_indev_set_group</name>
        <param>
          <type><ref refid="lv__hal__indev_8h_1a21cbd71ad2a47405c19d01ac641e7155" kindref="member">lv_indev_t</ref> *</type>
          <declname>indev</declname>
        </param>
        <param>
          <type><ref refid="lv__group_8h_1a1d10273061e7dad68b079efcf102fd41" kindref="member">lv_group_t</ref> *</type>
          <declname>group</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set a destination group for a keypad input device (for LV_INDEV_TYPE_KEYPAD) <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>indev</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to an input device </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>group</parametername>
</parameternamelist>
<parameterdescription>
<para>point to a group </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kisvegabor/projects/littlevgl/eclipse-workspace/lv_sim_eclipse_sdl/lvgl/scripts/release_tmp/lvgl/src/lv_core/lv_indev.h" line="90" column="1"/>
      </memberdef>
      <memberdef kind="function" id="lv__indev_8h_1ab3ce6a0dada92f59f10108127acbb206" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void lv_indev_set_button_points</definition>
        <argsstring>(lv_indev_t *indev, const lv_point_t points[])</argsstring>
        <name>lv_indev_set_button_points</name>
        <param>
          <type><ref refid="lv__hal__indev_8h_1a21cbd71ad2a47405c19d01ac641e7155" kindref="member">lv_indev_t</ref> *</type>
          <declname>indev</declname>
        </param>
        <param>
          <type>const <ref refid="structlv__point__t" kindref="compound">lv_point_t</ref></type>
          <declname>points</declname>
          <array>[]</array>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set the an array of points for LV_INDEV_TYPE_BUTTON. These points will be assigned to the buttons to press a specific point on the screen <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>indev</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to an input device </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>group</parametername>
</parameternamelist>
<parameterdescription>
<para>point to a group </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kisvegabor/projects/littlevgl/eclipse-workspace/lv_sim_eclipse_sdl/lvgl/scripts/release_tmp/lvgl/src/lv_core/lv_indev.h" line="99" column="1"/>
      </memberdef>
      <memberdef kind="function" id="lv__indev_8h_1a0b8a336a876a82dbb2d24583197792a9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void lv_indev_get_point</definition>
        <argsstring>(const lv_indev_t *indev, lv_point_t *point)</argsstring>
        <name>lv_indev_get_point</name>
        <param>
          <type>const <ref refid="lv__hal__indev_8h_1a21cbd71ad2a47405c19d01ac641e7155" kindref="member">lv_indev_t</ref> *</type>
          <declname>indev</declname>
        </param>
        <param>
          <type><ref refid="structlv__point__t" kindref="compound">lv_point_t</ref> *</type>
          <declname>point</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the last point of an input device (for LV_INDEV_TYPE_POINTER and LV_INDEV_TYPE_BUTTON) <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>indev</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to an input device </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>point</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to a point to store the result </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kisvegabor/projects/littlevgl/eclipse-workspace/lv_sim_eclipse_sdl/lvgl/scripts/release_tmp/lvgl/src/lv_core/lv_indev.h" line="106" column="1"/>
      </memberdef>
      <memberdef kind="function" id="lv__indev_8h_1a38027437c2eba491b6cb9fa2ccac1412" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>lv_gesture_dir_t</type>
        <definition>lv_gesture_dir_t lv_indev_get_gesture_dir</definition>
        <argsstring>(const lv_indev_t *indev)</argsstring>
        <name>lv_indev_get_gesture_dir</name>
        <param>
          <type>const <ref refid="lv__hal__indev_8h_1a21cbd71ad2a47405c19d01ac641e7155" kindref="member">lv_indev_t</ref> *</type>
          <declname>indev</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the current gesture direct <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>indev</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to an input device </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>current gesture direct </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kisvegabor/projects/littlevgl/eclipse-workspace/lv_sim_eclipse_sdl/lvgl/scripts/release_tmp/lvgl/src/lv_core/lv_indev.h" line="113" column="1"/>
      </memberdef>
      <memberdef kind="function" id="lv__indev_8h_1ab14bdb02be684b1c900a56d7cf0e634c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint32_t</type>
        <definition>uint32_t lv_indev_get_key</definition>
        <argsstring>(const lv_indev_t *indev)</argsstring>
        <name>lv_indev_get_key</name>
        <param>
          <type>const <ref refid="lv__hal__indev_8h_1a21cbd71ad2a47405c19d01ac641e7155" kindref="member">lv_indev_t</ref> *</type>
          <declname>indev</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the last pressed key of an input device (for LV_INDEV_TYPE_KEYPAD) <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>indev</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to an input device </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the last pressed key (0 on error) </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kisvegabor/projects/littlevgl/eclipse-workspace/lv_sim_eclipse_sdl/lvgl/scripts/release_tmp/lvgl/src/lv_core/lv_indev.h" line="120" column="1"/>
      </memberdef>
      <memberdef kind="function" id="lv__indev_8h_1a8385bcecdaff409d9aa037c4aa0d2a0f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool lv_indev_is_dragging</definition>
        <argsstring>(const lv_indev_t *indev)</argsstring>
        <name>lv_indev_is_dragging</name>
        <param>
          <type>const <ref refid="lv__hal__indev_8h_1a21cbd71ad2a47405c19d01ac641e7155" kindref="member">lv_indev_t</ref> *</type>
          <declname>indev</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Check if there is dragging with an input device or not (for LV_INDEV_TYPE_POINTER and LV_INDEV_TYPE_BUTTON) <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>indev</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to an input device </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true: drag is in progress </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kisvegabor/projects/littlevgl/eclipse-workspace/lv_sim_eclipse_sdl/lvgl/scripts/release_tmp/lvgl/src/lv_core/lv_indev.h" line="128" column="1"/>
      </memberdef>
      <memberdef kind="function" id="lv__indev_8h_1a1f9296166ded7fef0b5f84cc62751d23" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void lv_indev_get_vect</definition>
        <argsstring>(const lv_indev_t *indev, lv_point_t *point)</argsstring>
        <name>lv_indev_get_vect</name>
        <param>
          <type>const <ref refid="lv__hal__indev_8h_1a21cbd71ad2a47405c19d01ac641e7155" kindref="member">lv_indev_t</ref> *</type>
          <declname>indev</declname>
        </param>
        <param>
          <type><ref refid="structlv__point__t" kindref="compound">lv_point_t</ref> *</type>
          <declname>point</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the vector of dragging of an input device (for LV_INDEV_TYPE_POINTER and LV_INDEV_TYPE_BUTTON) <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>indev</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to an input device </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>point</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to a point to store the vector </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kisvegabor/projects/littlevgl/eclipse-workspace/lv_sim_eclipse_sdl/lvgl/scripts/release_tmp/lvgl/src/lv_core/lv_indev.h" line="136" column="1"/>
      </memberdef>
      <memberdef kind="function" id="lv__indev_8h_1a73441bfc0bae86825ea2298ee8c4cf10" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>lv_res_t</type>
        <definition>lv_res_t lv_indev_finish_drag</definition>
        <argsstring>(lv_indev_t *indev)</argsstring>
        <name>lv_indev_finish_drag</name>
        <param>
          <type><ref refid="lv__hal__indev_8h_1a21cbd71ad2a47405c19d01ac641e7155" kindref="member">lv_indev_t</ref> *</type>
          <declname>indev</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Manually finish dragging. <computeroutput>LV_SIGNAL_DRAG_END</computeroutput> and <computeroutput>LV_EVENT_DRAG_END</computeroutput> will be sent. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>indev</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to an input device </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><computeroutput>LV_RES_INV</computeroutput> if the object being dragged was deleted. Else <computeroutput>LV_RES_OK</computeroutput>. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kisvegabor/projects/littlevgl/eclipse-workspace/lv_sim_eclipse_sdl/lvgl/scripts/release_tmp/lvgl/src/lv_core/lv_indev.h" line="144" column="1"/>
      </memberdef>
      <memberdef kind="function" id="lv__indev_8h_1acafef51429b0390becb80d9f940cc3f4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void lv_indev_wait_release</definition>
        <argsstring>(lv_indev_t *indev)</argsstring>
        <name>lv_indev_wait_release</name>
        <param>
          <type><ref refid="lv__hal__indev_8h_1a21cbd71ad2a47405c19d01ac641e7155" kindref="member">lv_indev_t</ref> *</type>
          <declname>indev</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Do nothing until the next release <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>indev</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to an input device </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kisvegabor/projects/littlevgl/eclipse-workspace/lv_sim_eclipse_sdl/lvgl/scripts/release_tmp/lvgl/src/lv_core/lv_indev.h" line="150" column="1"/>
      </memberdef>
      <memberdef kind="function" id="lv__indev_8h_1a3a9ef3ccf4c5a9fca86be0414b693045" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref> *</type>
        <definition>lv_obj_t* lv_indev_get_obj_act</definition>
        <argsstring>(void)</argsstring>
        <name>lv_indev_get_obj_act</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Gets a pointer to the currently active object in indev proc functions. NULL if no object is currently being handled or if groups aren&apos;t used. <simplesect kind="return"><para>pointer to currently active object </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kisvegabor/projects/littlevgl/eclipse-workspace/lv_sim_eclipse_sdl/lvgl/scripts/release_tmp/lvgl/src/lv_core/lv_indev.h" line="158" column="1"/>
      </memberdef>
      <memberdef kind="function" id="lv__indev_8h_1aca903267178eeeded6390da8752a2729" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref> *</type>
        <definition>lv_obj_t* lv_indev_search_obj</definition>
        <argsstring>(lv_obj_t *obj, lv_point_t *point)</argsstring>
        <name>lv_indev_search_obj</name>
        <param>
          <type><ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref> *</type>
          <declname>obj</declname>
        </param>
        <param>
          <type><ref refid="structlv__point__t" kindref="compound">lv_point_t</ref> *</type>
          <declname>point</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Search the most top, clickable object by a point <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>obj</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to a start object, typically the screen </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>point</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to a point for searching the most top child </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>pointer to the found object or NULL if there was no suitable object </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kisvegabor/projects/littlevgl/eclipse-workspace/lv_sim_eclipse_sdl/lvgl/scripts/release_tmp/lvgl/src/lv_core/lv_indev.h" line="166" column="1"/>
      </memberdef>
      <memberdef kind="function" id="lv__indev_8h_1acbfb12789d897dd6c1fd8fdb6c3858ac" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct__lv__task__t" kindref="compound">lv_task_t</ref> *</type>
        <definition>lv_task_t* lv_indev_get_read_task</definition>
        <argsstring>(lv_disp_t *indev)</argsstring>
        <name>lv_indev_get_read_task</name>
        <param>
          <type><ref refid="lv__hal__disp_8h_1a9d29d2918fd1d6117739da09a12b1e90" kindref="member">lv_disp_t</ref> *</type>
          <declname>indev</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get a pointer to the indev read task to modify its parameters with <computeroutput>lv_task_...</computeroutput> functions. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>indev</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to an inout device </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>pointer to the indev read refresher task. (NULL on error) </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kisvegabor/projects/littlevgl/eclipse-workspace/lv_sim_eclipse_sdl/lvgl/scripts/release_tmp/lvgl/src/lv_core/lv_indev.h" line="174" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"></codeline>
<codeline lineno="6"><highlight class="preprocessor">#ifndef<sp/>LV_INDEV_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LV_INDEV_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">/*********************</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>INCLUDES</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*********************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="lv__obj_8h" kindref="compound">lv_obj.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../lv_hal/lv_hal_indev.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../lv_core/lv_group.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="comment">/*********************</highlight></codeline>
<codeline lineno="21"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>DEFINES</highlight></codeline>
<codeline lineno="22"><highlight class="comment"><sp/>*********************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="comment">/**********************</highlight></codeline>
<codeline lineno="25"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>TYPEDEFS</highlight></codeline>
<codeline lineno="26"><highlight class="comment"><sp/>**********************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="comment">/**********************</highlight></codeline>
<codeline lineno="29"><highlight class="comment"><sp/>*<sp/>GLOBAL<sp/>PROTOTYPES</highlight></codeline>
<codeline lineno="30"><highlight class="comment"><sp/>**********************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="lv__indev_8h_1a8d6c2cdb7d3252fcef33ca9321ac5836" kindref="member">_lv_indev_init</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="lv__indev_8h_1a5453512e576ea71f1edd1dfa3193f55d" kindref="member">_lv_indev_read_task</ref>(<ref refid="struct__lv__task__t" kindref="compound">lv_task_t</ref><sp/>*<sp/>task);</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"><ref refid="struct__lv__indev__t" kindref="compound">lv_indev_t</ref><sp/>*<sp/><ref refid="lv__indev_8h_1a7371c50b9253f035dbd1991ffb3dd46e" kindref="member">lv_indev_get_act</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal">lv_indev_type_t<sp/><ref refid="lv__indev_8h_1a95c3bddace5c8c574705340580365145" kindref="member">lv_indev_get_type</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct__lv__indev__t" kindref="compound">lv_indev_t</ref><sp/>*<sp/>indev);</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="lv__indev_8h_1a716dec0e5e4bf06011027bacaee81183" kindref="member">lv_indev_reset</ref>(<ref refid="struct__lv__indev__t" kindref="compound">lv_indev_t</ref><sp/>*<sp/>indev,<sp/><ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref><sp/>*<sp/>obj);</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="lv__indev_8h_1ae3e5517ee080bf69e058b820f5117153" kindref="member">lv_indev_reset_long_press</ref>(<ref refid="struct__lv__indev__t" kindref="compound">lv_indev_t</ref><sp/>*<sp/>indev);</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="lv__indev_8h_1ae6a3c34a4ff7928a9395757d109d4621" kindref="member">lv_indev_enable</ref>(<ref refid="struct__lv__indev__t" kindref="compound">lv_indev_t</ref><sp/>*<sp/>indev,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>en);</highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="lv__indev_8h_1a007c53b2a7d206c77bc1d30ad03bb18e" kindref="member">lv_indev_set_cursor</ref>(<ref refid="struct__lv__indev__t" kindref="compound">lv_indev_t</ref><sp/>*<sp/>indev,<sp/><ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref><sp/>*<sp/>cur_obj);</highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>LV_USE_GROUP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="lv__indev_8h_1aa6f0e316052745e71c1b482ac85861cf" kindref="member">lv_indev_set_group</ref>(<ref refid="struct__lv__indev__t" kindref="compound">lv_indev_t</ref><sp/>*<sp/>indev,<sp/><ref refid="struct__lv__group__t" kindref="compound">lv_group_t</ref><sp/>*<sp/>group);</highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="lv__indev_8h_1ab3ce6a0dada92f59f10108127acbb206" kindref="member">lv_indev_set_button_points</ref>(<ref refid="struct__lv__indev__t" kindref="compound">lv_indev_t</ref><sp/>*<sp/>indev,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structlv__point__t" kindref="compound">lv_point_t</ref><sp/>points[]);</highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="lv__indev_8h_1a0b8a336a876a82dbb2d24583197792a9" kindref="member">lv_indev_get_point</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct__lv__indev__t" kindref="compound">lv_indev_t</ref><sp/>*<sp/>indev,<sp/><ref refid="structlv__point__t" kindref="compound">lv_point_t</ref><sp/>*<sp/>point);</highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal">lv_gesture_dir_t<sp/><ref refid="lv__indev_8h_1a38027437c2eba491b6cb9fa2ccac1412" kindref="member">lv_indev_get_gesture_dir</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct__lv__indev__t" kindref="compound">lv_indev_t</ref><sp/>*<sp/>indev);</highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal">uint32_t<sp/><ref refid="lv__indev_8h_1ab14bdb02be684b1c900a56d7cf0e634c" kindref="member">lv_indev_get_key</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct__lv__indev__t" kindref="compound">lv_indev_t</ref><sp/>*<sp/>indev);</highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="lv__indev_8h_1a8385bcecdaff409d9aa037c4aa0d2a0f" kindref="member">lv_indev_is_dragging</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct__lv__indev__t" kindref="compound">lv_indev_t</ref><sp/>*<sp/>indev);</highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="lv__indev_8h_1a1f9296166ded7fef0b5f84cc62751d23" kindref="member">lv_indev_get_vect</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct__lv__indev__t" kindref="compound">lv_indev_t</ref><sp/>*<sp/>indev,<sp/><ref refid="structlv__point__t" kindref="compound">lv_point_t</ref><sp/>*<sp/>point);</highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal">lv_res_t<sp/><ref refid="lv__indev_8h_1a73441bfc0bae86825ea2298ee8c4cf10" kindref="member">lv_indev_finish_drag</ref>(<ref refid="struct__lv__indev__t" kindref="compound">lv_indev_t</ref><sp/>*<sp/>indev);</highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="lv__indev_8h_1acafef51429b0390becb80d9f940cc3f4" kindref="member">lv_indev_wait_release</ref>(<ref refid="struct__lv__indev__t" kindref="compound">lv_indev_t</ref><sp/>*<sp/>indev);</highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"><ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref><sp/>*<sp/><ref refid="lv__indev_8h_1a3a9ef3ccf4c5a9fca86be0414b693045" kindref="member">lv_indev_get_obj_act</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"><ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref><sp/>*<sp/><ref refid="lv__indev_8h_1aca903267178eeeded6390da8752a2729" kindref="member">lv_indev_search_obj</ref>(<ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref><sp/>*<sp/>obj,<sp/><ref refid="structlv__point__t" kindref="compound">lv_point_t</ref><sp/>*<sp/>point);</highlight></codeline>
<codeline lineno="167"><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"><ref refid="struct__lv__task__t" kindref="compound">lv_task_t</ref><sp/>*<sp/><ref refid="lv__indev_8h_1acbfb12789d897dd6c1fd8fdb6c3858ac" kindref="member">lv_indev_get_read_task</ref>(<ref refid="struct__disp__t" kindref="compound">lv_disp_t</ref><sp/>*<sp/>indev);</highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"></highlight><highlight class="comment">/**********************</highlight></codeline>
<codeline lineno="177"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>MACROS</highlight></codeline>
<codeline lineno="178"><highlight class="comment"><sp/>**********************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal">}<sp/></highlight><highlight class="comment">/*<sp/>extern<sp/>&quot;C&quot;<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*LV_INDEV_H*/</highlight><highlight class="preprocessor"></highlight></codeline>
    </programlisting>
    <location file="/home/kisvegabor/projects/littlevgl/eclipse-workspace/lv_sim_eclipse_sdl/lvgl/scripts/release_tmp/lvgl/src/lv_core/lv_indev.h"/>
  </compounddef>
</doxygen>
