<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="lv__slider_8h" kind="file" language="C++">
    <compoundname>lv_slider.h</compoundname>
    <innerclass refid="structlv__slider__ext__t" prot="public">lv_slider_ext_t</innerclass>
      <sectiondef kind="enum">
      <memberdef kind="enum" id="lv__slider_8h_1a2d5492e116eebd5075f247d21fb9db26" prot="public" static="no">
        <name>@99</name>
        <enumvalue id="lv__slider_8h_1a2d5492e116eebd5075f247d21fb9db26aece5fdf530ef4e508399df140bbcd4c7" prot="public">
          <name>LV_SLIDER_TYPE_NORMAL</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="lv__slider_8h_1a2d5492e116eebd5075f247d21fb9db26acd002b8c57d86adb1a2f28506ffedd36" prot="public">
          <name>LV_SLIDER_TYPE_SYMMETRICAL</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="lv__slider_8h_1a2d5492e116eebd5075f247d21fb9db26ad789b3c34d82e6b3d168c38c48be17b2" prot="public">
          <name>LV_SLIDER_TYPE_RANGE</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kisvegabor/projects/littlevgl/eclipse-workspace/lv_sim_eclipse_sdl/lvgl/scripts/release_tmp/lvgl/src/lv_widgets/lv_slider.h" line="36" column="1" bodyfile="/home/kisvegabor/projects/littlevgl/eclipse-workspace/lv_sim_eclipse_sdl/lvgl/scripts/release_tmp/lvgl/src/lv_widgets/lv_slider.h" bodystart="36" bodyend="40"/>
      </memberdef>
      <memberdef kind="enum" id="lv__slider_8h_1a73c53bacb25588538843a1dcfe5f382b" prot="public" static="no">
        <name>@100</name>
        <enumvalue id="lv__slider_8h_1a73c53bacb25588538843a1dcfe5f382ba58d76541f6f3ec2382625663d4585e28" prot="public">
          <name>LV_SLIDER_PART_BG</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="lv__slider_8h_1a73c53bacb25588538843a1dcfe5f382bacfb137d44e837c3c0f762843cb60e2f6" prot="public">
          <name>LV_SLIDER_PART_INDIC</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Slider background style. </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="lv__slider_8h_1a73c53bacb25588538843a1dcfe5f382ba33dccadea02129442b0f4351926fd53f" prot="public">
          <name>LV_SLIDER_PART_KNOB</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Slider indicator (filled area) style. </para>          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Built-in styles of slider </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kisvegabor/projects/littlevgl/eclipse-workspace/lv_sim_eclipse_sdl/lvgl/scripts/release_tmp/lvgl/src/lv_widgets/lv_slider.h" line="55" column="1" bodyfile="/home/kisvegabor/projects/littlevgl/eclipse-workspace/lv_sim_eclipse_sdl/lvgl/scripts/release_tmp/lvgl/src/lv_widgets/lv_slider.h" bodystart="55" bodyend="59"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="lv__slider_8h_1a9b0c272d2fc0eb62641d936e9c9606f8" prot="public" static="no">
        <type>uint8_t</type>
        <definition>typedef uint8_t lv_slider_type_t</definition>
        <argsstring></argsstring>
        <name>lv_slider_type_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kisvegabor/projects/littlevgl/eclipse-workspace/lv_sim_eclipse_sdl/lvgl/scripts/release_tmp/lvgl/src/lv_widgets/lv_slider.h" line="41" column="1" bodyfile="/home/kisvegabor/projects/littlevgl/eclipse-workspace/lv_sim_eclipse_sdl/lvgl/scripts/release_tmp/lvgl/src/lv_widgets/lv_slider.h" bodystart="41" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="lv__slider_8h_1aa9722d8458e90fce64de739a7eb00359" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref> *</type>
        <definition>lv_obj_t* lv_slider_create</definition>
        <argsstring>(lv_obj_t *par, const lv_obj_t *copy)</argsstring>
        <name>lv_slider_create</name>
        <param>
          <type><ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref> *</type>
          <declname>par</declname>
        </param>
        <param>
          <type>const <ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref> *</type>
          <declname>copy</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Create a slider objects <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>par</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to an object, it will be the parent of the new slider </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>copy</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to a slider object, if not NULL then the new object will be copied from it </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>pointer to the created slider </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kisvegabor/projects/littlevgl/eclipse-workspace/lv_sim_eclipse_sdl/lvgl/scripts/release_tmp/lvgl/src/lv_widgets/lv_slider.h" line="71" column="1"/>
      </memberdef>
      <memberdef kind="function" id="lv__slider_8h_1a3d767908dc10b87e354c630bbeb2da91" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void lv_slider_set_value</definition>
        <argsstring>(lv_obj_t *slider, int16_t value, lv_anim_enable_t anim)</argsstring>
        <name>lv_slider_set_value</name>
        <param>
          <type><ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref> *</type>
          <declname>slider</declname>
        </param>
        <param>
          <type>int16_t</type>
          <declname>value</declname>
        </param>
        <param>
          <type>lv_anim_enable_t</type>
          <declname>anim</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set a new value on the slider <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>slider</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to a slider object </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>value</parametername>
</parameternamelist>
<parameterdescription>
<para>new value </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>anim</parametername>
</parameternamelist>
<parameterdescription>
<para>LV_ANIM_ON: set the value with an animation; LV_ANIM_OFF: change the value immediately </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kisvegabor/projects/littlevgl/eclipse-workspace/lv_sim_eclipse_sdl/lvgl/scripts/release_tmp/lvgl/src/lv_widgets/lv_slider.h" line="83" column="1" bodyfile="/home/kisvegabor/projects/littlevgl/eclipse-workspace/lv_sim_eclipse_sdl/lvgl/scripts/release_tmp/lvgl/src/lv_widgets/lv_slider.h" bodystart="83" bodyend="86"/>
      </memberdef>
      <memberdef kind="function" id="lv__slider_8h_1a730af527626b3670b241de047415808b" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void lv_slider_set_left_value</definition>
        <argsstring>(lv_obj_t *slider, int16_t left_value, lv_anim_enable_t anim)</argsstring>
        <name>lv_slider_set_left_value</name>
        <param>
          <type><ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref> *</type>
          <declname>slider</declname>
        </param>
        <param>
          <type>int16_t</type>
          <declname>left_value</declname>
        </param>
        <param>
          <type>lv_anim_enable_t</type>
          <declname>anim</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set a new value for the left knob of a slider <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>slider</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to a slider object </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>left_value</parametername>
</parameternamelist>
<parameterdescription>
<para>new value </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>anim</parametername>
</parameternamelist>
<parameterdescription>
<para>LV_ANIM_ON: set the value with an animation; LV_ANIM_OFF: change the value immediately </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kisvegabor/projects/littlevgl/eclipse-workspace/lv_sim_eclipse_sdl/lvgl/scripts/release_tmp/lvgl/src/lv_widgets/lv_slider.h" line="94" column="1" bodyfile="/home/kisvegabor/projects/littlevgl/eclipse-workspace/lv_sim_eclipse_sdl/lvgl/scripts/release_tmp/lvgl/src/lv_widgets/lv_slider.h" bodystart="94" bodyend="97"/>
      </memberdef>
      <memberdef kind="function" id="lv__slider_8h_1a00d4891d365332615746afa7bfc5a842" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void lv_slider_set_range</definition>
        <argsstring>(lv_obj_t *slider, int16_t min, int16_t max)</argsstring>
        <name>lv_slider_set_range</name>
        <param>
          <type><ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref> *</type>
          <declname>slider</declname>
        </param>
        <param>
          <type>int16_t</type>
          <declname>min</declname>
        </param>
        <param>
          <type>int16_t</type>
          <declname>max</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set minimum and the maximum values of a bar <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>slider</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to the slider object </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>min</parametername>
</parameternamelist>
<parameterdescription>
<para>minimum value </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>max</parametername>
</parameternamelist>
<parameterdescription>
<para>maximum value </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kisvegabor/projects/littlevgl/eclipse-workspace/lv_sim_eclipse_sdl/lvgl/scripts/release_tmp/lvgl/src/lv_widgets/lv_slider.h" line="105" column="1" bodyfile="/home/kisvegabor/projects/littlevgl/eclipse-workspace/lv_sim_eclipse_sdl/lvgl/scripts/release_tmp/lvgl/src/lv_widgets/lv_slider.h" bodystart="105" bodyend="108"/>
      </memberdef>
      <memberdef kind="function" id="lv__slider_8h_1a3cd420f8881ef91328acf71669a0af27" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void lv_slider_set_anim_time</definition>
        <argsstring>(lv_obj_t *slider, uint16_t anim_time)</argsstring>
        <name>lv_slider_set_anim_time</name>
        <param>
          <type><ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref> *</type>
          <declname>slider</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>anim_time</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set the animation time of the slider <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>slider</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to a bar object </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>anim_time</parametername>
</parameternamelist>
<parameterdescription>
<para>the animation time in milliseconds. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kisvegabor/projects/littlevgl/eclipse-workspace/lv_sim_eclipse_sdl/lvgl/scripts/release_tmp/lvgl/src/lv_widgets/lv_slider.h" line="115" column="1" bodyfile="/home/kisvegabor/projects/littlevgl/eclipse-workspace/lv_sim_eclipse_sdl/lvgl/scripts/release_tmp/lvgl/src/lv_widgets/lv_slider.h" bodystart="115" bodyend="118"/>
      </memberdef>
      <memberdef kind="function" id="lv__slider_8h_1a4611c6c443d9d84bed48ddc8f796992c" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void lv_slider_set_type</definition>
        <argsstring>(lv_obj_t *slider, lv_slider_type_t type)</argsstring>
        <name>lv_slider_set_type</name>
        <param>
          <type><ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref> *</type>
          <declname>slider</declname>
        </param>
        <param>
          <type>lv_slider_type_t</type>
          <declname>type</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Make the slider symmetric to zero. The indicator will grow from zero instead of the minimum position. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>slider</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to a slider object </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>en</parametername>
</parameternamelist>
<parameterdescription>
<para>true: enable disable symmetric behavior; false: disable </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kisvegabor/projects/littlevgl/eclipse-workspace/lv_sim_eclipse_sdl/lvgl/scripts/release_tmp/lvgl/src/lv_widgets/lv_slider.h" line="126" column="1" bodyfile="/home/kisvegabor/projects/littlevgl/eclipse-workspace/lv_sim_eclipse_sdl/lvgl/scripts/release_tmp/lvgl/src/lv_widgets/lv_slider.h" bodystart="126" bodyend="134"/>
      </memberdef>
      <memberdef kind="function" id="lv__slider_8h_1aff7f9d80fefcfb21d458492426e28312" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int16_t</type>
        <definition>int16_t lv_slider_get_value</definition>
        <argsstring>(const lv_obj_t *slider)</argsstring>
        <name>lv_slider_get_value</name>
        <param>
          <type>const <ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref> *</type>
          <declname>slider</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the value of the main knob of a slider <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>slider</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to a slider object </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the value of the main knob of the slider </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kisvegabor/projects/littlevgl/eclipse-workspace/lv_sim_eclipse_sdl/lvgl/scripts/release_tmp/lvgl/src/lv_widgets/lv_slider.h" line="145" column="1"/>
      </memberdef>
      <memberdef kind="function" id="lv__slider_8h_1ac85095126a737923b993fa8f1073b3bb" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int16_t</type>
        <definition>static int16_t lv_slider_get_left_value</definition>
        <argsstring>(const lv_obj_t *slider)</argsstring>
        <name>lv_slider_get_left_value</name>
        <param>
          <type>const <ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref> *</type>
          <declname>slider</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the value of the left knob of a slider <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>slider</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to a slider object </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the value of the left knob of the slider </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kisvegabor/projects/littlevgl/eclipse-workspace/lv_sim_eclipse_sdl/lvgl/scripts/release_tmp/lvgl/src/lv_widgets/lv_slider.h" line="152" column="1" bodyfile="/home/kisvegabor/projects/littlevgl/eclipse-workspace/lv_sim_eclipse_sdl/lvgl/scripts/release_tmp/lvgl/src/lv_widgets/lv_slider.h" bodystart="152" bodyend="155"/>
      </memberdef>
      <memberdef kind="function" id="lv__slider_8h_1a921836d475017abb9d5444d455f21e7f" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int16_t</type>
        <definition>static int16_t lv_slider_get_min_value</definition>
        <argsstring>(const lv_obj_t *slider)</argsstring>
        <name>lv_slider_get_min_value</name>
        <param>
          <type>const <ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref> *</type>
          <declname>slider</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the minimum value of a slider <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>slider</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to a slider object </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the minimum value of the slider </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kisvegabor/projects/littlevgl/eclipse-workspace/lv_sim_eclipse_sdl/lvgl/scripts/release_tmp/lvgl/src/lv_widgets/lv_slider.h" line="162" column="1" bodyfile="/home/kisvegabor/projects/littlevgl/eclipse-workspace/lv_sim_eclipse_sdl/lvgl/scripts/release_tmp/lvgl/src/lv_widgets/lv_slider.h" bodystart="162" bodyend="165"/>
      </memberdef>
      <memberdef kind="function" id="lv__slider_8h_1ae2a109bdf1907a820bf16194499415cf" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int16_t</type>
        <definition>static int16_t lv_slider_get_max_value</definition>
        <argsstring>(const lv_obj_t *slider)</argsstring>
        <name>lv_slider_get_max_value</name>
        <param>
          <type>const <ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref> *</type>
          <declname>slider</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the maximum value of a slider <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>slider</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to a slider object </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the maximum value of the slider </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kisvegabor/projects/littlevgl/eclipse-workspace/lv_sim_eclipse_sdl/lvgl/scripts/release_tmp/lvgl/src/lv_widgets/lv_slider.h" line="172" column="1" bodyfile="/home/kisvegabor/projects/littlevgl/eclipse-workspace/lv_sim_eclipse_sdl/lvgl/scripts/release_tmp/lvgl/src/lv_widgets/lv_slider.h" bodystart="172" bodyend="175"/>
      </memberdef>
      <memberdef kind="function" id="lv__slider_8h_1aca2ca8d726dc8ffb640dc827dbacc94f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool lv_slider_is_dragged</definition>
        <argsstring>(const lv_obj_t *slider)</argsstring>
        <name>lv_slider_is_dragged</name>
        <param>
          <type>const <ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref> *</type>
          <declname>slider</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Give the slider is being dragged or not <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>slider</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to a slider object </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true: drag in progress false: not dragged </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kisvegabor/projects/littlevgl/eclipse-workspace/lv_sim_eclipse_sdl/lvgl/scripts/release_tmp/lvgl/src/lv_widgets/lv_slider.h" line="182" column="1"/>
      </memberdef>
      <memberdef kind="function" id="lv__slider_8h_1afe7f0ad6543392c7635cab997b788376" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>uint16_t</type>
        <definition>static uint16_t lv_slider_get_anim_time</definition>
        <argsstring>(lv_obj_t *slider)</argsstring>
        <name>lv_slider_get_anim_time</name>
        <param>
          <type><ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref> *</type>
          <declname>slider</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the animation time of the slider <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>slider</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to a slider object </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the animation time in milliseconds. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kisvegabor/projects/littlevgl/eclipse-workspace/lv_sim_eclipse_sdl/lvgl/scripts/release_tmp/lvgl/src/lv_widgets/lv_slider.h" line="189" column="1" bodyfile="/home/kisvegabor/projects/littlevgl/eclipse-workspace/lv_sim_eclipse_sdl/lvgl/scripts/release_tmp/lvgl/src/lv_widgets/lv_slider.h" bodystart="189" bodyend="192"/>
      </memberdef>
      <memberdef kind="function" id="lv__slider_8h_1a607ec1c8be2940a2b943d019c0097a39" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>lv_slider_type_t</type>
        <definition>static lv_slider_type_t lv_slider_get_type</definition>
        <argsstring>(lv_obj_t *slider)</argsstring>
        <name>lv_slider_get_type</name>
        <param>
          <type><ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref> *</type>
          <declname>slider</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get whether the slider is symmetric or not. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>slider</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to a bar object </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true: symmetric is enabled; false: disable </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kisvegabor/projects/littlevgl/eclipse-workspace/lv_sim_eclipse_sdl/lvgl/scripts/release_tmp/lvgl/src/lv_widgets/lv_slider.h" line="199" column="1" bodyfile="/home/kisvegabor/projects/littlevgl/eclipse-workspace/lv_sim_eclipse_sdl/lvgl/scripts/release_tmp/lvgl/src/lv_widgets/lv_slider.h" bodystart="199" bodyend="208"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"></codeline>
<codeline lineno="6"><highlight class="preprocessor">#ifndef<sp/>LV_SLIDER_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LV_SLIDER_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">/*********************</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>INCLUDES</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*********************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../lv_conf_internal.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>LV_USE_SLIDER<sp/>!=<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="comment">/*Testing<sp/>of<sp/>dependencies*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>LV_USE_BAR<sp/>==<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#error<sp/>&quot;lv_slider:<sp/>lv_bar<sp/>is<sp/>required.<sp/>Enable<sp/>it<sp/>in<sp/>lv_conf.h<sp/>(LV_USE_BAR<sp/><sp/>1)<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../lv_core/lv_obj.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="lv__bar_8h" kindref="compound">lv_bar.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="comment">/*********************</highlight></codeline>
<codeline lineno="29"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>DEFINES</highlight></codeline>
<codeline lineno="30"><highlight class="comment"><sp/>*********************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="comment">/**********************</highlight></codeline>
<codeline lineno="33"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>TYPEDEFS</highlight></codeline>
<codeline lineno="34"><highlight class="comment"><sp/>**********************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/>LV_SLIDER_TYPE_NORMAL,</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/>LV_SLIDER_TYPE_SYMMETRICAL,</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/>LV_SLIDER_TYPE_RANGE</highlight></codeline>
<codeline lineno="40"><highlight class="normal">};</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>uint8_t<sp/>lv_slider_type_t;</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="comment">/*Data<sp/>of<sp/>slider*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44" refid="structlv__slider__ext__t" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structlv__bar__ext__t" kindref="compound">lv_bar_ext_t</ref><sp/>bar;<sp/></highlight><highlight class="comment">/*Ext.<sp/>of<sp/>ancestor*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*New<sp/>data<sp/>for<sp/>this<sp/>type<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structlv__style__list__t" kindref="compound">lv_style_list_t</ref><sp/>style_knob;<sp/></highlight><highlight class="comment">/*Style<sp/>of<sp/>the<sp/>knob*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structlv__area__t" kindref="compound">lv_area_t</ref><sp/>left_knob_area;</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structlv__area__t" kindref="compound">lv_area_t</ref><sp/>right_knob_area;</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/>int16_t<sp/>*<sp/>value_to_set;<sp/></highlight><highlight class="comment">/*<sp/>Which<sp/>bar<sp/>value<sp/>to<sp/>set<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>dragging<sp/>:<sp/>1;<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*1:<sp/>the<sp/>slider<sp/>is<sp/>being<sp/>dragged*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal">}<sp/><ref refid="structlv__slider__ext__t" kindref="compound">lv_slider_ext_t</ref>;</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/>LV_SLIDER_PART_BG,<sp/></highlight></codeline>
<codeline lineno="57" refid="lv__slider_8h_1a73c53bacb25588538843a1dcfe5f382bacfb137d44e837c3c0f762843cb60e2f6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="lv__slider_8h_1a73c53bacb25588538843a1dcfe5f382bacfb137d44e837c3c0f762843cb60e2f6" kindref="member">LV_SLIDER_PART_INDIC</ref>,<sp/></highlight></codeline>
<codeline lineno="58" refid="lv__slider_8h_1a73c53bacb25588538843a1dcfe5f382ba33dccadea02129442b0f4351926fd53f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="lv__slider_8h_1a73c53bacb25588538843a1dcfe5f382ba33dccadea02129442b0f4351926fd53f" kindref="member">LV_SLIDER_PART_KNOB</ref>,<sp/></highlight></codeline>
<codeline lineno="59"><highlight class="normal">};</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight><highlight class="comment">/**********************</highlight></codeline>
<codeline lineno="62"><highlight class="comment"><sp/>*<sp/>GLOBAL<sp/>PROTOTYPES</highlight></codeline>
<codeline lineno="63"><highlight class="comment"><sp/>**********************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"><ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref><sp/>*<sp/><ref refid="lv__slider_8h_1aa9722d8458e90fce64de739a7eb00359" kindref="member">lv_slider_create</ref>(<ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref><sp/>*<sp/>par,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref><sp/>*<sp/>copy);</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight><highlight class="comment">/*=====================</highlight></codeline>
<codeline lineno="74"><highlight class="comment"><sp/>*<sp/>Setter<sp/>functions</highlight></codeline>
<codeline lineno="75"><highlight class="comment"><sp/>*====================*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>lv_slider_set_value(<ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref><sp/>*<sp/>slider,<sp/>int16_t<sp/>value,<sp/>lv_anim_enable_t<sp/>anim)</highlight></codeline>
<codeline lineno="84"><highlight class="normal">{</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="lv__bar_8h_1afbc4c3481727e56cee7f9c66cf89f7b4" kindref="member">lv_bar_set_value</ref>(slider,<sp/>value,<sp/>anim);</highlight></codeline>
<codeline lineno="86"><highlight class="normal">}</highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>lv_slider_set_left_value(<ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref><sp/>*<sp/>slider,<sp/>int16_t<sp/>left_value,<sp/>lv_anim_enable_t<sp/>anim)</highlight></codeline>
<codeline lineno="95"><highlight class="normal">{</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="lv__bar_8h_1a040483aa2bc85b6151a2853b33c38c96" kindref="member">lv_bar_set_start_value</ref>(slider,<sp/>left_value,<sp/>anim);</highlight></codeline>
<codeline lineno="97"><highlight class="normal">}</highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>lv_slider_set_range(<ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref><sp/>*<sp/>slider,<sp/>int16_t<sp/>min,<sp/>int16_t<sp/>max)</highlight></codeline>
<codeline lineno="106"><highlight class="normal">{</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="lv__bar_8h_1aba7ab8511c3b9354a78ee89c8df0ff57" kindref="member">lv_bar_set_range</ref>(slider,<sp/>min,<sp/>max);</highlight></codeline>
<codeline lineno="108"><highlight class="normal">}</highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>lv_slider_set_anim_time(<ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref><sp/>*<sp/>slider,<sp/>uint16_t<sp/>anim_time)</highlight></codeline>
<codeline lineno="116"><highlight class="normal">{</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="lv__bar_8h_1aa7b620ec46f93c0005bea65260a6e5f8" kindref="member">lv_bar_set_anim_time</ref>(slider,<sp/>anim_time);</highlight></codeline>
<codeline lineno="118"><highlight class="normal">}</highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>lv_slider_set_type(<ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref><sp/>*<sp/>slider,<sp/>lv_slider_type_t<sp/>type)</highlight></codeline>
<codeline lineno="127"><highlight class="normal">{</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(type<sp/>==<sp/>LV_SLIDER_TYPE_NORMAL)</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="lv__bar_8h_1aa69b4fa3b1f878f5e9f69a2304f7dd1e" kindref="member">lv_bar_set_type</ref>(slider,<sp/>LV_BAR_TYPE_NORMAL);</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(type<sp/>==<sp/>LV_SLIDER_TYPE_SYMMETRICAL)</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="lv__bar_8h_1aa69b4fa3b1f878f5e9f69a2304f7dd1e" kindref="member">lv_bar_set_type</ref>(slider,<sp/>LV_BAR_TYPE_SYMMETRICAL);</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(type<sp/>==<sp/>LV_SLIDER_TYPE_RANGE)</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="lv__bar_8h_1aa69b4fa3b1f878f5e9f69a2304f7dd1e" kindref="member">lv_bar_set_type</ref>(slider,<sp/>LV_BAR_TYPE_CUSTOM);</highlight></codeline>
<codeline lineno="134"><highlight class="normal">}</highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight><highlight class="comment">/*=====================</highlight></codeline>
<codeline lineno="137"><highlight class="comment"><sp/>*<sp/>Getter<sp/>functions</highlight></codeline>
<codeline lineno="138"><highlight class="comment"><sp/>*====================*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal">int16_t<sp/><ref refid="lv__slider_8h_1aff7f9d80fefcfb21d458492426e28312" kindref="member">lv_slider_get_value</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref><sp/>*<sp/>slider);</highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>int16_t<sp/>lv_slider_get_left_value(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref><sp/>*<sp/>slider)</highlight></codeline>
<codeline lineno="153"><highlight class="normal">{</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="lv__bar_8h_1a811c751f3a06af3290dc33fd080a9633" kindref="member">lv_bar_get_start_value</ref>(slider);</highlight></codeline>
<codeline lineno="155"><highlight class="normal">}</highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>int16_t<sp/>lv_slider_get_min_value(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref><sp/>*<sp/>slider)</highlight></codeline>
<codeline lineno="163"><highlight class="normal">{</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="lv__bar_8h_1a062d5da09bc4723d4a2fd195ff7818d7" kindref="member">lv_bar_get_min_value</ref>(slider);</highlight></codeline>
<codeline lineno="165"><highlight class="normal">}</highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>int16_t<sp/>lv_slider_get_max_value(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref><sp/>*<sp/>slider)</highlight></codeline>
<codeline lineno="173"><highlight class="normal">{</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="lv__bar_8h_1a070e92061e9c4f24046e3948921fcedc" kindref="member">lv_bar_get_max_value</ref>(slider);</highlight></codeline>
<codeline lineno="175"><highlight class="normal">}</highlight></codeline>
<codeline lineno="176"><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="lv__slider_8h_1aca2ca8d726dc8ffb640dc827dbacc94f" kindref="member">lv_slider_is_dragged</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref><sp/>*<sp/>slider);</highlight></codeline>
<codeline lineno="183"><highlight class="normal"></highlight></codeline>
<codeline lineno="189"><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>uint16_t<sp/>lv_slider_get_anim_time(<ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref><sp/>*<sp/>slider)</highlight></codeline>
<codeline lineno="190"><highlight class="normal">{</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="lv__bar_8h_1a556e615d724b991643e2e8bd0dfe5ce8" kindref="member">lv_bar_get_anim_time</ref>(slider);</highlight></codeline>
<codeline lineno="192"><highlight class="normal">}</highlight></codeline>
<codeline lineno="193"><highlight class="normal"></highlight></codeline>
<codeline lineno="199"><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>lv_slider_type_t<sp/>lv_slider_get_type(<ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref><sp/>*<sp/>slider)</highlight></codeline>
<codeline lineno="200"><highlight class="normal">{</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/>lv_bar_type_t<sp/>type<sp/>=<sp/><ref refid="lv__bar_8h_1ae21abdf230f956441300126fe9b3e973" kindref="member">lv_bar_get_type</ref>(slider);</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(type<sp/>==<sp/>LV_BAR_TYPE_SYMMETRICAL)</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>LV_SLIDER_TYPE_SYMMETRICAL;</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(type<sp/>==<sp/>LV_BAR_TYPE_CUSTOM)</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>LV_SLIDER_TYPE_RANGE;</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>LV_SLIDER_TYPE_NORMAL;</highlight></codeline>
<codeline lineno="208"><highlight class="normal">}</highlight></codeline>
<codeline lineno="209"><highlight class="normal"></highlight></codeline>
<codeline lineno="210"><highlight class="normal"></highlight><highlight class="comment">/**********************</highlight></codeline>
<codeline lineno="211"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>MACROS</highlight></codeline>
<codeline lineno="212"><highlight class="comment"><sp/>**********************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="normal"></highlight></codeline>
<codeline lineno="214"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*LV_USE_SLIDER*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal"></highlight></codeline>
<codeline lineno="216"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="217"><highlight class="normal">}<sp/></highlight><highlight class="comment">/*<sp/>extern<sp/>&quot;C&quot;<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="218"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="219"><highlight class="normal"></highlight></codeline>
<codeline lineno="220"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*LV_SLIDER_H*/</highlight><highlight class="preprocessor"></highlight></codeline>
    </programlisting>
    <location file="/home/kisvegabor/projects/littlevgl/eclipse-workspace/lv_sim_eclipse_sdl/lvgl/scripts/release_tmp/lvgl/src/lv_widgets/lv_slider.h"/>
  </compounddef>
</doxygen>
