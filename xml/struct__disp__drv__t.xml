<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="struct__disp__drv__t" kind="struct" language="C++" prot="public">
    <compoundname>_disp_drv_t</compoundname>
    <includes refid="lv__hal__disp_8h" local="no">lv_hal_disp.h</includes>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="struct__disp__drv__t_1a7e3be2880c529d5e7662d4db0a07664e" prot="public" static="no" mutable="no">
        <type>lv_coord_t</type>
        <definition>lv_coord_t _disp_drv_t::hor_res</definition>
        <argsstring></argsstring>
        <name>hor_res</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Horizontal resolution. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kisvegabor/projects/littlevgl/eclipse-workspace/lv_sim_eclipse_sdl/lvgl/scripts/release_tmp/lvgl/src/lv_hal/lv_hal_disp.h" line="68" column="1" bodyfile="/home/kisvegabor/projects/littlevgl/eclipse-workspace/lv_sim_eclipse_sdl/lvgl/scripts/release_tmp/lvgl/src/lv_hal/lv_hal_disp.h" bodystart="68" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct__disp__drv__t_1a21f1b312f97ffea34202d5d7846974ee" prot="public" static="no" mutable="no">
        <type>lv_coord_t</type>
        <definition>lv_coord_t _disp_drv_t::ver_res</definition>
        <argsstring></argsstring>
        <name>ver_res</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Vertical resolution. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kisvegabor/projects/littlevgl/eclipse-workspace/lv_sim_eclipse_sdl/lvgl/scripts/release_tmp/lvgl/src/lv_hal/lv_hal_disp.h" line="69" column="1" bodyfile="/home/kisvegabor/projects/littlevgl/eclipse-workspace/lv_sim_eclipse_sdl/lvgl/scripts/release_tmp/lvgl/src/lv_hal/lv_hal_disp.h" bodystart="69" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct__disp__drv__t_1a9187f73accf5f98768402bb004527734" prot="public" static="no" mutable="no">
        <type><ref refid="structlv__disp__buf__t" kindref="compound">lv_disp_buf_t</ref> *</type>
        <definition>lv_disp_buf_t* _disp_drv_t::buffer</definition>
        <argsstring></argsstring>
        <name>buffer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Pointer to a buffer initialized with <computeroutput><ref refid="lv__hal__disp_8h_1a31bfd68c610a609777fe22c30ce70f69" kindref="member">lv_disp_buf_init()</ref></computeroutput>. LVGL will use this buffer(s) to draw the screens contents </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kisvegabor/projects/littlevgl/eclipse-workspace/lv_sim_eclipse_sdl/lvgl/scripts/release_tmp/lvgl/src/lv_hal/lv_hal_disp.h" line="73" column="1" bodyfile="/home/kisvegabor/projects/littlevgl/eclipse-workspace/lv_sim_eclipse_sdl/lvgl/scripts/release_tmp/lvgl/src/lv_hal/lv_hal_disp.h" bodystart="73" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct__disp__drv__t_1a3ef659c52d581d1356466fb198b1e3d5" prot="public" static="no" mutable="no">
        <type>uint32_t</type>
        <definition>uint32_t _disp_drv_t::antialiasing</definition>
        <argsstring></argsstring>
        <name>antialiasing</name>
        <bitfield> 1</bitfield>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>1: antialiasing is enabled on this display. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kisvegabor/projects/littlevgl/eclipse-workspace/lv_sim_eclipse_sdl/lvgl/scripts/release_tmp/lvgl/src/lv_hal/lv_hal_disp.h" line="76" column="1" bodyfile="/home/kisvegabor/projects/littlevgl/eclipse-workspace/lv_sim_eclipse_sdl/lvgl/scripts/release_tmp/lvgl/src/lv_hal/lv_hal_disp.h" bodystart="76" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct__disp__drv__t_1a29a3cccc7f814ae9d77bb2e4fea536f7" prot="public" static="no" mutable="no">
        <type>uint32_t</type>
        <definition>uint32_t _disp_drv_t::rotated</definition>
        <argsstring></argsstring>
        <name>rotated</name>
        <bitfield> 1</bitfield>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>1: turn the display by 90 degree. <simplesect kind="warning"><para>Does not update coordinates for you! </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kisvegabor/projects/littlevgl/eclipse-workspace/lv_sim_eclipse_sdl/lvgl/scripts/release_tmp/lvgl/src/lv_hal/lv_hal_disp.h" line="78" column="1" bodyfile="/home/kisvegabor/projects/littlevgl/eclipse-workspace/lv_sim_eclipse_sdl/lvgl/scripts/release_tmp/lvgl/src/lv_hal/lv_hal_disp.h" bodystart="78" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct__disp__drv__t_1ae07c8244a3ae00bd1c438824311dff54" prot="public" static="no" mutable="no">
        <type>uint32_t</type>
        <definition>uint32_t _disp_drv_t::screen_transp</definition>
        <argsstring></argsstring>
        <name>screen_transp</name>
        <bitfield> 1</bitfield>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Handle if the the screen doesn&apos;t have a solid (opa == LV_OPA_COVER) background. Use only if required because it&apos;s slower. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kisvegabor/projects/littlevgl/eclipse-workspace/lv_sim_eclipse_sdl/lvgl/scripts/release_tmp/lvgl/src/lv_hal/lv_hal_disp.h" line="83" column="1" bodyfile="/home/kisvegabor/projects/littlevgl/eclipse-workspace/lv_sim_eclipse_sdl/lvgl/scripts/release_tmp/lvgl/src/lv_hal/lv_hal_disp.h" bodystart="83" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct__disp__drv__t_1a93d717822cadf02be2545ad2d64e0b75" prot="public" static="no" mutable="no">
        <type>uint32_t</type>
        <definition>uint32_t _disp_drv_t::dpi</definition>
        <argsstring></argsstring>
        <name>dpi</name>
        <bitfield> 10</bitfield>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>DPI (dot per inch) of the display. Set to <computeroutput>LV_DPI</computeroutput> from <computeroutput>lv_Conf.h</computeroutput> by default. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kisvegabor/projects/littlevgl/eclipse-workspace/lv_sim_eclipse_sdl/lvgl/scripts/release_tmp/lvgl/src/lv_hal/lv_hal_disp.h" line="89" column="1" bodyfile="/home/kisvegabor/projects/littlevgl/eclipse-workspace/lv_sim_eclipse_sdl/lvgl/scripts/release_tmp/lvgl/src/lv_hal/lv_hal_disp.h" bodystart="89" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct__disp__drv__t_1a55a620fcab2ffb0d41a12f13c4f41291" prot="public" static="no" mutable="no">
        <type>void(*</type>
        <definition>void(* _disp_drv_t::flush_cb) (struct _disp_drv_t *disp_drv, const lv_area_t *area, lv_color_t *color_p)</definition>
        <argsstring>)(struct _disp_drv_t *disp_drv, const lv_area_t *area, lv_color_t *color_p)</argsstring>
        <name>flush_cb</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>MANDATORY: Write the internal buffer (VDB) to the display. &apos;lv_disp_flush_ready()&apos; has to be called when finished </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kisvegabor/projects/littlevgl/eclipse-workspace/lv_sim_eclipse_sdl/lvgl/scripts/release_tmp/lvgl/src/lv_hal/lv_hal_disp.h" line="93" column="1" bodyfile="/home/kisvegabor/projects/littlevgl/eclipse-workspace/lv_sim_eclipse_sdl/lvgl/scripts/release_tmp/lvgl/src/lv_hal/lv_hal_disp.h" bodystart="93" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct__disp__drv__t_1a1a012c9cb3884a9e960747e55d502629" prot="public" static="no" mutable="no">
        <type>void(*</type>
        <definition>void(* _disp_drv_t::rounder_cb) (struct _disp_drv_t *disp_drv, lv_area_t *area)</definition>
        <argsstring>)(struct _disp_drv_t *disp_drv, lv_area_t *area)</argsstring>
        <name>rounder_cb</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>OPTIONAL: Extend the invalidated areas to match with the display drivers requirements E.g. round <computeroutput>y</computeroutput> to, 8, 16 ..) on a monochrome display </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kisvegabor/projects/littlevgl/eclipse-workspace/lv_sim_eclipse_sdl/lvgl/scripts/release_tmp/lvgl/src/lv_hal/lv_hal_disp.h" line="97" column="1" bodyfile="/home/kisvegabor/projects/littlevgl/eclipse-workspace/lv_sim_eclipse_sdl/lvgl/scripts/release_tmp/lvgl/src/lv_hal/lv_hal_disp.h" bodystart="97" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct__disp__drv__t_1a96466fc0be03f5b3526d382f2c4568bd" prot="public" static="no" mutable="no">
        <type>void(*</type>
        <definition>void(* _disp_drv_t::set_px_cb) (struct _disp_drv_t *disp_drv, uint8_t *buf, lv_coord_t buf_w, lv_coord_t x, lv_coord_t y, lv_color_t color, lv_opa_t opa)</definition>
        <argsstring>)(struct _disp_drv_t *disp_drv, uint8_t *buf, lv_coord_t buf_w, lv_coord_t x, lv_coord_t y, lv_color_t color, lv_opa_t opa)</argsstring>
        <name>set_px_cb</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>OPTIONAL: Set a pixel in a buffer according to the special requirements of the display Can be used for color format not supported in LittelvGL. E.g. 2 bit -&gt; 4 gray scales <simplesect kind="note"><para>Much slower then drawing with supported color formats. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kisvegabor/projects/littlevgl/eclipse-workspace/lv_sim_eclipse_sdl/lvgl/scripts/release_tmp/lvgl/src/lv_hal/lv_hal_disp.h" line="102" column="1" bodyfile="/home/kisvegabor/projects/littlevgl/eclipse-workspace/lv_sim_eclipse_sdl/lvgl/scripts/release_tmp/lvgl/src/lv_hal/lv_hal_disp.h" bodystart="102" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct__disp__drv__t_1aeea2bed761a832dcb30560146dfc3778" prot="public" static="no" mutable="no">
        <type>void(*</type>
        <definition>void(* _disp_drv_t::monitor_cb) (struct _disp_drv_t *disp_drv, uint32_t time, uint32_t px)</definition>
        <argsstring>)(struct _disp_drv_t *disp_drv, uint32_t time, uint32_t px)</argsstring>
        <name>monitor_cb</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>OPTIONAL: Called after every refresh cycle to tell the rendering and flushing time + the number of flushed pixels </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kisvegabor/projects/littlevgl/eclipse-workspace/lv_sim_eclipse_sdl/lvgl/scripts/release_tmp/lvgl/src/lv_hal/lv_hal_disp.h" line="107" column="1" bodyfile="/home/kisvegabor/projects/littlevgl/eclipse-workspace/lv_sim_eclipse_sdl/lvgl/scripts/release_tmp/lvgl/src/lv_hal/lv_hal_disp.h" bodystart="107" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct__disp__drv__t_1a463877a89351206eb9e40547651676ca" prot="public" static="no" mutable="no">
        <type>void(*</type>
        <definition>void(* _disp_drv_t::wait_cb) (struct _disp_drv_t *disp_drv)</definition>
        <argsstring>)(struct _disp_drv_t *disp_drv)</argsstring>
        <name>wait_cb</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>OPTIONAL: Called periodically while lvgl waits for operation to be completed. For example flushing or GPU User can execute very simple tasks here or yield the task </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kisvegabor/projects/littlevgl/eclipse-workspace/lv_sim_eclipse_sdl/lvgl/scripts/release_tmp/lvgl/src/lv_hal/lv_hal_disp.h" line="112" column="1" bodyfile="/home/kisvegabor/projects/littlevgl/eclipse-workspace/lv_sim_eclipse_sdl/lvgl/scripts/release_tmp/lvgl/src/lv_hal/lv_hal_disp.h" bodystart="112" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct__disp__drv__t_1a3a51d09fd664baa53552c72e8209a39d" prot="public" static="no" mutable="no">
        <type>void(*</type>
        <definition>void(* _disp_drv_t::gpu_blend_cb) (struct _disp_drv_t *disp_drv, lv_color_t *dest, const lv_color_t *src, uint32_t length, lv_opa_t opa)</definition>
        <argsstring>)(struct _disp_drv_t *disp_drv, lv_color_t *dest, const lv_color_t *src, uint32_t length, lv_opa_t opa)</argsstring>
        <name>gpu_blend_cb</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>OPTIONAL: Blend two memories using opacity (GPU only) </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kisvegabor/projects/littlevgl/eclipse-workspace/lv_sim_eclipse_sdl/lvgl/scripts/release_tmp/lvgl/src/lv_hal/lv_hal_disp.h" line="116" column="1" bodyfile="/home/kisvegabor/projects/littlevgl/eclipse-workspace/lv_sim_eclipse_sdl/lvgl/scripts/release_tmp/lvgl/src/lv_hal/lv_hal_disp.h" bodystart="116" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct__disp__drv__t_1a6c5d122ced7061fc1195bb095a2edd2a" prot="public" static="no" mutable="no">
        <type>void(*</type>
        <definition>void(* _disp_drv_t::gpu_fill_cb) (struct _disp_drv_t *disp_drv, lv_color_t *dest_buf, lv_coord_t dest_width, const lv_area_t *fill_area, lv_color_t color)</definition>
        <argsstring>)(struct _disp_drv_t *disp_drv, lv_color_t *dest_buf, lv_coord_t dest_width, const lv_area_t *fill_area, lv_color_t color)</argsstring>
        <name>gpu_fill_cb</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>OPTIONAL: Fill a memory with a color (GPU only) </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kisvegabor/projects/littlevgl/eclipse-workspace/lv_sim_eclipse_sdl/lvgl/scripts/release_tmp/lvgl/src/lv_hal/lv_hal_disp.h" line="120" column="1" bodyfile="/home/kisvegabor/projects/littlevgl/eclipse-workspace/lv_sim_eclipse_sdl/lvgl/scripts/release_tmp/lvgl/src/lv_hal/lv_hal_disp.h" bodystart="120" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct__disp__drv__t_1afcc099f8594a566b712353afc37b578d" prot="public" static="no" mutable="no">
        <type><ref refid="unionlv__color1__t" kindref="compound">lv_color_t</ref></type>
        <definition>lv_color_t _disp_drv_t::color_chroma_key</definition>
        <argsstring></argsstring>
        <name>color_chroma_key</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>On CHROMA_KEYED images this color will be transparent. <computeroutput>LV_COLOR_TRANSP</computeroutput> by default. (lv_conf.h) </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kisvegabor/projects/littlevgl/eclipse-workspace/lv_sim_eclipse_sdl/lvgl/scripts/release_tmp/lvgl/src/lv_hal/lv_hal_disp.h" line="126" column="1" bodyfile="/home/kisvegabor/projects/littlevgl/eclipse-workspace/lv_sim_eclipse_sdl/lvgl/scripts/release_tmp/lvgl/src/lv_hal/lv_hal_disp.h" bodystart="126" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct__disp__drv__t_1ac18613f3bd1a2d8f6e85fc54f4dbcb81" prot="public" static="no" mutable="no">
        <type>lv_disp_drv_user_data_t</type>
        <definition>lv_disp_drv_user_data_t _disp_drv_t::user_data</definition>
        <argsstring></argsstring>
        <name>user_data</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Custom display driver user data </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kisvegabor/projects/littlevgl/eclipse-workspace/lv_sim_eclipse_sdl/lvgl/scripts/release_tmp/lvgl/src/lv_hal/lv_hal_disp.h" line="129" column="1" bodyfile="/home/kisvegabor/projects/littlevgl/eclipse-workspace/lv_sim_eclipse_sdl/lvgl/scripts/release_tmp/lvgl/src/lv_hal/lv_hal_disp.h" bodystart="129" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>Display Driver structure to be registered by HAL </para>    </detaileddescription>
    <collaborationgraph>
      <node id="2">
        <label>lv_color1_t</label>
        <link refid="unionlv__color1__t"/>
      </node>
      <node id="3">
        <label>lv_disp_buf_t</label>
        <link refid="structlv__disp__buf__t"/>
        <childnode refid="4" relation="usage">
          <edgelabel>area</edgelabel>
        </childnode>
      </node>
      <node id="4">
        <label>lv_area_t</label>
        <link refid="structlv__area__t"/>
      </node>
      <node id="1">
        <label>_disp_drv_t</label>
        <link refid="struct__disp__drv__t"/>
        <childnode refid="2" relation="usage">
          <edgelabel>color_chroma_key</edgelabel>
        </childnode>
        <childnode refid="3" relation="usage">
          <edgelabel>buffer</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/home/kisvegabor/projects/littlevgl/eclipse-workspace/lv_sim_eclipse_sdl/lvgl/scripts/release_tmp/lvgl/src/lv_hal/lv_hal_disp.h" line="66" column="1" bodyfile="/home/kisvegabor/projects/littlevgl/eclipse-workspace/lv_sim_eclipse_sdl/lvgl/scripts/release_tmp/lvgl/src/lv_hal/lv_hal_disp.h" bodystart="66" bodyend="132"/>
    <listofallmembers>
      <member refid="struct__disp__drv__t_1a3ef659c52d581d1356466fb198b1e3d5" prot="public" virt="non-virtual"><scope>_disp_drv_t</scope><name>antialiasing</name></member>
      <member refid="struct__disp__drv__t_1a9187f73accf5f98768402bb004527734" prot="public" virt="non-virtual"><scope>_disp_drv_t</scope><name>buffer</name></member>
      <member refid="struct__disp__drv__t_1afcc099f8594a566b712353afc37b578d" prot="public" virt="non-virtual"><scope>_disp_drv_t</scope><name>color_chroma_key</name></member>
      <member refid="struct__disp__drv__t_1a93d717822cadf02be2545ad2d64e0b75" prot="public" virt="non-virtual"><scope>_disp_drv_t</scope><name>dpi</name></member>
      <member refid="struct__disp__drv__t_1a55a620fcab2ffb0d41a12f13c4f41291" prot="public" virt="non-virtual"><scope>_disp_drv_t</scope><name>flush_cb</name></member>
      <member refid="struct__disp__drv__t_1a3a51d09fd664baa53552c72e8209a39d" prot="public" virt="non-virtual"><scope>_disp_drv_t</scope><name>gpu_blend_cb</name></member>
      <member refid="struct__disp__drv__t_1a6c5d122ced7061fc1195bb095a2edd2a" prot="public" virt="non-virtual"><scope>_disp_drv_t</scope><name>gpu_fill_cb</name></member>
      <member refid="struct__disp__drv__t_1a7e3be2880c529d5e7662d4db0a07664e" prot="public" virt="non-virtual"><scope>_disp_drv_t</scope><name>hor_res</name></member>
      <member refid="struct__disp__drv__t_1aeea2bed761a832dcb30560146dfc3778" prot="public" virt="non-virtual"><scope>_disp_drv_t</scope><name>monitor_cb</name></member>
      <member refid="struct__disp__drv__t_1a29a3cccc7f814ae9d77bb2e4fea536f7" prot="public" virt="non-virtual"><scope>_disp_drv_t</scope><name>rotated</name></member>
      <member refid="struct__disp__drv__t_1a1a012c9cb3884a9e960747e55d502629" prot="public" virt="non-virtual"><scope>_disp_drv_t</scope><name>rounder_cb</name></member>
      <member refid="struct__disp__drv__t_1ae07c8244a3ae00bd1c438824311dff54" prot="public" virt="non-virtual"><scope>_disp_drv_t</scope><name>screen_transp</name></member>
      <member refid="struct__disp__drv__t_1a96466fc0be03f5b3526d382f2c4568bd" prot="public" virt="non-virtual"><scope>_disp_drv_t</scope><name>set_px_cb</name></member>
      <member refid="struct__disp__drv__t_1ac18613f3bd1a2d8f6e85fc54f4dbcb81" prot="public" virt="non-virtual"><scope>_disp_drv_t</scope><name>user_data</name></member>
      <member refid="struct__disp__drv__t_1a21f1b312f97ffea34202d5d7846974ee" prot="public" virt="non-virtual"><scope>_disp_drv_t</scope><name>ver_res</name></member>
      <member refid="struct__disp__drv__t_1a463877a89351206eb9e40547651676ca" prot="public" virt="non-virtual"><scope>_disp_drv_t</scope><name>wait_cb</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
