<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="lv__area_8h" kind="file" language="C++">
    <compoundname>lv_area.h</compoundname>
    <innerclass refid="structlv__point__t" prot="public">lv_point_t</innerclass>
    <innerclass refid="structlv__area__t" prot="public">lv_area_t</innerclass>
      <sectiondef kind="enum">
      <memberdef kind="enum" id="lv__area_8h_1a77867ab4129f63159b37bca3b652a798" prot="public" static="no">
        <name>@38</name>
        <enumvalue id="lv__area_8h_1a77867ab4129f63159b37bca3b652a798a20123fd9c5a65eab77c01ccedc25ae20" prot="public">
          <name>LV_ALIGN_CENTER</name>
          <initializer>= 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="lv__area_8h_1a77867ab4129f63159b37bca3b652a798ab9420fe81a3a7f6b0768cccd8915402b" prot="public">
          <name>LV_ALIGN_IN_TOP_LEFT</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="lv__area_8h_1a77867ab4129f63159b37bca3b652a798a78e9b88d8aab195eb01b741480863cd3" prot="public">
          <name>LV_ALIGN_IN_TOP_MID</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="lv__area_8h_1a77867ab4129f63159b37bca3b652a798a6d228de773e87e252d2f45c64696352f" prot="public">
          <name>LV_ALIGN_IN_TOP_RIGHT</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="lv__area_8h_1a77867ab4129f63159b37bca3b652a798a4acd2b205d177d8825353d0ff0add5fe" prot="public">
          <name>LV_ALIGN_IN_BOTTOM_LEFT</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="lv__area_8h_1a77867ab4129f63159b37bca3b652a798af02682b8adef61c0dfedb4a0ec20daf3" prot="public">
          <name>LV_ALIGN_IN_BOTTOM_MID</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="lv__area_8h_1a77867ab4129f63159b37bca3b652a798a6476b0cdad7cd3abbfe1e8a417057058" prot="public">
          <name>LV_ALIGN_IN_BOTTOM_RIGHT</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="lv__area_8h_1a77867ab4129f63159b37bca3b652a798a1d6c48905a9f5e1d9090abba39167cb2" prot="public">
          <name>LV_ALIGN_IN_LEFT_MID</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="lv__area_8h_1a77867ab4129f63159b37bca3b652a798acf93cdd8617c664e44141adbe36a737a" prot="public">
          <name>LV_ALIGN_IN_RIGHT_MID</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="lv__area_8h_1a77867ab4129f63159b37bca3b652a798ac0ece5fa2d6519aba4d45d13daf28979" prot="public">
          <name>LV_ALIGN_OUT_TOP_LEFT</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="lv__area_8h_1a77867ab4129f63159b37bca3b652a798aa777bf29c22b0a10af907fcedddf77f0" prot="public">
          <name>LV_ALIGN_OUT_TOP_MID</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="lv__area_8h_1a77867ab4129f63159b37bca3b652a798aa8b0610a86bfea2446733b39e99b9b42" prot="public">
          <name>LV_ALIGN_OUT_TOP_RIGHT</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="lv__area_8h_1a77867ab4129f63159b37bca3b652a798a6d5090a41e5c7502a121d4cefd00201e" prot="public">
          <name>LV_ALIGN_OUT_BOTTOM_LEFT</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="lv__area_8h_1a77867ab4129f63159b37bca3b652a798a5187fe814b2e899f5ccc1ecbe35c8594" prot="public">
          <name>LV_ALIGN_OUT_BOTTOM_MID</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="lv__area_8h_1a77867ab4129f63159b37bca3b652a798a6dbce5fa907703b5aae46bcd88be0413" prot="public">
          <name>LV_ALIGN_OUT_BOTTOM_RIGHT</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="lv__area_8h_1a77867ab4129f63159b37bca3b652a798a0e1268aa57ae0bce02ce9930ff757885" prot="public">
          <name>LV_ALIGN_OUT_LEFT_TOP</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="lv__area_8h_1a77867ab4129f63159b37bca3b652a798a331b85b8ca2bd77dbfad3985d26fd17f" prot="public">
          <name>LV_ALIGN_OUT_LEFT_MID</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="lv__area_8h_1a77867ab4129f63159b37bca3b652a798a5307ef599c41f1fa5a5dc7d8716b9d3c" prot="public">
          <name>LV_ALIGN_OUT_LEFT_BOTTOM</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="lv__area_8h_1a77867ab4129f63159b37bca3b652a798ae73bd3ecce823d0b1a3f481fb5d07869" prot="public">
          <name>LV_ALIGN_OUT_RIGHT_TOP</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="lv__area_8h_1a77867ab4129f63159b37bca3b652a798adcc0fb9fc2bdf9d7fc6484ed7c4cd7f0" prot="public">
          <name>LV_ALIGN_OUT_RIGHT_MID</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="lv__area_8h_1a77867ab4129f63159b37bca3b652a798af47dfe5e0426589e5b738d531a638ab6" prot="public">
          <name>LV_ALIGN_OUT_RIGHT_BOTTOM</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Alignments </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kisvegabor/projects/littlevgl/eclipse-workspace/lv_sim_eclipse_sdl/lvgl/scripts/release_tmp/lvgl/src/lv_misc/lv_area.h" line="55" column="1" bodyfile="/home/kisvegabor/projects/littlevgl/eclipse-workspace/lv_sim_eclipse_sdl/lvgl/scripts/release_tmp/lvgl/src/lv_misc/lv_area.h" bodystart="55" bodyend="77"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="lv__area_8h_1a764d29937ae4f6253a249a427a91e4d8" prot="public" static="no">
        <type>uint8_t</type>
        <definition>typedef uint8_t lv_align_t</definition>
        <argsstring></argsstring>
        <name>lv_align_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kisvegabor/projects/littlevgl/eclipse-workspace/lv_sim_eclipse_sdl/lvgl/scripts/release_tmp/lvgl/src/lv_misc/lv_area.h" line="78" column="1" bodyfile="/home/kisvegabor/projects/littlevgl/eclipse-workspace/lv_sim_eclipse_sdl/lvgl/scripts/release_tmp/lvgl/src/lv_misc/lv_area.h" bodystart="78" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="lv__area_8h_1a37647854443a499e54bb174860c5afa9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>LV_EXPORT_CONST_INT</definition>
        <argsstring>(LV_COORD_MAX)</argsstring>
        <name>LV_EXPORT_CONST_INT</name>
        <param>
          <type>LV_COORD_MAX</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kisvegabor/projects/littlevgl/eclipse-workspace/lv_sim_eclipse_sdl/lvgl/scripts/release_tmp/lvgl/src/lv_misc/lv_area.h" line="29" column="1"/>
      </memberdef>
      <memberdef kind="function" id="lv__area_8h_1aa4a14c21f2b6153037736a2405a0e369" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>LV_EXPORT_CONST_INT</definition>
        <argsstring>(LV_COORD_MIN)</argsstring>
        <name>LV_EXPORT_CONST_INT</name>
        <param>
          <type>LV_COORD_MIN</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kisvegabor/projects/littlevgl/eclipse-workspace/lv_sim_eclipse_sdl/lvgl/scripts/release_tmp/lvgl/src/lv_misc/lv_area.h" line="30" column="1"/>
      </memberdef>
      <memberdef kind="function" id="lv__area_8h_1a8a6f63df40693641307a31d39f44101d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void lv_area_set</definition>
        <argsstring>(lv_area_t *area_p, lv_coord_t x1, lv_coord_t y1, lv_coord_t x2, lv_coord_t y2)</argsstring>
        <name>lv_area_set</name>
        <param>
          <type><ref refid="structlv__area__t" kindref="compound">lv_area_t</ref> *</type>
          <declname>area_p</declname>
        </param>
        <param>
          <type>lv_coord_t</type>
          <declname>x1</declname>
        </param>
        <param>
          <type>lv_coord_t</type>
          <declname>y1</declname>
        </param>
        <param>
          <type>lv_coord_t</type>
          <declname>x2</declname>
        </param>
        <param>
          <type>lv_coord_t</type>
          <declname>y2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Initialize an area <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>area_p</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to an area </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>x1</parametername>
</parameternamelist>
<parameterdescription>
<para>left coordinate of the area </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>y1</parametername>
</parameternamelist>
<parameterdescription>
<para>top coordinate of the area </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>x2</parametername>
</parameternamelist>
<parameterdescription>
<para>right coordinate of the area </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>y2</parametername>
</parameternamelist>
<parameterdescription>
<para>bottom coordinate of the area </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kisvegabor/projects/littlevgl/eclipse-workspace/lv_sim_eclipse_sdl/lvgl/scripts/release_tmp/lvgl/src/lv_misc/lv_area.h" line="93" column="1"/>
      </memberdef>
      <memberdef kind="function" id="lv__area_8h_1a8cd923a44f2a33946baed7793072c24b" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void lv_area_copy</definition>
        <argsstring>(lv_area_t *dest, const lv_area_t *src)</argsstring>
        <name>lv_area_copy</name>
        <param>
          <type><ref refid="structlv__area__t" kindref="compound">lv_area_t</ref> *</type>
          <declname>dest</declname>
        </param>
        <param>
          <type>const <ref refid="structlv__area__t" kindref="compound">lv_area_t</ref> *</type>
          <declname>src</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Copy an area <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dest</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to the destination area </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>src</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to the source area </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kisvegabor/projects/littlevgl/eclipse-workspace/lv_sim_eclipse_sdl/lvgl/scripts/release_tmp/lvgl/src/lv_misc/lv_area.h" line="100" column="1" bodyfile="/home/kisvegabor/projects/littlevgl/eclipse-workspace/lv_sim_eclipse_sdl/lvgl/scripts/release_tmp/lvgl/src/lv_misc/lv_area.h" bodystart="100" bodyend="103"/>
      </memberdef>
      <memberdef kind="function" id="lv__area_8h_1ab647b6dee16fa579c54ab6659caa8998" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>lv_coord_t</type>
        <definition>static lv_coord_t lv_area_get_width</definition>
        <argsstring>(const lv_area_t *area_p)</argsstring>
        <name>lv_area_get_width</name>
        <param>
          <type>const <ref refid="structlv__area__t" kindref="compound">lv_area_t</ref> *</type>
          <declname>area_p</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the width of an area <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>area_p</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to an area </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the width of the area (if x1 == x2 -&gt; width = 1) </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kisvegabor/projects/littlevgl/eclipse-workspace/lv_sim_eclipse_sdl/lvgl/scripts/release_tmp/lvgl/src/lv_misc/lv_area.h" line="110" column="1" bodyfile="/home/kisvegabor/projects/littlevgl/eclipse-workspace/lv_sim_eclipse_sdl/lvgl/scripts/release_tmp/lvgl/src/lv_misc/lv_area.h" bodystart="110" bodyend="113"/>
      </memberdef>
      <memberdef kind="function" id="lv__area_8h_1a425546b8d4b319859f313f50f3e5becf" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>lv_coord_t</type>
        <definition>static lv_coord_t lv_area_get_height</definition>
        <argsstring>(const lv_area_t *area_p)</argsstring>
        <name>lv_area_get_height</name>
        <param>
          <type>const <ref refid="structlv__area__t" kindref="compound">lv_area_t</ref> *</type>
          <declname>area_p</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the height of an area <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>area_p</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to an area </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the height of the area (if y1 == y2 -&gt; height = 1) </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kisvegabor/projects/littlevgl/eclipse-workspace/lv_sim_eclipse_sdl/lvgl/scripts/release_tmp/lvgl/src/lv_misc/lv_area.h" line="120" column="1" bodyfile="/home/kisvegabor/projects/littlevgl/eclipse-workspace/lv_sim_eclipse_sdl/lvgl/scripts/release_tmp/lvgl/src/lv_misc/lv_area.h" bodystart="120" bodyend="123"/>
      </memberdef>
      <memberdef kind="function" id="lv__area_8h_1a7cd8866c2312050e4541d5cdd862ed4a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void lv_area_set_width</definition>
        <argsstring>(lv_area_t *area_p, lv_coord_t w)</argsstring>
        <name>lv_area_set_width</name>
        <param>
          <type><ref refid="structlv__area__t" kindref="compound">lv_area_t</ref> *</type>
          <declname>area_p</declname>
        </param>
        <param>
          <type>lv_coord_t</type>
          <declname>w</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set the width of an area <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>area_p</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to an area </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>w</parametername>
</parameternamelist>
<parameterdescription>
<para>the new width of the area (w == 1 makes x1 == x2) </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kisvegabor/projects/littlevgl/eclipse-workspace/lv_sim_eclipse_sdl/lvgl/scripts/release_tmp/lvgl/src/lv_misc/lv_area.h" line="130" column="1"/>
      </memberdef>
      <memberdef kind="function" id="lv__area_8h_1a092d265b43760f45dded850e64c175c7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void lv_area_set_height</definition>
        <argsstring>(lv_area_t *area_p, lv_coord_t h)</argsstring>
        <name>lv_area_set_height</name>
        <param>
          <type><ref refid="structlv__area__t" kindref="compound">lv_area_t</ref> *</type>
          <declname>area_p</declname>
        </param>
        <param>
          <type>lv_coord_t</type>
          <declname>h</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set the height of an area <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>area_p</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to an area </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>h</parametername>
</parameternamelist>
<parameterdescription>
<para>the new height of the area (h == 1 makes y1 == y2) </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kisvegabor/projects/littlevgl/eclipse-workspace/lv_sim_eclipse_sdl/lvgl/scripts/release_tmp/lvgl/src/lv_misc/lv_area.h" line="137" column="1"/>
      </memberdef>
      <memberdef kind="function" id="lv__area_8h_1a93c17d195ae8ee121b4f1c5511c083c4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void _lv_area_set_pos</definition>
        <argsstring>(lv_area_t *area_p, lv_coord_t x, lv_coord_t y)</argsstring>
        <name>_lv_area_set_pos</name>
        <param>
          <type><ref refid="structlv__area__t" kindref="compound">lv_area_t</ref> *</type>
          <declname>area_p</declname>
        </param>
        <param>
          <type>lv_coord_t</type>
          <declname>x</declname>
        </param>
        <param>
          <type>lv_coord_t</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set the position of an area (width and height will be kept) <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>area_p</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to an area </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>the new x coordinate of the area </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>y</parametername>
</parameternamelist>
<parameterdescription>
<para>the new y coordinate of the area </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kisvegabor/projects/littlevgl/eclipse-workspace/lv_sim_eclipse_sdl/lvgl/scripts/release_tmp/lvgl/src/lv_misc/lv_area.h" line="145" column="1"/>
      </memberdef>
      <memberdef kind="function" id="lv__area_8h_1a71b2b35191f41ba629245399ce5aaf39" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint32_t</type>
        <definition>uint32_t lv_area_get_size</definition>
        <argsstring>(const lv_area_t *area_p)</argsstring>
        <name>lv_area_get_size</name>
        <param>
          <type>const <ref refid="structlv__area__t" kindref="compound">lv_area_t</ref> *</type>
          <declname>area_p</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Return with area of an area (x * y) <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>area_p</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to an area </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>size of area </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kisvegabor/projects/littlevgl/eclipse-workspace/lv_sim_eclipse_sdl/lvgl/scripts/release_tmp/lvgl/src/lv_misc/lv_area.h" line="152" column="1"/>
      </memberdef>
      <memberdef kind="function" id="lv__area_8h_1a4d3f162819f5c73af3f8db373bd760a1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool _lv_area_intersect</definition>
        <argsstring>(lv_area_t *res_p, const lv_area_t *a1_p, const lv_area_t *a2_p)</argsstring>
        <name>_lv_area_intersect</name>
        <param>
          <type><ref refid="structlv__area__t" kindref="compound">lv_area_t</ref> *</type>
          <declname>res_p</declname>
        </param>
        <param>
          <type>const <ref refid="structlv__area__t" kindref="compound">lv_area_t</ref> *</type>
          <declname>a1_p</declname>
        </param>
        <param>
          <type>const <ref refid="structlv__area__t" kindref="compound">lv_area_t</ref> *</type>
          <declname>a2_p</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the common parts of two areas <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>res_p</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to an area, the result will be stored her </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>a1_p</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to the first area </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>a2_p</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to the second area </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>false: the two area has NO common parts, res_p is invalid </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kisvegabor/projects/littlevgl/eclipse-workspace/lv_sim_eclipse_sdl/lvgl/scripts/release_tmp/lvgl/src/lv_misc/lv_area.h" line="161" column="1"/>
      </memberdef>
      <memberdef kind="function" id="lv__area_8h_1a5bd88e6608979c209bdfedbd69c6ef96" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void _lv_area_join</definition>
        <argsstring>(lv_area_t *a_res_p, const lv_area_t *a1_p, const lv_area_t *a2_p)</argsstring>
        <name>_lv_area_join</name>
        <param>
          <type><ref refid="structlv__area__t" kindref="compound">lv_area_t</ref> *</type>
          <declname>a_res_p</declname>
        </param>
        <param>
          <type>const <ref refid="structlv__area__t" kindref="compound">lv_area_t</ref> *</type>
          <declname>a1_p</declname>
        </param>
        <param>
          <type>const <ref refid="structlv__area__t" kindref="compound">lv_area_t</ref> *</type>
          <declname>a2_p</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Join two areas into a third which involves the other two <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>res_p</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to an area, the result will be stored here </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>a1_p</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to the first area </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>a2_p</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to the second area </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kisvegabor/projects/littlevgl/eclipse-workspace/lv_sim_eclipse_sdl/lvgl/scripts/release_tmp/lvgl/src/lv_misc/lv_area.h" line="169" column="1"/>
      </memberdef>
      <memberdef kind="function" id="lv__area_8h_1a30c4474631d2c3cd2933816181c71aa1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool _lv_area_is_point_on</definition>
        <argsstring>(const lv_area_t *a_p, const lv_point_t *p_p, lv_coord_t radius)</argsstring>
        <name>_lv_area_is_point_on</name>
        <param>
          <type>const <ref refid="structlv__area__t" kindref="compound">lv_area_t</ref> *</type>
          <declname>a_p</declname>
        </param>
        <param>
          <type>const <ref refid="structlv__point__t" kindref="compound">lv_point_t</ref> *</type>
          <declname>p_p</declname>
        </param>
        <param>
          <type>lv_coord_t</type>
          <declname>radius</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Check if a point is on an area <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>a_p</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to an area </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>p_p</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to a point </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>radius</parametername>
</parameternamelist>
<parameterdescription>
<para>radius of area (e.g. for rounded rectangle) </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>false:the point is out of the area </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kisvegabor/projects/littlevgl/eclipse-workspace/lv_sim_eclipse_sdl/lvgl/scripts/release_tmp/lvgl/src/lv_misc/lv_area.h" line="178" column="1"/>
      </memberdef>
      <memberdef kind="function" id="lv__area_8h_1a587e67744f4705f9f0304770338c8739" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool _lv_area_is_on</definition>
        <argsstring>(const lv_area_t *a1_p, const lv_area_t *a2_p)</argsstring>
        <name>_lv_area_is_on</name>
        <param>
          <type>const <ref refid="structlv__area__t" kindref="compound">lv_area_t</ref> *</type>
          <declname>a1_p</declname>
        </param>
        <param>
          <type>const <ref refid="structlv__area__t" kindref="compound">lv_area_t</ref> *</type>
          <declname>a2_p</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Check if two area has common parts <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>a1_p</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to an area. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>a2_p</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to an other area </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>false: a1_p and a2_p has no common parts </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kisvegabor/projects/littlevgl/eclipse-workspace/lv_sim_eclipse_sdl/lvgl/scripts/release_tmp/lvgl/src/lv_misc/lv_area.h" line="186" column="1"/>
      </memberdef>
      <memberdef kind="function" id="lv__area_8h_1a1b2cb8180bd2812620c2845a32ebaecb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool _lv_area_is_in</definition>
        <argsstring>(const lv_area_t *ain_p, const lv_area_t *aholder_p, lv_coord_t radius)</argsstring>
        <name>_lv_area_is_in</name>
        <param>
          <type>const <ref refid="structlv__area__t" kindref="compound">lv_area_t</ref> *</type>
          <declname>ain_p</declname>
        </param>
        <param>
          <type>const <ref refid="structlv__area__t" kindref="compound">lv_area_t</ref> *</type>
          <declname>aholder_p</declname>
        </param>
        <param>
          <type>lv_coord_t</type>
          <declname>radius</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Check if an area is fully on an other <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ain_p</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to an area which could be in &apos;aholder_p&apos; </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>aholder_p</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to an area which could involve &apos;ain_p&apos; </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>radius</parametername>
</parameternamelist>
<parameterdescription>
<para>radius of <computeroutput>aholder_p</computeroutput> (e.g. for rounded rectangle) </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true: <computeroutput>ain_p</computeroutput> is fully inside <computeroutput>aholder_p</computeroutput> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kisvegabor/projects/littlevgl/eclipse-workspace/lv_sim_eclipse_sdl/lvgl/scripts/release_tmp/lvgl/src/lv_misc/lv_area.h" line="195" column="1"/>
      </memberdef>
      <memberdef kind="function" id="lv__area_8h_1a83e515bef74a7255ce16263846975f52" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void _lv_area_align</definition>
        <argsstring>(const lv_area_t *base, const lv_area_t *to_align, lv_align_t align, lv_point_t *res)</argsstring>
        <name>_lv_area_align</name>
        <param>
          <type>const <ref refid="structlv__area__t" kindref="compound">lv_area_t</ref> *</type>
          <declname>base</declname>
        </param>
        <param>
          <type>const <ref refid="structlv__area__t" kindref="compound">lv_area_t</ref> *</type>
          <declname>to_align</declname>
        </param>
        <param>
          <type>lv_align_t</type>
          <declname>align</declname>
        </param>
        <param>
          <type><ref refid="structlv__point__t" kindref="compound">lv_point_t</ref> *</type>
          <declname>res</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Align an area to an other <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>base</parametername>
</parameternamelist>
<parameterdescription>
<para>an are where the other will be aligned </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>to_align</parametername>
</parameternamelist>
<parameterdescription>
<para>the area to align </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>align</parametername>
</parameternamelist>
<parameterdescription>
<para><computeroutput>LV_ALIGN_...</computeroutput> </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>res</parametername>
</parameternamelist>
<parameterdescription>
<para>x/y coordinates where <computeroutput>to_align</computeroutput> align area should be placed </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kisvegabor/projects/littlevgl/eclipse-workspace/lv_sim_eclipse_sdl/lvgl/scripts/release_tmp/lvgl/src/lv_misc/lv_area.h" line="205" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"></codeline>
<codeline lineno="6"><highlight class="preprocessor">#ifndef<sp/>LV_AREA_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LV_AREA_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">/*********************</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>INCLUDES</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*********************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../lv_conf_internal.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdbool.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdint.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="lv__mem_8h" kindref="compound">lv_mem.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="comment">/*********************</highlight></codeline>
<codeline lineno="23"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>DEFINES</highlight></codeline>
<codeline lineno="24"><highlight class="comment"><sp/>*********************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="comment">/*To<sp/>avoid<sp/>overflow<sp/>don&apos;t<sp/>let<sp/>the<sp/>max<sp/>ranges<sp/>(reduce<sp/>with<sp/>1000)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LV_COORD_MAX<sp/>((lv_coord_t)((uint32_t)((uint32_t)1<sp/>&lt;&lt;<sp/>(8<sp/>*<sp/>sizeof(lv_coord_t)<sp/>-<sp/>1))<sp/>-<sp/>1000))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LV_COORD_MIN<sp/>(-LV_COORD_MAX)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal">LV_EXPORT_CONST_INT(LV_COORD_MAX);</highlight></codeline>
<codeline lineno="30"><highlight class="normal">LV_EXPORT_CONST_INT(LV_COORD_MIN);</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="comment">/**********************</highlight></codeline>
<codeline lineno="33"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>TYPEDEFS</highlight></codeline>
<codeline lineno="34"><highlight class="comment"><sp/>**********************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="39" refid="structlv__point__t" refkind="compound"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/>lv_coord_t<sp/>x;</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/>lv_coord_t<sp/>y;</highlight></codeline>
<codeline lineno="42"><highlight class="normal">}<sp/><ref refid="structlv__point__t" kindref="compound">lv_point_t</ref>;</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="45" refid="structlv__area__t" refkind="compound"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/>lv_coord_t<sp/>x1;</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/>lv_coord_t<sp/>y1;</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/>lv_coord_t<sp/>x2;</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/>lv_coord_t<sp/>y2;</highlight></codeline>
<codeline lineno="50"><highlight class="normal">}<sp/><ref refid="structlv__area__t" kindref="compound">lv_area_t</ref>;</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/>LV_ALIGN_CENTER<sp/>=<sp/>0,</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/>LV_ALIGN_IN_TOP_LEFT,</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/>LV_ALIGN_IN_TOP_MID,</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/>LV_ALIGN_IN_TOP_RIGHT,</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/>LV_ALIGN_IN_BOTTOM_LEFT,</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/>LV_ALIGN_IN_BOTTOM_MID,</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/>LV_ALIGN_IN_BOTTOM_RIGHT,</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/>LV_ALIGN_IN_LEFT_MID,</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/>LV_ALIGN_IN_RIGHT_MID,</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/>LV_ALIGN_OUT_TOP_LEFT,</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/>LV_ALIGN_OUT_TOP_MID,</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/>LV_ALIGN_OUT_TOP_RIGHT,</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/>LV_ALIGN_OUT_BOTTOM_LEFT,</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/>LV_ALIGN_OUT_BOTTOM_MID,</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/>LV_ALIGN_OUT_BOTTOM_RIGHT,</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/>LV_ALIGN_OUT_LEFT_TOP,</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/>LV_ALIGN_OUT_LEFT_MID,</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/>LV_ALIGN_OUT_LEFT_BOTTOM,</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/>LV_ALIGN_OUT_RIGHT_TOP,</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/>LV_ALIGN_OUT_RIGHT_MID,</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/>LV_ALIGN_OUT_RIGHT_BOTTOM,</highlight></codeline>
<codeline lineno="77"><highlight class="normal">};</highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>uint8_t<sp/>lv_align_t;</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight><highlight class="comment">/**********************</highlight></codeline>
<codeline lineno="82"><highlight class="comment"><sp/>*<sp/>GLOBAL<sp/>PROTOTYPES</highlight></codeline>
<codeline lineno="83"><highlight class="comment"><sp/>**********************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="lv__area_8h_1a8a6f63df40693641307a31d39f44101d" kindref="member">lv_area_set</ref>(<ref refid="structlv__area__t" kindref="compound">lv_area_t</ref><sp/>*<sp/>area_p,<sp/>lv_coord_t<sp/>x1,<sp/>lv_coord_t<sp/>y1,<sp/>lv_coord_t<sp/>x2,<sp/>lv_coord_t<sp/>y2);</highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>lv_area_copy(<ref refid="structlv__area__t" kindref="compound">lv_area_t</ref><sp/>*<sp/>dest,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structlv__area__t" kindref="compound">lv_area_t</ref><sp/>*<sp/>src)</highlight></codeline>
<codeline lineno="101"><highlight class="normal">{</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/>_lv_memcpy_small(dest,<sp/>src,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="structlv__area__t" kindref="compound">lv_area_t</ref>));</highlight></codeline>
<codeline lineno="103"><highlight class="normal">}</highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>lv_coord_t<sp/>lv_area_get_width(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structlv__area__t" kindref="compound">lv_area_t</ref><sp/>*<sp/>area_p)</highlight></codeline>
<codeline lineno="111"><highlight class="normal">{</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(lv_coord_t)(area_p-&gt;x2<sp/>-<sp/>area_p-&gt;x1<sp/>+<sp/>1);</highlight></codeline>
<codeline lineno="113"><highlight class="normal">}</highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>lv_coord_t<sp/>lv_area_get_height(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structlv__area__t" kindref="compound">lv_area_t</ref><sp/>*<sp/>area_p)</highlight></codeline>
<codeline lineno="121"><highlight class="normal">{</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(lv_coord_t)(area_p-&gt;y2<sp/>-<sp/>area_p-&gt;y1<sp/>+<sp/>1);</highlight></codeline>
<codeline lineno="123"><highlight class="normal">}</highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="lv__area_8h_1a7cd8866c2312050e4541d5cdd862ed4a" kindref="member">lv_area_set_width</ref>(<ref refid="structlv__area__t" kindref="compound">lv_area_t</ref><sp/>*<sp/>area_p,<sp/>lv_coord_t<sp/>w);</highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="lv__area_8h_1a092d265b43760f45dded850e64c175c7" kindref="member">lv_area_set_height</ref>(<ref refid="structlv__area__t" kindref="compound">lv_area_t</ref><sp/>*<sp/>area_p,<sp/>lv_coord_t<sp/>h);</highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="lv__area_8h_1a93c17d195ae8ee121b4f1c5511c083c4" kindref="member">_lv_area_set_pos</ref>(<ref refid="structlv__area__t" kindref="compound">lv_area_t</ref><sp/>*<sp/>area_p,<sp/>lv_coord_t<sp/>x,<sp/>lv_coord_t<sp/>y);</highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal">uint32_t<sp/><ref refid="lv__area_8h_1a71b2b35191f41ba629245399ce5aaf39" kindref="member">lv_area_get_size</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structlv__area__t" kindref="compound">lv_area_t</ref><sp/>*<sp/>area_p);</highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="lv__area_8h_1a4d3f162819f5c73af3f8db373bd760a1" kindref="member">_lv_area_intersect</ref>(<ref refid="structlv__area__t" kindref="compound">lv_area_t</ref><sp/>*<sp/>res_p,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structlv__area__t" kindref="compound">lv_area_t</ref><sp/>*<sp/>a1_p,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structlv__area__t" kindref="compound">lv_area_t</ref><sp/>*<sp/>a2_p);</highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="lv__area_8h_1a5bd88e6608979c209bdfedbd69c6ef96" kindref="member">_lv_area_join</ref>(<ref refid="structlv__area__t" kindref="compound">lv_area_t</ref><sp/>*<sp/>a_res_p,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structlv__area__t" kindref="compound">lv_area_t</ref><sp/>*<sp/>a1_p,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structlv__area__t" kindref="compound">lv_area_t</ref><sp/>*<sp/>a2_p);</highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="lv__area_8h_1a30c4474631d2c3cd2933816181c71aa1" kindref="member">_lv_area_is_point_on</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structlv__area__t" kindref="compound">lv_area_t</ref><sp/>*<sp/>a_p,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structlv__point__t" kindref="compound">lv_point_t</ref><sp/>*<sp/>p_p,<sp/>lv_coord_t<sp/>radius);</highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="lv__area_8h_1a587e67744f4705f9f0304770338c8739" kindref="member">_lv_area_is_on</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structlv__area__t" kindref="compound">lv_area_t</ref><sp/>*<sp/>a1_p,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structlv__area__t" kindref="compound">lv_area_t</ref><sp/>*<sp/>a2_p);</highlight></codeline>
<codeline lineno="187"><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="lv__area_8h_1a1b2cb8180bd2812620c2845a32ebaecb" kindref="member">_lv_area_is_in</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structlv__area__t" kindref="compound">lv_area_t</ref><sp/>*<sp/>ain_p,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structlv__area__t" kindref="compound">lv_area_t</ref><sp/>*<sp/>aholder_p,<sp/>lv_coord_t<sp/>radius);</highlight></codeline>
<codeline lineno="196"><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal"></highlight></codeline>
<codeline lineno="205"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="lv__area_8h_1a83e515bef74a7255ce16263846975f52" kindref="member">_lv_area_align</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structlv__area__t" kindref="compound">lv_area_t</ref><sp/>*<sp/>base,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structlv__area__t" kindref="compound">lv_area_t</ref><sp/>*<sp/>to_align,<sp/>lv_align_t<sp/>align,<sp/><ref refid="structlv__point__t" kindref="compound">lv_point_t</ref><sp/>*<sp/>res);</highlight></codeline>
<codeline lineno="206"><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal"></highlight><highlight class="comment">/**********************</highlight></codeline>
<codeline lineno="208"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>MACROS</highlight></codeline>
<codeline lineno="209"><highlight class="comment"><sp/>**********************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="210"><highlight class="normal"></highlight></codeline>
<codeline lineno="211"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="212"><highlight class="normal">}<sp/></highlight><highlight class="comment">/*<sp/>extern<sp/>&quot;C&quot;<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="214"><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="/home/kisvegabor/projects/littlevgl/eclipse-workspace/lv_sim_eclipse_sdl/lvgl/scripts/release_tmp/lvgl/src/lv_misc/lv_area.h"/>
  </compounddef>
</doxygen>
