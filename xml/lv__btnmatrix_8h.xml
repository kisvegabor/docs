<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="lv__btnmatrix_8h" kind="file" language="C++">
    <compoundname>lv_btnmatrix.h</compoundname>
    <innerclass refid="structlv__btnmatrix__ext__t" prot="public">lv_btnmatrix_ext_t</innerclass>
      <sectiondef kind="enum">
      <memberdef kind="enum" id="lv__btnmatrix_8h_1afa9be5679ab03d785820f2474c5ccc6e" prot="public" static="no">
        <name>@57</name>
        <enumvalue id="lv__btnmatrix_8h_1afa9be5679ab03d785820f2474c5ccc6eaae147a0e550c0e9b856bda9f37a08a82" prot="public">
          <name>LV_BTNMATRIX_CTRL_HIDDEN</name>
          <initializer>= 0x0008</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Button hidden </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="lv__btnmatrix_8h_1afa9be5679ab03d785820f2474c5ccc6ea8b687f1dad1968600f8e8cf81e6602cf" prot="public">
          <name>LV_BTNMATRIX_CTRL_NO_REPEAT</name>
          <initializer>= 0x0010</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Do not repeat press this button. </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="lv__btnmatrix_8h_1afa9be5679ab03d785820f2474c5ccc6eafc839fbe893a96e6f925f1a227bca6a3" prot="public">
          <name>LV_BTNMATRIX_CTRL_DISABLED</name>
          <initializer>= 0x0020</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Disable this button. </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="lv__btnmatrix_8h_1afa9be5679ab03d785820f2474c5ccc6ea24a06bd7d16b5cabbaf93eff3fcced6b" prot="public">
          <name>LV_BTNMATRIX_CTRL_CHECKABLE</name>
          <initializer>= 0x0040</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Button <emphasis>can</emphasis> be toggled. </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="lv__btnmatrix_8h_1afa9be5679ab03d785820f2474c5ccc6ea55f9cf8f94a8e5f47e75a91bcf95958b" prot="public">
          <name>LV_BTNMATRIX_CTRL_CHECK_STATE</name>
          <initializer>= 0x0080</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Button is currently toggled (e.g. checked). </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="lv__btnmatrix_8h_1afa9be5679ab03d785820f2474c5ccc6ea27d564c00ab0d2390d7d675762014147" prot="public">
          <name>LV_BTNMATRIX_CTRL_CLICK_TRIG</name>
          <initializer>= 0x0100</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>1: Send LV_EVENT_SELECTED on CLICK, 0: Send LV_EVENT_SELECTED on PRESS </para>          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Type to store button control bits (disabled, hidden etc.) The first 3 bits are used to store the width </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kisvegabor/projects/littlevgl/eclipse-workspace/lv_sim_eclipse_sdl/lvgl/scripts/release_tmp/lvgl/src/lv_widgets/lv_btnmatrix.h" line="38" column="1" bodyfile="/home/kisvegabor/projects/littlevgl/eclipse-workspace/lv_sim_eclipse_sdl/lvgl/scripts/release_tmp/lvgl/src/lv_widgets/lv_btnmatrix.h" bodystart="38" bodyend="45"/>
      </memberdef>
      <memberdef kind="enum" id="lv__btnmatrix_8h_1ae6dceca96ec2c7a1b4aa211264a87ef6" prot="public" static="no">
        <name>@58</name>
        <enumvalue id="lv__btnmatrix_8h_1ae6dceca96ec2c7a1b4aa211264a87ef6a571795cbf9ee0eb77ad9486a580cf8ba" prot="public">
          <name>LV_BTNMATRIX_PART_BG</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="lv__btnmatrix_8h_1ae6dceca96ec2c7a1b4aa211264a87ef6a9c2766f92350de0af42c91f511b35643" prot="public">
          <name>LV_BTNMATRIX_PART_BTN</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kisvegabor/projects/littlevgl/eclipse-workspace/lv_sim_eclipse_sdl/lvgl/scripts/release_tmp/lvgl/src/lv_widgets/lv_btnmatrix.h" line="65" column="1" bodyfile="/home/kisvegabor/projects/littlevgl/eclipse-workspace/lv_sim_eclipse_sdl/lvgl/scripts/release_tmp/lvgl/src/lv_widgets/lv_btnmatrix.h" bodystart="65" bodyend="68"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="lv__btnmatrix_8h_1a56587d4597f6b0999d3f3dde3daceaf8" prot="public" static="no">
        <type>uint16_t</type>
        <definition>typedef uint16_t lv_btnmatrix_ctrl_t</definition>
        <argsstring></argsstring>
        <name>lv_btnmatrix_ctrl_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kisvegabor/projects/littlevgl/eclipse-workspace/lv_sim_eclipse_sdl/lvgl/scripts/release_tmp/lvgl/src/lv_widgets/lv_btnmatrix.h" line="46" column="1" bodyfile="/home/kisvegabor/projects/littlevgl/eclipse-workspace/lv_sim_eclipse_sdl/lvgl/scripts/release_tmp/lvgl/src/lv_widgets/lv_btnmatrix.h" bodystart="46" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="lv__btnmatrix_8h_1ae1129ed0ca82b843b4a06ffcfc475040" prot="public" static="no">
        <type>uint8_t</type>
        <definition>typedef uint8_t lv_btnmatrix_part_t</definition>
        <argsstring></argsstring>
        <name>lv_btnmatrix_part_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kisvegabor/projects/littlevgl/eclipse-workspace/lv_sim_eclipse_sdl/lvgl/scripts/release_tmp/lvgl/src/lv_widgets/lv_btnmatrix.h" line="69" column="1" bodyfile="/home/kisvegabor/projects/littlevgl/eclipse-workspace/lv_sim_eclipse_sdl/lvgl/scripts/release_tmp/lvgl/src/lv_widgets/lv_btnmatrix.h" bodystart="69" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="lv__btnmatrix_8h_1a89fb34a91eceef776ede87a88f41a186" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>LV_EXPORT_CONST_INT</definition>
        <argsstring>(LV_BTNMATRIX_BTN_NONE)</argsstring>
        <name>LV_EXPORT_CONST_INT</name>
        <param>
          <type>LV_BTNMATRIX_BTN_NONE</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kisvegabor/projects/littlevgl/eclipse-workspace/lv_sim_eclipse_sdl/lvgl/scripts/release_tmp/lvgl/src/lv_widgets/lv_btnmatrix.h" line="30" column="1"/>
      </memberdef>
      <memberdef kind="function" id="lv__btnmatrix_8h_1a15690496f81e7555a22e72f9b400a803" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref> *</type>
        <definition>lv_obj_t* lv_btnmatrix_create</definition>
        <argsstring>(lv_obj_t *par, const lv_obj_t *copy)</argsstring>
        <name>lv_btnmatrix_create</name>
        <param>
          <type><ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref> *</type>
          <declname>par</declname>
        </param>
        <param>
          <type>const <ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref> *</type>
          <declname>copy</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Create a button matrix objects <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>par</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to an object, it will be the parent of the new button matrix </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>copy</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to a button matrix object, if not NULL then the new object will be copied from it </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>pointer to the created button matrix </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kisvegabor/projects/littlevgl/eclipse-workspace/lv_sim_eclipse_sdl/lvgl/scripts/release_tmp/lvgl/src/lv_widgets/lv_btnmatrix.h" line="82" column="1"/>
      </memberdef>
      <memberdef kind="function" id="lv__btnmatrix_8h_1a3e8e5259f9da127740f3cb9d160ac8fd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void lv_btnmatrix_set_map</definition>
        <argsstring>(lv_obj_t *btnm, const char *map[])</argsstring>
        <name>lv_btnmatrix_set_map</name>
        <param>
          <type><ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref> *</type>
          <declname>btnm</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>map</declname>
          <array>[]</array>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set a new map. Buttons will be created/deleted according to the map. The button matrix keeps a reference to the map and so the string array must not be deallocated during the life of the matrix. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>btnm</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to a button matrix object </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>map</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer a string array. The last string has to be: &quot;&quot;. Use &quot;\n&quot; to make a line break. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kisvegabor/projects/littlevgl/eclipse-workspace/lv_sim_eclipse_sdl/lvgl/scripts/release_tmp/lvgl/src/lv_widgets/lv_btnmatrix.h" line="95" column="1"/>
      </memberdef>
      <memberdef kind="function" id="lv__btnmatrix_8h_1abf92123e551addb481f25ec90acb6970" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void lv_btnmatrix_set_ctrl_map</definition>
        <argsstring>(lv_obj_t *btnm, const lv_btnmatrix_ctrl_t ctrl_map[])</argsstring>
        <name>lv_btnmatrix_set_ctrl_map</name>
        <param>
          <type><ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref> *</type>
          <declname>btnm</declname>
        </param>
        <param>
          <type>const lv_btnmatrix_ctrl_t</type>
          <declname>ctrl_map</declname>
          <array>[]</array>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set the button control map (hidden, disabled etc.) for a button matrix. The control map array will be copied and so may be deallocated after this function returns. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>btnm</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to a button matrix object </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ctrl_map</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to an array of <computeroutput>lv_btn_ctrl_t</computeroutput> control bytes. The length of the array and position of the elements must match the number and order of the individual buttons (i.e. excludes newline entries). An element of the map should look like e.g.: <computeroutput>ctrl_map[0] = width | LV_BTNMATRIX_CTRL_NO_REPEAT | LV_BTNMATRIX_CTRL_TGL_ENABLE</computeroutput> </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kisvegabor/projects/littlevgl/eclipse-workspace/lv_sim_eclipse_sdl/lvgl/scripts/release_tmp/lvgl/src/lv_widgets/lv_btnmatrix.h" line="109" column="1"/>
      </memberdef>
      <memberdef kind="function" id="lv__btnmatrix_8h_1aacd62359e6c0ead57336d4868012ab0f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void lv_btnmatrix_set_focused_btn</definition>
        <argsstring>(lv_obj_t *btnm, uint16_t id)</argsstring>
        <name>lv_btnmatrix_set_focused_btn</name>
        <param>
          <type><ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref> *</type>
          <declname>btnm</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>id</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set the focused button i.e. visually highlight it. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>btnm</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to button matrix object </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>id</parametername>
</parameternamelist>
<parameterdescription>
<para>index of the button to focus(<computeroutput>LV_BTNMATRIX_BTN_NONE</computeroutput> to remove focus) </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kisvegabor/projects/littlevgl/eclipse-workspace/lv_sim_eclipse_sdl/lvgl/scripts/release_tmp/lvgl/src/lv_widgets/lv_btnmatrix.h" line="116" column="1"/>
      </memberdef>
      <memberdef kind="function" id="lv__btnmatrix_8h_1a0ce093c234481581897ee1c0be2ccfc0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void lv_btnmatrix_set_recolor</definition>
        <argsstring>(const lv_obj_t *btnm, bool en)</argsstring>
        <name>lv_btnmatrix_set_recolor</name>
        <param>
          <type>const <ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref> *</type>
          <declname>btnm</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>en</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Enable recoloring of button&apos;s texts <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>btnm</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to button matrix object </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>en</parametername>
</parameternamelist>
<parameterdescription>
<para>true: enable recoloring; false: disable </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kisvegabor/projects/littlevgl/eclipse-workspace/lv_sim_eclipse_sdl/lvgl/scripts/release_tmp/lvgl/src/lv_widgets/lv_btnmatrix.h" line="123" column="1"/>
      </memberdef>
      <memberdef kind="function" id="lv__btnmatrix_8h_1a48c13f938a42f744de2e32d13e0fd078" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void lv_btnmatrix_set_btn_ctrl</definition>
        <argsstring>(const lv_obj_t *btnm, uint16_t btn_id, lv_btnmatrix_ctrl_t ctrl)</argsstring>
        <name>lv_btnmatrix_set_btn_ctrl</name>
        <param>
          <type>const <ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref> *</type>
          <declname>btnm</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>btn_id</declname>
        </param>
        <param>
          <type>lv_btnmatrix_ctrl_t</type>
          <declname>ctrl</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set the attributes of a button of the button matrix <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>btnm</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to button matrix object </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>btn_id</parametername>
</parameternamelist>
<parameterdescription>
<para>0 based index of the button to modify. (Not counting new lines) </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kisvegabor/projects/littlevgl/eclipse-workspace/lv_sim_eclipse_sdl/lvgl/scripts/release_tmp/lvgl/src/lv_widgets/lv_btnmatrix.h" line="130" column="1"/>
      </memberdef>
      <memberdef kind="function" id="lv__btnmatrix_8h_1a938c0ed39a5d8555a7313a439caa1460" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void lv_btnmatrix_clear_btn_ctrl</definition>
        <argsstring>(const lv_obj_t *btnm, uint16_t btn_id, lv_btnmatrix_ctrl_t ctrl)</argsstring>
        <name>lv_btnmatrix_clear_btn_ctrl</name>
        <param>
          <type>const <ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref> *</type>
          <declname>btnm</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>btn_id</declname>
        </param>
        <param>
          <type>lv_btnmatrix_ctrl_t</type>
          <declname>ctrl</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Clear the attributes of a button of the button matrix <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>btnm</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to button matrix object </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>btn_id</parametername>
</parameternamelist>
<parameterdescription>
<para>0 based index of the button to modify. (Not counting new lines) </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kisvegabor/projects/littlevgl/eclipse-workspace/lv_sim_eclipse_sdl/lvgl/scripts/release_tmp/lvgl/src/lv_widgets/lv_btnmatrix.h" line="137" column="1"/>
      </memberdef>
      <memberdef kind="function" id="lv__btnmatrix_8h_1a125a6b412021957c1484f848c3e8ae95" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void lv_btnmatrix_set_btn_ctrl_all</definition>
        <argsstring>(lv_obj_t *btnm, lv_btnmatrix_ctrl_t ctrl)</argsstring>
        <name>lv_btnmatrix_set_btn_ctrl_all</name>
        <param>
          <type><ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref> *</type>
          <declname>btnm</declname>
        </param>
        <param>
          <type>lv_btnmatrix_ctrl_t</type>
          <declname>ctrl</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set the attributes of all buttons of a button matrix <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>btnm</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to a button matrix object </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ctrl</parametername>
</parameternamelist>
<parameterdescription>
<para>attribute(s) to set from <computeroutput>lv_btnmatrix_ctrl_t</computeroutput>. Values can be ORed. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kisvegabor/projects/littlevgl/eclipse-workspace/lv_sim_eclipse_sdl/lvgl/scripts/release_tmp/lvgl/src/lv_widgets/lv_btnmatrix.h" line="144" column="1"/>
      </memberdef>
      <memberdef kind="function" id="lv__btnmatrix_8h_1ad17276f557deb602a05850352ed4b0cf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void lv_btnmatrix_clear_btn_ctrl_all</definition>
        <argsstring>(lv_obj_t *btnm, lv_btnmatrix_ctrl_t ctrl)</argsstring>
        <name>lv_btnmatrix_clear_btn_ctrl_all</name>
        <param>
          <type><ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref> *</type>
          <declname>btnm</declname>
        </param>
        <param>
          <type>lv_btnmatrix_ctrl_t</type>
          <declname>ctrl</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Clear the attributes of all buttons of a button matrix <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>btnm</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to a button matrix object </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ctrl</parametername>
</parameternamelist>
<parameterdescription>
<para>attribute(s) to set from <computeroutput>lv_btnmatrix_ctrl_t</computeroutput>. Values can be ORed. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>en</parametername>
</parameternamelist>
<parameterdescription>
<para>true: set the attributes; false: clear the attributes </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kisvegabor/projects/littlevgl/eclipse-workspace/lv_sim_eclipse_sdl/lvgl/scripts/release_tmp/lvgl/src/lv_widgets/lv_btnmatrix.h" line="152" column="1"/>
      </memberdef>
      <memberdef kind="function" id="lv__btnmatrix_8h_1a2554984db54bd9837232cad92ecc95ba" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void lv_btnmatrix_set_btn_width</definition>
        <argsstring>(lv_obj_t *btnm, uint16_t btn_id, uint8_t width)</argsstring>
        <name>lv_btnmatrix_set_btn_width</name>
        <param>
          <type><ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref> *</type>
          <declname>btnm</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>btn_id</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>width</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set a single buttons relative width. This method will cause the matrix be regenerated and is a relatively expensive operation. It is recommended that initial width be specified using <computeroutput>lv_btnmatrix_set_ctrl_map</computeroutput> and this method only be used for dynamic changes. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>btnm</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to button matrix object </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>btn_id</parametername>
</parameternamelist>
<parameterdescription>
<para>0 based index of the button to modify. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>width</parametername>
</parameternamelist>
<parameterdescription>
<para>Relative width compared to the buttons in the same row. [1..7] </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kisvegabor/projects/littlevgl/eclipse-workspace/lv_sim_eclipse_sdl/lvgl/scripts/release_tmp/lvgl/src/lv_widgets/lv_btnmatrix.h" line="163" column="1"/>
      </memberdef>
      <memberdef kind="function" id="lv__btnmatrix_8h_1a88c093f6dac7b25ab0c52c5355f92803" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void lv_btnmatrix_set_one_check</definition>
        <argsstring>(lv_obj_t *btnm, bool one_chk)</argsstring>
        <name>lv_btnmatrix_set_one_check</name>
        <param>
          <type><ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref> *</type>
          <declname>btnm</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>one_chk</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Make the button matrix like a selector widget (only one button may be toggled at a time). <computeroutput>Checkable</computeroutput> must be enabled on the buttons you want to be selected with <computeroutput>lv_btnmatrix_set_ctrl</computeroutput> or <computeroutput>lv_btnmatrix_set_btn_ctrl_all</computeroutput>. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>btnm</parametername>
</parameternamelist>
<parameterdescription>
<para>Button matrix object </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>one_chk</parametername>
</parameternamelist>
<parameterdescription>
<para>Whether &quot;one check&quot; mode is enabled </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kisvegabor/projects/littlevgl/eclipse-workspace/lv_sim_eclipse_sdl/lvgl/scripts/release_tmp/lvgl/src/lv_widgets/lv_btnmatrix.h" line="172" column="1"/>
      </memberdef>
      <memberdef kind="function" id="lv__btnmatrix_8h_1a011f2b09827bf8c23209bb988657ebd3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void lv_btnmatrix_set_align</definition>
        <argsstring>(lv_obj_t *btnm, lv_label_align_t align)</argsstring>
        <name>lv_btnmatrix_set_align</name>
        <param>
          <type><ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref> *</type>
          <declname>btnm</declname>
        </param>
        <param>
          <type>lv_label_align_t</type>
          <declname>align</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set the align of the map text (left, right or center) <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>btnm</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to a btnmatrix object </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>align</parametername>
</parameternamelist>
<parameterdescription>
<para>LV_LABEL_ALIGN_LEFT, LV_LABEL_ALIGN_RIGHT or LV_LABEL_ALIGN_CENTER </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kisvegabor/projects/littlevgl/eclipse-workspace/lv_sim_eclipse_sdl/lvgl/scripts/release_tmp/lvgl/src/lv_widgets/lv_btnmatrix.h" line="179" column="1"/>
      </memberdef>
      <memberdef kind="function" id="lv__btnmatrix_8h_1a034e544a86d2a5477d3d96fed16469cb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const char **</type>
        <definition>const char** lv_btnmatrix_get_map_array</definition>
        <argsstring>(const lv_obj_t *btnm)</argsstring>
        <name>lv_btnmatrix_get_map_array</name>
        <param>
          <type>const <ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref> *</type>
          <declname>btnm</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the current map of a button matrix <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>btnm</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to a button matrix object </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the current map </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kisvegabor/projects/littlevgl/eclipse-workspace/lv_sim_eclipse_sdl/lvgl/scripts/release_tmp/lvgl/src/lv_widgets/lv_btnmatrix.h" line="190" column="1"/>
      </memberdef>
      <memberdef kind="function" id="lv__btnmatrix_8h_1a9093ba5975c1c972425896ed760b5edf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool lv_btnmatrix_get_recolor</definition>
        <argsstring>(const lv_obj_t *btnm)</argsstring>
        <name>lv_btnmatrix_get_recolor</name>
        <param>
          <type>const <ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref> *</type>
          <declname>btnm</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Check whether the button&apos;s text can use recolor or not <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>btnm</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to button matrix object </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true: text recolor enable; false: disabled </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kisvegabor/projects/littlevgl/eclipse-workspace/lv_sim_eclipse_sdl/lvgl/scripts/release_tmp/lvgl/src/lv_widgets/lv_btnmatrix.h" line="197" column="1"/>
      </memberdef>
      <memberdef kind="function" id="lv__btnmatrix_8h_1a506dcabca494b032aa38c8c96eb64833" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint16_t</type>
        <definition>uint16_t lv_btnmatrix_get_active_btn</definition>
        <argsstring>(const lv_obj_t *btnm)</argsstring>
        <name>lv_btnmatrix_get_active_btn</name>
        <param>
          <type>const <ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref> *</type>
          <declname>btnm</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the index of the lastly &quot;activated&quot; button by the user (pressed, released etc) Useful in the the <computeroutput>event_cb</computeroutput> to get the text of the button, check if hidden etc. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>btnm</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to button matrix object </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>index of the last released button (LV_BTNMATRIX_BTN_NONE: if unset) </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kisvegabor/projects/littlevgl/eclipse-workspace/lv_sim_eclipse_sdl/lvgl/scripts/release_tmp/lvgl/src/lv_widgets/lv_btnmatrix.h" line="205" column="1"/>
      </memberdef>
      <memberdef kind="function" id="lv__btnmatrix_8h_1ae823e1d5126c204f7d99d93498ed3ae4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const char *</type>
        <definition>const char* lv_btnmatrix_get_active_btn_text</definition>
        <argsstring>(const lv_obj_t *btnm)</argsstring>
        <name>lv_btnmatrix_get_active_btn_text</name>
        <param>
          <type>const <ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref> *</type>
          <declname>btnm</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the text of the lastly &quot;activated&quot; button by the user (pressed, released etc) Useful in the the <computeroutput>event_cb</computeroutput> <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>btnm</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to button matrix object </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>text of the last released button (NULL: if unset) </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kisvegabor/projects/littlevgl/eclipse-workspace/lv_sim_eclipse_sdl/lvgl/scripts/release_tmp/lvgl/src/lv_widgets/lv_btnmatrix.h" line="213" column="1"/>
      </memberdef>
      <memberdef kind="function" id="lv__btnmatrix_8h_1a9763fc0e092ccc0f64c79ed4bb30d3ff" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint16_t</type>
        <definition>uint16_t lv_btnmatrix_get_focused_btn</definition>
        <argsstring>(const lv_obj_t *btnm)</argsstring>
        <name>lv_btnmatrix_get_focused_btn</name>
        <param>
          <type>const <ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref> *</type>
          <declname>btnm</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the focused button&apos;s index. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>btnm</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to button matrix object </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>index of the focused button (LV_BTNMATRIX_BTN_NONE: if unset) </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kisvegabor/projects/littlevgl/eclipse-workspace/lv_sim_eclipse_sdl/lvgl/scripts/release_tmp/lvgl/src/lv_widgets/lv_btnmatrix.h" line="220" column="1"/>
      </memberdef>
      <memberdef kind="function" id="lv__btnmatrix_8h_1aef24a6d507a5137e84c8db46a18eec33" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const char *</type>
        <definition>const char* lv_btnmatrix_get_btn_text</definition>
        <argsstring>(const lv_obj_t *btnm, uint16_t btn_id)</argsstring>
        <name>lv_btnmatrix_get_btn_text</name>
        <param>
          <type>const <ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref> *</type>
          <declname>btnm</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>btn_id</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the button&apos;s text <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>btnm</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to button matrix object </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>btn_id</parametername>
</parameternamelist>
<parameterdescription>
<para>the index a button not counting new line characters. (The return value of lv_btnmatrix_get_pressed/released) </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>text of btn_index` button </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kisvegabor/projects/littlevgl/eclipse-workspace/lv_sim_eclipse_sdl/lvgl/scripts/release_tmp/lvgl/src/lv_widgets/lv_btnmatrix.h" line="229" column="1"/>
      </memberdef>
      <memberdef kind="function" id="lv__btnmatrix_8h_1a064538cca71fec41366fb9bad94cf9f1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool lv_btnmatrix_get_btn_ctrl</definition>
        <argsstring>(lv_obj_t *btnm, uint16_t btn_id, lv_btnmatrix_ctrl_t ctrl)</argsstring>
        <name>lv_btnmatrix_get_btn_ctrl</name>
        <param>
          <type><ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref> *</type>
          <declname>btnm</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>btn_id</declname>
        </param>
        <param>
          <type>lv_btnmatrix_ctrl_t</type>
          <declname>ctrl</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the whether a control value is enabled or disabled for button of a button matrix <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>btnm</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to a button matrix object </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>btn_id</parametername>
</parameternamelist>
<parameterdescription>
<para>the index a button not counting new line characters. (E.g. the return value of lv_btnmatrix_get_pressed/released) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ctrl</parametername>
</parameternamelist>
<parameterdescription>
<para>control values to check (ORed value can be used) </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true: long press repeat is disabled; false: long press repeat enabled </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kisvegabor/projects/littlevgl/eclipse-workspace/lv_sim_eclipse_sdl/lvgl/scripts/release_tmp/lvgl/src/lv_widgets/lv_btnmatrix.h" line="239" column="1"/>
      </memberdef>
      <memberdef kind="function" id="lv__btnmatrix_8h_1a7dbae85530f1eef5b1168adf9f0edcac" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool lv_btnmatrix_get_one_check</definition>
        <argsstring>(const lv_obj_t *btnm)</argsstring>
        <name>lv_btnmatrix_get_one_check</name>
        <param>
          <type>const <ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref> *</type>
          <declname>btnm</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Find whether &quot;one toggle&quot; mode is enabled. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>btnm</parametername>
</parameternamelist>
<parameterdescription>
<para>Button matrix object </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>whether &quot;one toggle&quot; mode is enabled </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kisvegabor/projects/littlevgl/eclipse-workspace/lv_sim_eclipse_sdl/lvgl/scripts/release_tmp/lvgl/src/lv_widgets/lv_btnmatrix.h" line="246" column="1"/>
      </memberdef>
      <memberdef kind="function" id="lv__btnmatrix_8h_1ac93cb155ff04535b0aa31aaf185ad93c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>lv_label_align_t</type>
        <definition>lv_label_align_t lv_btnmatrix_get_align</definition>
        <argsstring>(const lv_obj_t *btnm)</argsstring>
        <name>lv_btnmatrix_get_align</name>
        <param>
          <type>const <ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref> *</type>
          <declname>btnm</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the align attribute <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>btnm</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to a btnmatrix object </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>LV_LABEL_ALIGN_LEFT, LV_LABEL_ALIGN_RIGHT or LV_LABEL_ALIGN_CENTER </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kisvegabor/projects/littlevgl/eclipse-workspace/lv_sim_eclipse_sdl/lvgl/scripts/release_tmp/lvgl/src/lv_widgets/lv_btnmatrix.h" line="253" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"></codeline>
<codeline lineno="6"><highlight class="preprocessor">#ifndef<sp/>LV_BTNMATRIX_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LV_BTNMATRIX_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">/*********************</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>INCLUDES</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*********************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../lv_conf_internal.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>LV_USE_BTNMATRIX<sp/>!=<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../lv_core/lv_obj.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="lv__label_8h" kindref="compound">lv_label.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="lv__btn_8h" kindref="compound">lv_btn.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="comment">/*********************</highlight></codeline>
<codeline lineno="25"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>DEFINES</highlight></codeline>
<codeline lineno="26"><highlight class="comment"><sp/>*********************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LV_BTNMATRIX_WIDTH_MASK<sp/>0x0007</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LV_BTNMATRIX_BTN_NONE<sp/>0xFFFF</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal">LV_EXPORT_CONST_INT(LV_BTNMATRIX_BTN_NONE);</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="comment">/**********************</highlight></codeline>
<codeline lineno="33"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>TYPEDEFS</highlight></codeline>
<codeline lineno="34"><highlight class="comment"><sp/>**********************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/>LV_BTNMATRIX_CTRL_HIDDEN<sp/><sp/><sp/><sp/><sp/>=<sp/>0x0008,<sp/></highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/>LV_BTNMATRIX_CTRL_NO_REPEAT<sp/><sp/>=<sp/>0x0010,<sp/></highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/>LV_BTNMATRIX_CTRL_DISABLED<sp/><sp/><sp/>=<sp/>0x0020,<sp/></highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/>LV_BTNMATRIX_CTRL_CHECKABLE<sp/><sp/>=<sp/>0x0040,<sp/></highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/>LV_BTNMATRIX_CTRL_CHECK_STATE<sp/><sp/>=<sp/>0x0080,<sp/></highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/>LV_BTNMATRIX_CTRL_CLICK_TRIG<sp/>=<sp/>0x0100,<sp/></highlight></codeline>
<codeline lineno="45"><highlight class="normal">};</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>uint16_t<sp/>lv_btnmatrix_ctrl_t;</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="comment">/*Data<sp/>of<sp/>button<sp/>matrix*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49" refid="structlv__btnmatrix__ext__t" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*No<sp/>inherited<sp/>ext.*/</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">/*Ext.<sp/>of<sp/>ancestor*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*New<sp/>data<sp/>for<sp/>this<sp/>type<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**<sp/>map_p;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*Pointer<sp/>to<sp/>the<sp/>current<sp/>map*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structlv__area__t" kindref="compound">lv_area_t</ref><sp/>*<sp/>button_areas;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*Array<sp/>of<sp/>areas<sp/>of<sp/>buttons*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/>lv_btnmatrix_ctrl_t<sp/>*<sp/>ctrl_bits;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*Array<sp/>of<sp/>control<sp/>bytes*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structlv__style__list__t" kindref="compound">lv_style_list_t</ref><sp/>style_btn;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*Styles<sp/>of<sp/>buttons<sp/>in<sp/>each<sp/>state*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/>btn_cnt;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*Number<sp/>of<sp/>button<sp/>in<sp/>&apos;map_p&apos;(Handled<sp/>by<sp/>the<sp/>library)*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/>btn_id_pr;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*Index<sp/>of<sp/>the<sp/>currently<sp/>pressed<sp/>button<sp/>or<sp/>LV_BTNMATRIX_BTN_NONE*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/>btn_id_focused;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*Index<sp/>of<sp/>the<sp/>currently<sp/>focused<sp/>button<sp/>or<sp/>LV_BTNMATRIX_BTN_NONE*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/>btn_id_act;<sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*Index<sp/>of<sp/>the<sp/>active<sp/>button<sp/>(being<sp/>pressed/released<sp/>etc)<sp/>or<sp/>LV_BTNMATRIX_BTN_NONE<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>recolor<sp/>:<sp/>1;<sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*Enable<sp/>button<sp/>recoloring*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>one_check<sp/>:<sp/>1;<sp/><sp/></highlight><highlight class="comment">/*Single<sp/>button<sp/>toggled<sp/>at<sp/>once*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>align<sp/>:<sp/>2;<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*Align<sp/>type<sp/>from<sp/>&apos;lv_label_align_t&apos;*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal">}<sp/><ref refid="structlv__btnmatrix__ext__t" kindref="compound">lv_btnmatrix_ext_t</ref>;</highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/>LV_BTNMATRIX_PART_BG,</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/>LV_BTNMATRIX_PART_BTN,</highlight></codeline>
<codeline lineno="68"><highlight class="normal">};</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>uint8_t<sp/>lv_btnmatrix_part_t;</highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight><highlight class="comment">/**********************</highlight></codeline>
<codeline lineno="72"><highlight class="comment"><sp/>*<sp/>GLOBAL<sp/>PROTOTYPES</highlight></codeline>
<codeline lineno="73"><highlight class="comment"><sp/>**********************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"><ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref><sp/>*<sp/>lv_btnmatrix_create(<ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref><sp/>*<sp/>par,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref><sp/>*<sp/>copy);</highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight><highlight class="comment">/*=====================</highlight></codeline>
<codeline lineno="85"><highlight class="comment"><sp/>*<sp/>Setter<sp/>functions</highlight></codeline>
<codeline lineno="86"><highlight class="comment"><sp/>*====================*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>lv_btnmatrix_set_map(<ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref><sp/>*<sp/>btnm,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/>map[]);</highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>lv_btnmatrix_set_ctrl_map(<ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref><sp/>*<sp/>btnm,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>lv_btnmatrix_ctrl_t<sp/>ctrl_map[]);</highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>lv_btnmatrix_set_focused_btn(<ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref><sp/>*<sp/>btnm,<sp/>uint16_t<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>lv_btnmatrix_set_recolor(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref><sp/>*<sp/>btnm,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>en);</highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>lv_btnmatrix_set_btn_ctrl(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref><sp/>*<sp/>btnm,<sp/>uint16_t<sp/>btn_id,<sp/>lv_btnmatrix_ctrl_t<sp/>ctrl);</highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>lv_btnmatrix_clear_btn_ctrl(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref><sp/>*<sp/>btnm,<sp/>uint16_t<sp/>btn_id,<sp/>lv_btnmatrix_ctrl_t<sp/>ctrl);</highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>lv_btnmatrix_set_btn_ctrl_all(<ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref><sp/>*<sp/>btnm,<sp/>lv_btnmatrix_ctrl_t<sp/>ctrl);</highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>lv_btnmatrix_clear_btn_ctrl_all(<ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref><sp/>*<sp/>btnm,<sp/>lv_btnmatrix_ctrl_t<sp/>ctrl);</highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>lv_btnmatrix_set_btn_width(<ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref><sp/>*<sp/>btnm,<sp/>uint16_t<sp/>btn_id,<sp/>uint8_t<sp/>width);</highlight></codeline>
<codeline lineno="164"><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>lv_btnmatrix_set_one_check(<ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref><sp/>*<sp/>btnm,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>one_chk);</highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>lv_btnmatrix_set_align(<ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref><sp/>*<sp/>btnm,<sp/>lv_label_align_t<sp/>align);</highlight></codeline>
<codeline lineno="180"><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal"></highlight><highlight class="comment">/*=====================</highlight></codeline>
<codeline lineno="182"><highlight class="comment"><sp/>*<sp/>Getter<sp/>functions</highlight></codeline>
<codeline lineno="183"><highlight class="comment"><sp/>*====================*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**<sp/>lv_btnmatrix_get_map_array(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref><sp/>*<sp/>btnm);</highlight></codeline>
<codeline lineno="191"><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>lv_btnmatrix_get_recolor(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref><sp/>*<sp/>btnm);</highlight></codeline>
<codeline lineno="198"><highlight class="normal"></highlight></codeline>
<codeline lineno="205"><highlight class="normal">uint16_t<sp/>lv_btnmatrix_get_active_btn(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref><sp/>*<sp/>btnm);</highlight></codeline>
<codeline lineno="206"><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/>lv_btnmatrix_get_active_btn_text(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref><sp/>*<sp/>btnm);</highlight></codeline>
<codeline lineno="214"><highlight class="normal"></highlight></codeline>
<codeline lineno="220"><highlight class="normal">uint16_t<sp/>lv_btnmatrix_get_focused_btn(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref><sp/>*<sp/>btnm);</highlight></codeline>
<codeline lineno="221"><highlight class="normal"></highlight></codeline>
<codeline lineno="229"><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/>lv_btnmatrix_get_btn_text(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref><sp/>*<sp/>btnm,<sp/>uint16_t<sp/>btn_id);</highlight></codeline>
<codeline lineno="230"><highlight class="normal"></highlight></codeline>
<codeline lineno="239"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>lv_btnmatrix_get_btn_ctrl(<ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref><sp/>*<sp/>btnm,<sp/>uint16_t<sp/>btn_id,<sp/>lv_btnmatrix_ctrl_t<sp/>ctrl);</highlight></codeline>
<codeline lineno="240"><highlight class="normal"></highlight></codeline>
<codeline lineno="246"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>lv_btnmatrix_get_one_check(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref><sp/>*<sp/>btnm);</highlight></codeline>
<codeline lineno="247"><highlight class="normal"></highlight></codeline>
<codeline lineno="253"><highlight class="normal">lv_label_align_t<sp/>lv_btnmatrix_get_align(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref><sp/>*<sp/>btnm);</highlight></codeline>
<codeline lineno="254"><highlight class="normal"></highlight></codeline>
<codeline lineno="255"><highlight class="normal"></highlight><highlight class="comment">/**********************</highlight></codeline>
<codeline lineno="256"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>MACROS</highlight></codeline>
<codeline lineno="257"><highlight class="comment"><sp/>**********************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="258"><highlight class="normal"></highlight></codeline>
<codeline lineno="259"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*LV_USE_BTNMATRIX*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="260"><highlight class="normal"></highlight></codeline>
<codeline lineno="261"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="262"><highlight class="normal">}<sp/></highlight><highlight class="comment">/*<sp/>extern<sp/>&quot;C&quot;<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="263"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="264"><highlight class="normal"></highlight></codeline>
<codeline lineno="265"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*LV_BTNMATRIX_H*/</highlight><highlight class="preprocessor"></highlight></codeline>
    </programlisting>
    <location file="/home/kisvegabor/projects/littlevgl/eclipse-workspace/lv_sim_eclipse_sdl/lvgl/scripts/release_tmp/lvgl/src/lv_widgets/lv_btnmatrix.h"/>
  </compounddef>
</doxygen>
