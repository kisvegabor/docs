<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="lv__keyboard_8h" kind="file" language="C++">
    <compoundname>lv_keyboard.h</compoundname>
    <innerclass refid="structlv__keyboard__ext__t" prot="public">lv_keyboard_ext_t</innerclass>
      <sectiondef kind="enum">
      <memberdef kind="enum" id="lv__keyboard_8h_1a70ad55be767ca0a42c9150d24618e4ca" prot="public" static="no">
        <name>@79</name>
        <enumvalue id="lv__keyboard_8h_1a70ad55be767ca0a42c9150d24618e4caa25b797b1530e3dd9c44053d218852d8f" prot="public">
          <name>LV_KEYBOARD_MODE_TEXT_LOWER</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="lv__keyboard_8h_1a70ad55be767ca0a42c9150d24618e4caaff5f6d6db1ca33d9fd239b02c26180b4" prot="public">
          <name>LV_KEYBOARD_MODE_TEXT_UPPER</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="lv__keyboard_8h_1a70ad55be767ca0a42c9150d24618e4caa05a9c5ebcafac4f2906875da97478cd6" prot="public">
          <name>LV_KEYBOARD_MODE_SPECIAL</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="lv__keyboard_8h_1a70ad55be767ca0a42c9150d24618e4caa35517f7555900340c8af996412d68fa6" prot="public">
          <name>LV_KEYBOARD_MODE_NUM</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Current keyboard mode. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kisvegabor/projects/littlevgl/eclipse-workspace/lv_sim_eclipse_sdl/lvgl/scripts/release_tmp/lvgl/src/lv_widgets/lv_keyboard.h" line="42" column="1" bodyfile="/home/kisvegabor/projects/littlevgl/eclipse-workspace/lv_sim_eclipse_sdl/lvgl/scripts/release_tmp/lvgl/src/lv_widgets/lv_keyboard.h" bodystart="42" bodyend="47"/>
      </memberdef>
      <memberdef kind="enum" id="lv__keyboard_8h_1a4b4213b1f9d54da7c7e36bde32fc7c80" prot="public" static="no">
        <name>@80</name>
        <enumvalue id="lv__keyboard_8h_1a4b4213b1f9d54da7c7e36bde32fc7c80ae6e0b5c9ae269225afae6c1e4dc4e222" prot="public">
          <name>LV_KEYBOARD_PART_BG</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="lv__keyboard_8h_1a4b4213b1f9d54da7c7e36bde32fc7c80a31f099ef8174945099c4b53ce7fd2824" prot="public">
          <name>LV_KEYBOARD_PART_BTN</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kisvegabor/projects/littlevgl/eclipse-workspace/lv_sim_eclipse_sdl/lvgl/scripts/release_tmp/lvgl/src/lv_widgets/lv_keyboard.h" line="59" column="1" bodyfile="/home/kisvegabor/projects/littlevgl/eclipse-workspace/lv_sim_eclipse_sdl/lvgl/scripts/release_tmp/lvgl/src/lv_widgets/lv_keyboard.h" bodystart="59" bodyend="62"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="lv__keyboard_8h_1abbb28adb94f42dd6db1d969b6c776631" prot="public" static="no">
        <type>uint8_t</type>
        <definition>typedef uint8_t lv_keyboard_mode_t</definition>
        <argsstring></argsstring>
        <name>lv_keyboard_mode_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kisvegabor/projects/littlevgl/eclipse-workspace/lv_sim_eclipse_sdl/lvgl/scripts/release_tmp/lvgl/src/lv_widgets/lv_keyboard.h" line="48" column="1" bodyfile="/home/kisvegabor/projects/littlevgl/eclipse-workspace/lv_sim_eclipse_sdl/lvgl/scripts/release_tmp/lvgl/src/lv_widgets/lv_keyboard.h" bodystart="48" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="lv__keyboard_8h_1a73f502bf75f8dcdaa5b2be59291a9fe3" prot="public" static="no">
        <type>uint8_t</type>
        <definition>typedef uint8_t lv_keyboard_style_t</definition>
        <argsstring></argsstring>
        <name>lv_keyboard_style_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kisvegabor/projects/littlevgl/eclipse-workspace/lv_sim_eclipse_sdl/lvgl/scripts/release_tmp/lvgl/src/lv_widgets/lv_keyboard.h" line="63" column="1" bodyfile="/home/kisvegabor/projects/littlevgl/eclipse-workspace/lv_sim_eclipse_sdl/lvgl/scripts/release_tmp/lvgl/src/lv_widgets/lv_keyboard.h" bodystart="63" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="lv__keyboard_8h_1aab117b5e381c9a0a33a95afe7e907416" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref> *</type>
        <definition>lv_obj_t* lv_keyboard_create</definition>
        <argsstring>(lv_obj_t *par, const lv_obj_t *copy)</argsstring>
        <name>lv_keyboard_create</name>
        <param>
          <type><ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref> *</type>
          <declname>par</declname>
        </param>
        <param>
          <type>const <ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref> *</type>
          <declname>copy</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Create a keyboard objects <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>par</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to an object, it will be the parent of the new keyboard </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>copy</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to a keyboard object, if not NULL then the new object will be copied from it </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>pointer to the created keyboard </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kisvegabor/projects/littlevgl/eclipse-workspace/lv_sim_eclipse_sdl/lvgl/scripts/release_tmp/lvgl/src/lv_widgets/lv_keyboard.h" line="75" column="1"/>
      </memberdef>
      <memberdef kind="function" id="lv__keyboard_8h_1ae9c081fa9200d3ef7b9f42f30d19dc61" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void lv_keyboard_set_textarea</definition>
        <argsstring>(lv_obj_t *kb, lv_obj_t *ta)</argsstring>
        <name>lv_keyboard_set_textarea</name>
        <param>
          <type><ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref> *</type>
          <declname>kb</declname>
        </param>
        <param>
          <type><ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref> *</type>
          <declname>ta</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Assign a Text Area to the Keyboard. The pressed characters will be put there. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>kb</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to a Keyboard object </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ta</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to a Text Area object to write there </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kisvegabor/projects/littlevgl/eclipse-workspace/lv_sim_eclipse_sdl/lvgl/scripts/release_tmp/lvgl/src/lv_widgets/lv_keyboard.h" line="86" column="1"/>
      </memberdef>
      <memberdef kind="function" id="lv__keyboard_8h_1af9f7796cebb0f399fb0ba129ac11ccd9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void lv_keyboard_set_mode</definition>
        <argsstring>(lv_obj_t *kb, lv_keyboard_mode_t mode)</argsstring>
        <name>lv_keyboard_set_mode</name>
        <param>
          <type><ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref> *</type>
          <declname>kb</declname>
        </param>
        <param>
          <type>lv_keyboard_mode_t</type>
          <declname>mode</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set a new a mode (text or number map) <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>kb</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to a Keyboard object </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>mode</parametername>
</parameternamelist>
<parameterdescription>
<para>the mode from &apos;lv_keyboard_mode_t&apos; </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kisvegabor/projects/littlevgl/eclipse-workspace/lv_sim_eclipse_sdl/lvgl/scripts/release_tmp/lvgl/src/lv_widgets/lv_keyboard.h" line="93" column="1"/>
      </memberdef>
      <memberdef kind="function" id="lv__keyboard_8h_1ae4d12efb7974d3977979a5402bbfd9eb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void lv_keyboard_set_cursor_manage</definition>
        <argsstring>(lv_obj_t *kb, bool en)</argsstring>
        <name>lv_keyboard_set_cursor_manage</name>
        <param>
          <type><ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref> *</type>
          <declname>kb</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>en</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Automatically hide or show the cursor of the current Text Area <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>kb</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to a Keyboard object </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>en</parametername>
</parameternamelist>
<parameterdescription>
<para>true: show cursor on the current text area, false: hide cursor </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kisvegabor/projects/littlevgl/eclipse-workspace/lv_sim_eclipse_sdl/lvgl/scripts/release_tmp/lvgl/src/lv_widgets/lv_keyboard.h" line="100" column="1"/>
      </memberdef>
      <memberdef kind="function" id="lv__keyboard_8h_1a61586b1250de800d836b33b4bd488af0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void lv_keyboard_set_map</definition>
        <argsstring>(lv_obj_t *kb, lv_keyboard_mode_t mode, const char *map[])</argsstring>
        <name>lv_keyboard_set_map</name>
        <param>
          <type><ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref> *</type>
          <declname>kb</declname>
        </param>
        <param>
          <type>lv_keyboard_mode_t</type>
          <declname>mode</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>map</declname>
          <array>[]</array>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set a new map for the keyboard <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>kb</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to a Keyboard object </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>mode</parametername>
</parameternamelist>
<parameterdescription>
<para>keyboard map to alter &apos;lv_keyboard_mode_t&apos; </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>map</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to a string array to describe the map. See &apos;lv_btnmatrix_set_map()&apos; for more info. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kisvegabor/projects/littlevgl/eclipse-workspace/lv_sim_eclipse_sdl/lvgl/scripts/release_tmp/lvgl/src/lv_widgets/lv_keyboard.h" line="109" column="1"/>
      </memberdef>
      <memberdef kind="function" id="lv__keyboard_8h_1afbb22963306cff21e4d27ab764ede3b9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void lv_keyboard_set_ctrl_map</definition>
        <argsstring>(lv_obj_t *kb, lv_keyboard_mode_t mode, const lv_btnmatrix_ctrl_t ctrl_map[])</argsstring>
        <name>lv_keyboard_set_ctrl_map</name>
        <param>
          <type><ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref> *</type>
          <declname>kb</declname>
        </param>
        <param>
          <type>lv_keyboard_mode_t</type>
          <declname>mode</declname>
        </param>
        <param>
          <type>const lv_btnmatrix_ctrl_t</type>
          <declname>ctrl_map</declname>
          <array>[]</array>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set the button control map (hidden, disabled etc.) for the keyboard. The control map array will be copied and so may be deallocated after this function returns. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>kb</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to a keyboard object </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>mode</parametername>
</parameternamelist>
<parameterdescription>
<para>keyboard ctrl map to alter &apos;lv_keyboard_mode_t&apos; </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ctrl_map</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to an array of <computeroutput>lv_btn_ctrl_t</computeroutput> control bytes. See: <computeroutput>lv_btnmatrix_set_ctrl_map</computeroutput> for more details. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kisvegabor/projects/littlevgl/eclipse-workspace/lv_sim_eclipse_sdl/lvgl/scripts/release_tmp/lvgl/src/lv_widgets/lv_keyboard.h" line="120" column="1"/>
      </memberdef>
      <memberdef kind="function" id="lv__keyboard_8h_1a78fa355672c5d5ab96ab0aff6a6319d9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref> *</type>
        <definition>lv_obj_t* lv_keyboard_get_textarea</definition>
        <argsstring>(const lv_obj_t *kb)</argsstring>
        <name>lv_keyboard_get_textarea</name>
        <param>
          <type>const <ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref> *</type>
          <declname>kb</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Assign a Text Area to the Keyboard. The pressed characters will be put there. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>kb</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to a Keyboard object </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>pointer to the assigned Text Area object </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kisvegabor/projects/littlevgl/eclipse-workspace/lv_sim_eclipse_sdl/lvgl/scripts/release_tmp/lvgl/src/lv_widgets/lv_keyboard.h" line="131" column="1"/>
      </memberdef>
      <memberdef kind="function" id="lv__keyboard_8h_1a1efb285783ddd29679ac6ff940e10f9e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>lv_keyboard_mode_t</type>
        <definition>lv_keyboard_mode_t lv_keyboard_get_mode</definition>
        <argsstring>(const lv_obj_t *kb)</argsstring>
        <name>lv_keyboard_get_mode</name>
        <param>
          <type>const <ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref> *</type>
          <declname>kb</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set a new a mode (text or number map) <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>kb</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to a Keyboard object </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the current mode from &apos;lv_keyboard_mode_t&apos; </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kisvegabor/projects/littlevgl/eclipse-workspace/lv_sim_eclipse_sdl/lvgl/scripts/release_tmp/lvgl/src/lv_widgets/lv_keyboard.h" line="138" column="1"/>
      </memberdef>
      <memberdef kind="function" id="lv__keyboard_8h_1aab1a3db552f567e0c39a5f41161b0613" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool lv_keyboard_get_cursor_manage</definition>
        <argsstring>(const lv_obj_t *kb)</argsstring>
        <name>lv_keyboard_get_cursor_manage</name>
        <param>
          <type>const <ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref> *</type>
          <declname>kb</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the current cursor manage mode. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>kb</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to a Keyboard object </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true: show cursor on the current text area, false: hide cursor </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kisvegabor/projects/littlevgl/eclipse-workspace/lv_sim_eclipse_sdl/lvgl/scripts/release_tmp/lvgl/src/lv_widgets/lv_keyboard.h" line="145" column="1"/>
      </memberdef>
      <memberdef kind="function" id="lv__keyboard_8h_1acff1917a59b39d863e9f791e5668ea51" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>const char **</type>
        <definition>static const char** lv_keyboard_get_map_array</definition>
        <argsstring>(const lv_obj_t *kb)</argsstring>
        <name>lv_keyboard_get_map_array</name>
        <param>
          <type>const <ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref> *</type>
          <declname>kb</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the current map of a keyboard <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>kb</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to a keyboard object </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the current map </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kisvegabor/projects/littlevgl/eclipse-workspace/lv_sim_eclipse_sdl/lvgl/scripts/release_tmp/lvgl/src/lv_widgets/lv_keyboard.h" line="152" column="1" bodyfile="/home/kisvegabor/projects/littlevgl/eclipse-workspace/lv_sim_eclipse_sdl/lvgl/scripts/release_tmp/lvgl/src/lv_widgets/lv_keyboard.h" bodystart="152" bodyend="155"/>
      </memberdef>
      <memberdef kind="function" id="lv__keyboard_8h_1a0385e86282cb5a944b737a93b9bbd825" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void lv_keyboard_def_event_cb</definition>
        <argsstring>(lv_obj_t *kb, lv_event_t event)</argsstring>
        <name>lv_keyboard_def_event_cb</name>
        <param>
          <type><ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref> *</type>
          <declname>kb</declname>
        </param>
        <param>
          <type><ref refid="lv__obj_8h_1a81567353752c588831ed89a3b15b4ca0" kindref="member">lv_event_t</ref></type>
          <declname>event</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Default keyboard event to add characters to the Text area and change the map. If a custom <computeroutput>event_cb</computeroutput> is added to the keyboard this function be called from it to handle the button clicks <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>kb</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to a keyboard </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>event</parametername>
</parameternamelist>
<parameterdescription>
<para>the triggering event </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kisvegabor/projects/littlevgl/eclipse-workspace/lv_sim_eclipse_sdl/lvgl/scripts/release_tmp/lvgl/src/lv_widgets/lv_keyboard.h" line="168" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"></codeline>
<codeline lineno="6"><highlight class="preprocessor">#ifndef<sp/>LV_KEYBOARD_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LV_KEYBOARD_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">/*********************</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>INCLUDES</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*********************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../lv_conf_internal.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>LV_USE_KEYBOARD<sp/>!=<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="comment">/*Testing<sp/>of<sp/>dependencies*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>LV_USE_BTNMATRIX<sp/>==<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#error<sp/>&quot;lv_kb:<sp/>lv_btnm<sp/>is<sp/>required.<sp/>Enable<sp/>it<sp/>in<sp/>lv_conf.h<sp/>(LV_USE_BTNMATRIX<sp/><sp/>1)<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>LV_USE_TEXTAREA<sp/>==<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#error<sp/>&quot;lv_kb:<sp/>lv_ta<sp/>is<sp/>required.<sp/>Enable<sp/>it<sp/>in<sp/>lv_conf.h<sp/>(LV_USE_TEXTAREA<sp/><sp/>1)<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../lv_core/lv_obj.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;lv_btnmatrix.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="comment">/*********************</highlight></codeline>
<codeline lineno="33"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>DEFINES</highlight></codeline>
<codeline lineno="34"><highlight class="comment"><sp/>*********************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LV_KEYBOARD_CTRL_BTN_FLAGS<sp/>(LV_BTNMATRIX_CTRL_NO_REPEAT<sp/>|<sp/>LV_BTNMATRIX_CTRL_CLICK_TRIG)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="comment">/**********************</highlight></codeline>
<codeline lineno="38"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>TYPEDEFS</highlight></codeline>
<codeline lineno="39"><highlight class="comment"><sp/>**********************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/>LV_KEYBOARD_MODE_TEXT_LOWER,</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/>LV_KEYBOARD_MODE_TEXT_UPPER,</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/>LV_KEYBOARD_MODE_SPECIAL,</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/>LV_KEYBOARD_MODE_NUM,</highlight></codeline>
<codeline lineno="47"><highlight class="normal">};</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>uint8_t<sp/>lv_keyboard_mode_t;</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="comment">/*Data<sp/>of<sp/>keyboard*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51" refid="structlv__keyboard__ext__t" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structlv__btnmatrix__ext__t" kindref="compound">lv_btnmatrix_ext_t</ref><sp/>btnm;<sp/></highlight><highlight class="comment">/*Ext.<sp/>of<sp/>ancestor*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*New<sp/>data<sp/>for<sp/>this<sp/>type<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref><sp/>*<sp/>ta;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*Pointer<sp/>to<sp/>the<sp/>assigned<sp/>text<sp/>area*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/>lv_keyboard_mode_t<sp/>mode;<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*Key<sp/>map<sp/>type*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>cursor_mng<sp/>:<sp/>1;<sp/></highlight><highlight class="comment">/*1:<sp/>automatically<sp/>show/hide<sp/>cursor<sp/>when<sp/>a<sp/>text<sp/>area<sp/>is<sp/>assigned<sp/>or<sp/>left*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal">}<sp/><ref refid="structlv__keyboard__ext__t" kindref="compound">lv_keyboard_ext_t</ref>;</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/>LV_KEYBOARD_PART_BG,</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/>LV_KEYBOARD_PART_BTN,</highlight></codeline>
<codeline lineno="62"><highlight class="normal">};</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>uint8_t<sp/>lv_keyboard_style_t;</highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight><highlight class="comment">/**********************</highlight></codeline>
<codeline lineno="66"><highlight class="comment"><sp/>*<sp/>GLOBAL<sp/>PROTOTYPES</highlight></codeline>
<codeline lineno="67"><highlight class="comment"><sp/>**********************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref><sp/>*<sp/><ref refid="lv__keyboard_8h_1aab117b5e381c9a0a33a95afe7e907416" kindref="member">lv_keyboard_create</ref>(<ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref><sp/>*<sp/>par,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref><sp/>*<sp/>copy);</highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight><highlight class="comment">/*=====================</highlight></codeline>
<codeline lineno="78"><highlight class="comment"><sp/>*<sp/>Setter<sp/>functions</highlight></codeline>
<codeline lineno="79"><highlight class="comment"><sp/>*====================*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="lv__keyboard_8h_1ae9c081fa9200d3ef7b9f42f30d19dc61" kindref="member">lv_keyboard_set_textarea</ref>(<ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref><sp/>*<sp/>kb,<sp/><ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref><sp/>*<sp/>ta);</highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="lv__keyboard_8h_1af9f7796cebb0f399fb0ba129ac11ccd9" kindref="member">lv_keyboard_set_mode</ref>(<ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref><sp/>*<sp/>kb,<sp/>lv_keyboard_mode_t<sp/>mode);</highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="lv__keyboard_8h_1ae4d12efb7974d3977979a5402bbfd9eb" kindref="member">lv_keyboard_set_cursor_manage</ref>(<ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref><sp/>*<sp/>kb,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>en);</highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="lv__keyboard_8h_1a61586b1250de800d836b33b4bd488af0" kindref="member">lv_keyboard_set_map</ref>(<ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref><sp/>*<sp/>kb,<sp/>lv_keyboard_mode_t<sp/>mode,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/>map[]);</highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="lv__keyboard_8h_1afbb22963306cff21e4d27ab764ede3b9" kindref="member">lv_keyboard_set_ctrl_map</ref>(<ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref><sp/>*<sp/>kb,<sp/>lv_keyboard_mode_t<sp/>mode,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>lv_btnmatrix_ctrl_t<sp/>ctrl_map[]);</highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight><highlight class="comment">/*=====================</highlight></codeline>
<codeline lineno="123"><highlight class="comment"><sp/>*<sp/>Getter<sp/>functions</highlight></codeline>
<codeline lineno="124"><highlight class="comment"><sp/>*====================*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"><ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref><sp/>*<sp/><ref refid="lv__keyboard_8h_1a78fa355672c5d5ab96ab0aff6a6319d9" kindref="member">lv_keyboard_get_textarea</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref><sp/>*<sp/>kb);</highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal">lv_keyboard_mode_t<sp/><ref refid="lv__keyboard_8h_1a1efb285783ddd29679ac6ff940e10f9e" kindref="member">lv_keyboard_get_mode</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref><sp/>*<sp/>kb);</highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="lv__keyboard_8h_1aab1a3db552f567e0c39a5f41161b0613" kindref="member">lv_keyboard_get_cursor_manage</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref><sp/>*<sp/>kb);</highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**<sp/>lv_keyboard_get_map_array(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref><sp/>*<sp/>kb)</highlight></codeline>
<codeline lineno="153"><highlight class="normal">{</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>lv_btnmatrix_get_map_array(kb);</highlight></codeline>
<codeline lineno="155"><highlight class="normal">}</highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight><highlight class="comment">/*=====================</highlight></codeline>
<codeline lineno="158"><highlight class="comment"><sp/>*<sp/>Other<sp/>functions</highlight></codeline>
<codeline lineno="159"><highlight class="comment"><sp/>*====================*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="lv__keyboard_8h_1a0385e86282cb5a944b737a93b9bbd825" kindref="member">lv_keyboard_def_event_cb</ref>(<ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref><sp/>*<sp/>kb,<sp/><ref refid="lv__obj_8h_1a81567353752c588831ed89a3b15b4ca0" kindref="member">lv_event_t</ref><sp/>event);</highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight><highlight class="comment">/**********************</highlight></codeline>
<codeline lineno="171"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>MACROS</highlight></codeline>
<codeline lineno="172"><highlight class="comment"><sp/>**********************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*LV_USE_KEYBOARD*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal">}<sp/></highlight><highlight class="comment">/*<sp/>extern<sp/>&quot;C&quot;<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*LV_KEYBOARD_H*/</highlight><highlight class="preprocessor"></highlight></codeline>
    </programlisting>
    <location file="/home/kisvegabor/projects/littlevgl/eclipse-workspace/lv_sim_eclipse_sdl/lvgl/scripts/release_tmp/lvgl/src/lv_widgets/lv_keyboard.h"/>
  </compounddef>
</doxygen>
