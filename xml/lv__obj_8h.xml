<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="lv__obj_8h" kind="file" language="C++">
    <compoundname>lv_obj.h</compoundname>
    <innerclass refid="structlv__realign__t" prot="public">lv_realign_t</innerclass>
    <innerclass refid="struct__lv__obj__t" prot="public">_lv_obj_t</innerclass>
    <innerclass refid="structlv__obj__type__t" prot="public">lv_obj_type_t</innerclass>
    <innerclass refid="structlv__hit__test__info__t" prot="public">lv_hit_test_info_t</innerclass>
    <innerclass refid="structlv__get__style__info__t" prot="public">lv_get_style_info_t</innerclass>
    <innerclass refid="structlv__get__state__info__t" prot="public">lv_get_state_info_t</innerclass>
      <sectiondef kind="enum">
      <memberdef kind="enum" id="lv__obj_8h_1a99fb83031ce9923c84392b4e92f956b5" prot="public" static="no">
        <name>@2</name>
        <enumvalue id="lv__obj_8h_1a99fb83031ce9923c84392b4e92f956b5a1f3afabd4deede77515858ad0308728c" prot="public">
          <name>LV_DESIGN_DRAW_MAIN</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Draw the main portion of the object </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="lv__obj_8h_1a99fb83031ce9923c84392b4e92f956b5a52e693710212c03f55ec0dd3927f1d2e" prot="public">
          <name>LV_DESIGN_DRAW_POST</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Draw extras on the object </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="lv__obj_8h_1a99fb83031ce9923c84392b4e92f956b5a48e3eef6dffe9314f142ac9b38752c40" prot="public">
          <name>LV_DESIGN_COVER_CHK</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Check if the object fully covers the &apos;mask_p&apos; area </para>          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Design modes </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kisvegabor/projects/littlevgl/eclipse-workspace/lv_sim_eclipse_sdl/lvgl/scripts/release_tmp/lvgl/src/lv_core/lv_obj.h" line="61" column="1" bodyfile="/home/kisvegabor/projects/littlevgl/eclipse-workspace/lv_sim_eclipse_sdl/lvgl/scripts/release_tmp/lvgl/src/lv_core/lv_obj.h" bodystart="61" bodyend="65"/>
      </memberdef>
      <memberdef kind="enum" id="lv__obj_8h_1abc6126af1d45847bc59afa0aa3216b04" prot="public" static="no">
        <name>@3</name>
        <enumvalue id="lv__obj_8h_1abc6126af1d45847bc59afa0aa3216b04ac79f7792ca4959c203bef9016ee812a6" prot="public">
          <name>LV_DESIGN_RES_OK</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Draw ready </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="lv__obj_8h_1abc6126af1d45847bc59afa0aa3216b04a1ed44968ec6dc9a9d9db137b6801aea7" prot="public">
          <name>LV_DESIGN_RES_COVER</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Returned on <computeroutput>LV_DESIGN_COVER_CHK</computeroutput> if the areas is fully covered </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="lv__obj_8h_1abc6126af1d45847bc59afa0aa3216b04aeac794b1c61f85c5aaa5ff04d2f35040" prot="public">
          <name>LV_DESIGN_RES_NOT_COVER</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Returned on <computeroutput>LV_DESIGN_COVER_CHK</computeroutput> if the areas is not covered </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="lv__obj_8h_1abc6126af1d45847bc59afa0aa3216b04a9ec4c7d705dc1d20e45c034eaaddef62" prot="public">
          <name>LV_DESIGN_RES_MASKED</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Returned on <computeroutput>LV_DESIGN_COVER_CHK</computeroutput> if the areas is masked out (children also not cover) </para>          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Design results </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kisvegabor/projects/littlevgl/eclipse-workspace/lv_sim_eclipse_sdl/lvgl/scripts/release_tmp/lvgl/src/lv_core/lv_obj.h" line="70" column="1" bodyfile="/home/kisvegabor/projects/littlevgl/eclipse-workspace/lv_sim_eclipse_sdl/lvgl/scripts/release_tmp/lvgl/src/lv_core/lv_obj.h" bodystart="70" bodyend="75"/>
      </memberdef>
      <memberdef kind="enum" id="lv__obj_8h_1adc29c2ff13d900c2f185ee95427fb06c" prot="public" static="no">
        <name>@4</name>
        <enumvalue id="lv__obj_8h_1adc29c2ff13d900c2f185ee95427fb06ca85e0d9a885dadabf175b273bd44c93ba" prot="public">
          <name>LV_EVENT_PRESSED</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>The object has been pressed </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="lv__obj_8h_1adc29c2ff13d900c2f185ee95427fb06ca560856c6e0eccbbff88521dbd740c64c" prot="public">
          <name>LV_EVENT_PRESSING</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>The object is being pressed (called continuously while pressing) </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="lv__obj_8h_1adc29c2ff13d900c2f185ee95427fb06ca8c4e44f04b065ecd5bb5b858d02b01fc" prot="public">
          <name>LV_EVENT_PRESS_LOST</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>User is still pressing but slid cursor/finger off of the object </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="lv__obj_8h_1adc29c2ff13d900c2f185ee95427fb06caf40c18f3713f9fd7a2b3a86bbe0ce91d" prot="public">
          <name>LV_EVENT_SHORT_CLICKED</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>User pressed object for a short period of time, then released it. Not called if dragged. </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="lv__obj_8h_1adc29c2ff13d900c2f185ee95427fb06caa7aa6dc2a228e74fc21f3044e874ff84" prot="public">
          <name>LV_EVENT_LONG_PRESSED</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Object has been pressed for at least <computeroutput>LV_INDEV_LONG_PRESS_TIME</computeroutput>. Not called if dragged. </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="lv__obj_8h_1adc29c2ff13d900c2f185ee95427fb06caf75268f7d57e4d698a5cd4399378dc4b" prot="public">
          <name>LV_EVENT_LONG_PRESSED_REPEAT</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Called after <computeroutput>LV_INDEV_LONG_PRESS_TIME</computeroutput> in every <computeroutput>LV_INDEV_LONG_PRESS_REP_TIME</computeroutput> ms. Not called if dragged. </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="lv__obj_8h_1adc29c2ff13d900c2f185ee95427fb06caa02bc86fc8e7a7edab3634a816c19ab6" prot="public">
          <name>LV_EVENT_CLICKED</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Called on release if not dragged (regardless to long press) </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="lv__obj_8h_1adc29c2ff13d900c2f185ee95427fb06ca57be5704cf368a6ae442eb3642b52d4b" prot="public">
          <name>LV_EVENT_RELEASED</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Called in every cases when the object has been released </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="lv__obj_8h_1adc29c2ff13d900c2f185ee95427fb06ca0ca8de364952c66f5c199cecafedc26c" prot="public">
          <name>LV_EVENT_DRAG_BEGIN</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="lv__obj_8h_1adc29c2ff13d900c2f185ee95427fb06ca2925bf346c44b6d8d9aeb75469d102a0" prot="public">
          <name>LV_EVENT_DRAG_END</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="lv__obj_8h_1adc29c2ff13d900c2f185ee95427fb06caf0b9a3f95ca8e3e49251fd1052cdd4f8" prot="public">
          <name>LV_EVENT_DRAG_THROW_BEGIN</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="lv__obj_8h_1adc29c2ff13d900c2f185ee95427fb06ca0d85cf2703b9372c524d5c31d4904748" prot="public">
          <name>LV_EVENT_GESTURE</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>The object has been gesture </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="lv__obj_8h_1adc29c2ff13d900c2f185ee95427fb06ca26e32d4cfa8793473e2050455ad157eb" prot="public">
          <name>LV_EVENT_KEY</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="lv__obj_8h_1adc29c2ff13d900c2f185ee95427fb06caa36d2b7aa8cfa92719266858018c274b" prot="public">
          <name>LV_EVENT_FOCUSED</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="lv__obj_8h_1adc29c2ff13d900c2f185ee95427fb06ca6268513bd9ad2b5703e394f46f18e4de" prot="public">
          <name>LV_EVENT_DEFOCUSED</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="lv__obj_8h_1adc29c2ff13d900c2f185ee95427fb06ca431c4bcf9154e601ac061c53d8ba03ce" prot="public">
          <name>LV_EVENT_LEAVE</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="lv__obj_8h_1adc29c2ff13d900c2f185ee95427fb06ca46740aecc431a95080e7ebd9aca815e3" prot="public">
          <name>LV_EVENT_VALUE_CHANGED</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>The object&apos;s value has changed (i.e. slider moved) </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="lv__obj_8h_1adc29c2ff13d900c2f185ee95427fb06ca93a020762c350c40285c900c49074ebe" prot="public">
          <name>LV_EVENT_INSERT</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="lv__obj_8h_1adc29c2ff13d900c2f185ee95427fb06ca5c6d081b794d09ebe3e098d7d12cec25" prot="public">
          <name>LV_EVENT_REFRESH</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="lv__obj_8h_1adc29c2ff13d900c2f185ee95427fb06ca7df0cf4bd306549bead4a83ea2cb49d2" prot="public">
          <name>LV_EVENT_APPLY</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>&quot;Ok&quot;, &quot;Apply&quot; or similar specific button has clicked </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="lv__obj_8h_1adc29c2ff13d900c2f185ee95427fb06cafbc2a898addfb4bc699b9f7a4f66150d" prot="public">
          <name>LV_EVENT_CANCEL</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>&quot;Close&quot;, &quot;Cancel&quot; or similar specific button has clicked </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="lv__obj_8h_1adc29c2ff13d900c2f185ee95427fb06ca2b6e10a27dd52c80f3ed04e4bc3ced2b" prot="public">
          <name>LV_EVENT_DELETE</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Object is being deleted </para>          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kisvegabor/projects/littlevgl/eclipse-workspace/lv_sim_eclipse_sdl/lvgl/scripts/release_tmp/lvgl/src/lv_core/lv_obj.h" line="84" column="1" bodyfile="/home/kisvegabor/projects/littlevgl/eclipse-workspace/lv_sim_eclipse_sdl/lvgl/scripts/release_tmp/lvgl/src/lv_core/lv_obj.h" bodystart="84" bodyend="108"/>
      </memberdef>
      <memberdef kind="enum" id="lv__obj_8h_1a61dadd085c1777f559549e05962b2c9e" prot="public" static="no">
        <name>@5</name>
        <enumvalue id="lv__obj_8h_1a61dadd085c1777f559549e05962b2c9eadbc2556344c61af73876d1119e16ed39" prot="public">
          <name>LV_SIGNAL_CLEANUP</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Object is being deleted </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="lv__obj_8h_1a61dadd085c1777f559549e05962b2c9ea7431d188c928d451bb7d9d9d874a3c25" prot="public">
          <name>LV_SIGNAL_CHILD_CHG</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Child was removed/added </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="lv__obj_8h_1a61dadd085c1777f559549e05962b2c9ea228ca2347183d43ac5243fdf954854c6" prot="public">
          <name>LV_SIGNAL_COORD_CHG</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Object coordinates/size have changed </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="lv__obj_8h_1a61dadd085c1777f559549e05962b2c9ea7ed449098cd77353608f1574a01e0f88" prot="public">
          <name>LV_SIGNAL_PARENT_SIZE_CHG</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Parent&apos;s size has changed </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="lv__obj_8h_1a61dadd085c1777f559549e05962b2c9ead63b9c7fd5fef5aadb7fc36b5801f22a" prot="public">
          <name>LV_SIGNAL_STYLE_CHG</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Object&apos;s style has changed </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="lv__obj_8h_1a61dadd085c1777f559549e05962b2c9ea0309e2b76baf4685660bd8c6f84f1b15" prot="public">
          <name>LV_SIGNAL_BASE_DIR_CHG</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>The base dir has changed </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="lv__obj_8h_1a61dadd085c1777f559549e05962b2c9ea2d83e1e99c8e778911f5bcbf94722c08" prot="public">
          <name>LV_SIGNAL_REFR_EXT_DRAW_PAD</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Object&apos;s extra padding has changed </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="lv__obj_8h_1a61dadd085c1777f559549e05962b2c9eaa34afa204372de2536c237cf3ef9f706" prot="public">
          <name>LV_SIGNAL_GET_TYPE</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>LVGL needs to retrieve the object&apos;s type </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="lv__obj_8h_1a61dadd085c1777f559549e05962b2c9ea96ef659d4ecc2545c5d707930c5bace0" prot="public">
          <name>LV_SIGNAL_GET_STYLE</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Get the style of an object </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="lv__obj_8h_1a61dadd085c1777f559549e05962b2c9eaa5bebb37a5452d368f8bf2e8899c0558" prot="public">
          <name>LV_SIGNAL_GET_STATE_DSC</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Get the state of the object </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="lv__obj_8h_1a61dadd085c1777f559549e05962b2c9eaaf2d872bea05c3f9e65191b30c432f08" prot="public">
          <name>LV_SIGNAL_HIT_TEST</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Advanced hit-testing </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="lv__obj_8h_1a61dadd085c1777f559549e05962b2c9ea9b8e8b61f251c07a4c23b11433d057bc" prot="public">
          <name>LV_SIGNAL_PRESSED</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>The object has been pressed </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="lv__obj_8h_1a61dadd085c1777f559549e05962b2c9eaf0da634720521b34abe41aaa384626de" prot="public">
          <name>LV_SIGNAL_PRESSING</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>The object is being pressed (called continuously while pressing) </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="lv__obj_8h_1a61dadd085c1777f559549e05962b2c9ea9055a5dd2dc8415ae8d9757689f38693" prot="public">
          <name>LV_SIGNAL_PRESS_LOST</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>User is still pressing but slid cursor/finger off of the object </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="lv__obj_8h_1a61dadd085c1777f559549e05962b2c9ea8f500f5ed0bab006bc365e67496ac30f" prot="public">
          <name>LV_SIGNAL_RELEASED</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>User pressed object for a short period of time, then released it. Not called if dragged. </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="lv__obj_8h_1a61dadd085c1777f559549e05962b2c9ea2d9e0caa05c29ce6c319bb5bca8fae26" prot="public">
          <name>LV_SIGNAL_LONG_PRESS</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Object has been pressed for at least <computeroutput>LV_INDEV_LONG_PRESS_TIME</computeroutput>. Not called if dragged. </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="lv__obj_8h_1a61dadd085c1777f559549e05962b2c9ea103008d084ba8829b6bf76670251e465" prot="public">
          <name>LV_SIGNAL_LONG_PRESS_REP</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Called after <computeroutput>LV_INDEV_LONG_PRESS_TIME</computeroutput> in every <computeroutput>LV_INDEV_LONG_PRESS_REP_TIME</computeroutput> ms. Not called if dragged. </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="lv__obj_8h_1a61dadd085c1777f559549e05962b2c9ea7d87c5ce73ffe6630dc2730bf5177d0c" prot="public">
          <name>LV_SIGNAL_DRAG_BEGIN</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="lv__obj_8h_1a61dadd085c1777f559549e05962b2c9ea56a398615e9a360bdb3fdb2fe3750ddd" prot="public">
          <name>LV_SIGNAL_DRAG_THROW_BEGIN</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="lv__obj_8h_1a61dadd085c1777f559549e05962b2c9ea9060fe3f8d3ad44ee493ad7fa1e824df" prot="public">
          <name>LV_SIGNAL_DRAG_END</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="lv__obj_8h_1a61dadd085c1777f559549e05962b2c9eac4d91026aebff613fe7f2f75761c8a04" prot="public">
          <name>LV_SIGNAL_GESTURE</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>The object has been gesture </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="lv__obj_8h_1a61dadd085c1777f559549e05962b2c9eac10d8dbf287bcda2e8d3efbaa7ddd2e1" prot="public">
          <name>LV_SIGNAL_LEAVE</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Another object is clicked or chosen via an input device </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="lv__obj_8h_1a61dadd085c1777f559549e05962b2c9eaa403d9c7bf7cc4639aed8e73c7942f8f" prot="public">
          <name>LV_SIGNAL_FOCUS</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="lv__obj_8h_1a61dadd085c1777f559549e05962b2c9ea1624b8a95d354e7eee11204743b4c38c" prot="public">
          <name>LV_SIGNAL_DEFOCUS</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="lv__obj_8h_1a61dadd085c1777f559549e05962b2c9eaa5bf3b5124b7925f587025316f398995" prot="public">
          <name>LV_SIGNAL_CONTROL</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="lv__obj_8h_1a61dadd085c1777f559549e05962b2c9ea26e3183d5c30d2345b36dbc86cd4afea" prot="public">
          <name>LV_SIGNAL_GET_EDITABLE</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Signals are for use by the object itself or to extend the object&apos;s functionality. Applications should use <ref refid="lv__obj_8h_1a16c2f9020fcde51036b3e319b6217203" kindref="member">lv_obj_set_event_cb</ref> to be notified of events that occur on the object. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kisvegabor/projects/littlevgl/eclipse-workspace/lv_sim_eclipse_sdl/lvgl/scripts/release_tmp/lvgl/src/lv_core/lv_obj.h" line="121" column="1" bodyfile="/home/kisvegabor/projects/littlevgl/eclipse-workspace/lv_sim_eclipse_sdl/lvgl/scripts/release_tmp/lvgl/src/lv_core/lv_obj.h" bodystart="121" bodyend="153"/>
      </memberdef>
      <memberdef kind="enum" id="lv__obj_8h_1a726ca809ffd3d67ab4b8476646f26635" prot="public" static="no">
        <name>@6</name>
        <enumvalue id="lv__obj_8h_1a726ca809ffd3d67ab4b8476646f26635ae9d16e769844c2c4107dec15600c18b1" prot="public">
          <name>LV_PROTECT_NONE</name>
          <initializer>= 0x00</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="lv__obj_8h_1a726ca809ffd3d67ab4b8476646f26635ad6905e1772856f1cee258aa080e3a2fb" prot="public">
          <name>LV_PROTECT_CHILD_CHG</name>
          <initializer>= 0x01</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Disable the child change signal. Used by the library </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="lv__obj_8h_1a726ca809ffd3d67ab4b8476646f26635abf71fbcdeebdc489d9ed7014f47860eb" prot="public">
          <name>LV_PROTECT_PARENT</name>
          <initializer>= 0x02</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Prevent automatic parent change (e.g. in lv_page) </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="lv__obj_8h_1a726ca809ffd3d67ab4b8476646f26635ac605062bb3895bd55356d4520a9e8160" prot="public">
          <name>LV_PROTECT_POS</name>
          <initializer>= 0x04</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Prevent automatic positioning (e.g. in lv_cont layout) </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="lv__obj_8h_1a726ca809ffd3d67ab4b8476646f26635a7b5c826d0974bcc4a78c420a92dca626" prot="public">
          <name>LV_PROTECT_FOLLOW</name>
          <initializer>= 0x08</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Prevent the object be followed in automatic ordering (e.g. in lv_cont PRETTY layout) </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="lv__obj_8h_1a726ca809ffd3d67ab4b8476646f26635a56ece3ac8b436ca76e4aabf82b1e76b0" prot="public">
          <name>LV_PROTECT_PRESS_LOST</name>
          <initializer>= 0x10</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>If the <computeroutput>indev</computeroutput> was pressing this object but swiped out while pressing do not search other object. </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="lv__obj_8h_1a726ca809ffd3d67ab4b8476646f26635a3cbe02ea9019628d25cd9aef0ccf8296" prot="public">
          <name>LV_PROTECT_CLICK_FOCUS</name>
          <initializer>= 0x20</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Prevent focusing the object by clicking on it </para>          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kisvegabor/projects/littlevgl/eclipse-workspace/lv_sim_eclipse_sdl/lvgl/scripts/release_tmp/lvgl/src/lv_core/lv_obj.h" line="171" column="1" bodyfile="/home/kisvegabor/projects/littlevgl/eclipse-workspace/lv_sim_eclipse_sdl/lvgl/scripts/release_tmp/lvgl/src/lv_core/lv_obj.h" bodystart="171" bodyend="181"/>
      </memberdef>
      <memberdef kind="enum" id="lv__obj_8h_1a0411cd49bb5b71852cecd93bcbf0ca2d" prot="public" static="no">
        <name>@7</name>
        <enumvalue id="lv__obj_8h_1a0411cd49bb5b71852cecd93bcbf0ca2da9817cb0d3c0e422c1f63901d4d92e8c3" prot="public">
          <name>LV_STATE_DEFAULT</name>
          <initializer>=  0x00</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="lv__obj_8h_1a0411cd49bb5b71852cecd93bcbf0ca2da6fc6f742b7b193d9dad585f32826afcf" prot="public">
          <name>LV_STATE_CHECKED</name>
          <initializer>=  0x01</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="lv__obj_8h_1a0411cd49bb5b71852cecd93bcbf0ca2da5fb9f48f09dbcf9d45b0f79675e793cb" prot="public">
          <name>LV_STATE_FOCUSED</name>
          <initializer>=  0x02</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="lv__obj_8h_1a0411cd49bb5b71852cecd93bcbf0ca2da57be5d3fed5ca1d0519c0302a4517e8a" prot="public">
          <name>LV_STATE_EDITED</name>
          <initializer>=  0x04</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="lv__obj_8h_1a0411cd49bb5b71852cecd93bcbf0ca2daa24f8fab93b0965e98f5ad3bafea48b8" prot="public">
          <name>LV_STATE_HOVERED</name>
          <initializer>=  0x08</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="lv__obj_8h_1a0411cd49bb5b71852cecd93bcbf0ca2da69673539aa92d84848a992fb3baea649" prot="public">
          <name>LV_STATE_PRESSED</name>
          <initializer>=  0x10</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="lv__obj_8h_1a0411cd49bb5b71852cecd93bcbf0ca2da63e18d3006cf8c0e73a5062782dce94b" prot="public">
          <name>LV_STATE_DISABLED</name>
          <initializer>=  0x20</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kisvegabor/projects/littlevgl/eclipse-workspace/lv_sim_eclipse_sdl/lvgl/scripts/release_tmp/lvgl/src/lv_core/lv_obj.h" line="184" column="1" bodyfile="/home/kisvegabor/projects/littlevgl/eclipse-workspace/lv_sim_eclipse_sdl/lvgl/scripts/release_tmp/lvgl/src/lv_core/lv_obj.h" bodystart="184" bodyend="192"/>
      </memberdef>
      <memberdef kind="enum" id="lv__obj_8h_1abed82baf7f470b522273a3e37c24c600" prot="public" static="no">
        <name>@8</name>
        <enumvalue id="lv__obj_8h_1abed82baf7f470b522273a3e37c24c600acd1c8b2ad7ced3b6df5ce08735bc7f13" prot="public">
          <name>LV_OBJ_PART_MAIN</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="lv__obj_8h_1abed82baf7f470b522273a3e37c24c600a286deae4ec40014a55a575b72c5dc77e" prot="public">
          <name>_LV_OBJ_PART_VIRTUAL_LAST</name>
          <initializer>= _LV_OBJ_PART_VIRTUAL_FIRST</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="lv__obj_8h_1abed82baf7f470b522273a3e37c24c600a977b9c860a67308fc0ecc85074a175ac" prot="public">
          <name>_LV_OBJ_PART_REAL_LAST</name>
          <initializer>=    _LV_OBJ_PART_REAL_FIRST</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="lv__obj_8h_1abed82baf7f470b522273a3e37c24c600a046ff010ec4e48fc91aa54c5d0cdd378" prot="public">
          <name>LV_OBJ_PART_ALL</name>
          <initializer>= 0xFF</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kisvegabor/projects/littlevgl/eclipse-workspace/lv_sim_eclipse_sdl/lvgl/scripts/release_tmp/lvgl/src/lv_core/lv_obj.h" line="251" column="1" bodyfile="/home/kisvegabor/projects/littlevgl/eclipse-workspace/lv_sim_eclipse_sdl/lvgl/scripts/release_tmp/lvgl/src/lv_core/lv_obj.h" bodystart="251" bodyend="256"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="lv__obj_8h_1a56836b6e5426fe0b9190a6adb32120c2" prot="public" static="no">
        <type>uint8_t</type>
        <definition>typedef uint8_t lv_design_mode_t</definition>
        <argsstring></argsstring>
        <name>lv_design_mode_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kisvegabor/projects/littlevgl/eclipse-workspace/lv_sim_eclipse_sdl/lvgl/scripts/release_tmp/lvgl/src/lv_core/lv_obj.h" line="66" column="1" bodyfile="/home/kisvegabor/projects/littlevgl/eclipse-workspace/lv_sim_eclipse_sdl/lvgl/scripts/release_tmp/lvgl/src/lv_core/lv_obj.h" bodystart="66" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="lv__obj_8h_1a5daecfbabb06a60241d50de1ead8ce61" prot="public" static="no">
        <type>uint8_t</type>
        <definition>typedef uint8_t lv_design_res_t</definition>
        <argsstring></argsstring>
        <name>lv_design_res_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kisvegabor/projects/littlevgl/eclipse-workspace/lv_sim_eclipse_sdl/lvgl/scripts/release_tmp/lvgl/src/lv_core/lv_obj.h" line="76" column="1" bodyfile="/home/kisvegabor/projects/littlevgl/eclipse-workspace/lv_sim_eclipse_sdl/lvgl/scripts/release_tmp/lvgl/src/lv_core/lv_obj.h" bodystart="76" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="lv__obj_8h_1ab1b5bf7b2fac5b7cf204a7be845a6679" prot="public" static="no">
        <type>lv_design_res_t(*</type>
        <definition>typedef lv_design_res_t(* lv_design_cb_t) (struct _lv_obj_t *obj, const lv_area_t *clip_area, lv_design_mode_t mode)</definition>
        <argsstring>)(struct _lv_obj_t *obj, const lv_area_t *clip_area, lv_design_mode_t mode)</argsstring>
        <name>lv_design_cb_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The design callback is used to draw the object on the screen. It accepts the object, a mask area, and the mode in which to draw the object. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kisvegabor/projects/littlevgl/eclipse-workspace/lv_sim_eclipse_sdl/lvgl/scripts/release_tmp/lvgl/src/lv_core/lv_obj.h" line="82" column="1" bodyfile="/home/kisvegabor/projects/littlevgl/eclipse-workspace/lv_sim_eclipse_sdl/lvgl/scripts/release_tmp/lvgl/src/lv_core/lv_obj.h" bodystart="82" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="lv__obj_8h_1a81567353752c588831ed89a3b15b4ca0" prot="public" static="no">
        <type>uint8_t</type>
        <definition>typedef uint8_t lv_event_t</definition>
        <argsstring></argsstring>
        <name>lv_event_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Type of event being sent to the object. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kisvegabor/projects/littlevgl/eclipse-workspace/lv_sim_eclipse_sdl/lvgl/scripts/release_tmp/lvgl/src/lv_core/lv_obj.h" line="109" column="1" bodyfile="/home/kisvegabor/projects/littlevgl/eclipse-workspace/lv_sim_eclipse_sdl/lvgl/scripts/release_tmp/lvgl/src/lv_core/lv_obj.h" bodystart="109" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="lv__obj_8h_1a9366c6b8b950ee09075cdfe83105a81f" prot="public" static="no">
        <type>void(*</type>
        <definition>typedef void(* lv_event_cb_t) (struct _lv_obj_t *obj, lv_event_t event)</definition>
        <argsstring>)(struct _lv_obj_t *obj, lv_event_t event)</argsstring>
        <name>lv_event_cb_t</name>
        <briefdescription>
<para>Event callback. Events are used to notify the user of some action being taken on the object. For details, see <ref refid="lv__obj_8h_1a81567353752c588831ed89a3b15b4ca0" kindref="member">lv_event_t</ref>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kisvegabor/projects/littlevgl/eclipse-workspace/lv_sim_eclipse_sdl/lvgl/scripts/release_tmp/lvgl/src/lv_core/lv_obj.h" line="116" column="1" bodyfile="/home/kisvegabor/projects/littlevgl/eclipse-workspace/lv_sim_eclipse_sdl/lvgl/scripts/release_tmp/lvgl/src/lv_core/lv_obj.h" bodystart="116" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="lv__obj_8h_1aaec725321f7abe33a79d04cdc91498ce" prot="public" static="no">
        <type>uint8_t</type>
        <definition>typedef uint8_t lv_signal_t</definition>
        <argsstring></argsstring>
        <name>lv_signal_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kisvegabor/projects/littlevgl/eclipse-workspace/lv_sim_eclipse_sdl/lvgl/scripts/release_tmp/lvgl/src/lv_core/lv_obj.h" line="154" column="1" bodyfile="/home/kisvegabor/projects/littlevgl/eclipse-workspace/lv_sim_eclipse_sdl/lvgl/scripts/release_tmp/lvgl/src/lv_core/lv_obj.h" bodystart="154" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="lv__obj_8h_1a5277b3d9138e4423e14e45b4f2a3b4c2" prot="public" static="no">
        <type>lv_res_t(*</type>
        <definition>typedef lv_res_t(* lv_signal_cb_t) (struct _lv_obj_t *obj, lv_signal_t sign, void *param)</definition>
        <argsstring>)(struct _lv_obj_t *obj, lv_signal_t sign, void *param)</argsstring>
        <name>lv_signal_cb_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kisvegabor/projects/littlevgl/eclipse-workspace/lv_sim_eclipse_sdl/lvgl/scripts/release_tmp/lvgl/src/lv_core/lv_obj.h" line="156" column="1" bodyfile="/home/kisvegabor/projects/littlevgl/eclipse-workspace/lv_sim_eclipse_sdl/lvgl/scripts/release_tmp/lvgl/src/lv_core/lv_obj.h" bodystart="156" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="lv__obj_8h_1ab4260358010f1488a9993f9cde2cb7c7" prot="public" static="no">
        <type>uint8_t</type>
        <definition>typedef uint8_t lv_protect_t</definition>
        <argsstring></argsstring>
        <name>lv_protect_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kisvegabor/projects/littlevgl/eclipse-workspace/lv_sim_eclipse_sdl/lvgl/scripts/release_tmp/lvgl/src/lv_core/lv_obj.h" line="182" column="1" bodyfile="/home/kisvegabor/projects/littlevgl/eclipse-workspace/lv_sim_eclipse_sdl/lvgl/scripts/release_tmp/lvgl/src/lv_core/lv_obj.h" bodystart="182" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="lv__obj_8h_1aea8d70fce255ebb67326dae22f6ab8f7" prot="public" static="no">
        <type>uint8_t</type>
        <definition>typedef uint8_t lv_state_t</definition>
        <argsstring></argsstring>
        <name>lv_state_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kisvegabor/projects/littlevgl/eclipse-workspace/lv_sim_eclipse_sdl/lvgl/scripts/release_tmp/lvgl/src/lv_core/lv_obj.h" line="194" column="1" bodyfile="/home/kisvegabor/projects/littlevgl/eclipse-workspace/lv_sim_eclipse_sdl/lvgl/scripts/release_tmp/lvgl/src/lv_core/lv_obj.h" bodystart="194" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="lv__obj_8h_1a38023c894dabf8ae85bf86aa79981ceb" prot="public" static="no">
        <type>struct <ref refid="struct__lv__obj__t" kindref="compound">_lv_obj_t</ref></type>
        <definition>typedef struct _lv_obj_t  lv_obj_t</definition>
        <argsstring></argsstring>
        <name>lv_obj_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kisvegabor/projects/littlevgl/eclipse-workspace/lv_sim_eclipse_sdl/lvgl/scripts/release_tmp/lvgl/src/lv_core/lv_obj.h" line="249" column="1"/>
      </memberdef>
      <memberdef kind="typedef" id="lv__obj_8h_1a6a747867493e9932e019f572cec17225" prot="public" static="no">
        <type>uint8_t</type>
        <definition>typedef uint8_t lv_obj_part_t</definition>
        <argsstring></argsstring>
        <name>lv_obj_part_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kisvegabor/projects/littlevgl/eclipse-workspace/lv_sim_eclipse_sdl/lvgl/scripts/release_tmp/lvgl/src/lv_core/lv_obj.h" line="258" column="1" bodyfile="/home/kisvegabor/projects/littlevgl/eclipse-workspace/lv_sim_eclipse_sdl/lvgl/scripts/release_tmp/lvgl/src/lv_core/lv_obj.h" bodystart="258" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="lv__obj_8h_1a666fa58edac1e61856b2a00fe60308a0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void lv_init</definition>
        <argsstring>(void)</argsstring>
        <name>lv_init</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Init. the &apos;lv&apos; library. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kisvegabor/projects/littlevgl/eclipse-workspace/lv_sim_eclipse_sdl/lvgl/scripts/release_tmp/lvgl/src/lv_core/lv_obj.h" line="288" column="1"/>
      </memberdef>
      <memberdef kind="function" id="lv__obj_8h_1a302a9934e9b77badac7f527b5116a156" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void lv_deinit</definition>
        <argsstring>(void)</argsstring>
        <name>lv_deinit</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Deinit the &apos;lv&apos; library Currently only implemented when not using custom allocators, or GC is enabled. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kisvegabor/projects/littlevgl/eclipse-workspace/lv_sim_eclipse_sdl/lvgl/scripts/release_tmp/lvgl/src/lv_core/lv_obj.h" line="296" column="1"/>
      </memberdef>
      <memberdef kind="function" id="lv__obj_8h_1af5b63647e5fc488f3a5fcdc755d9eb2a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref> *</type>
        <definition>lv_obj_t* lv_obj_create</definition>
        <argsstring>(lv_obj_t *parent, const lv_obj_t *copy)</argsstring>
        <name>lv_obj_create</name>
        <param>
          <type><ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref> *</type>
          <declname>parent</declname>
        </param>
        <param>
          <type>const <ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref> *</type>
          <declname>copy</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Create a basic object <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>parent</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to a parent object. If NULL then a screen will be created </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>copy</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to a base object, if not NULL then the new object will be copied from it </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>pointer to the new object </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kisvegabor/projects/littlevgl/eclipse-workspace/lv_sim_eclipse_sdl/lvgl/scripts/release_tmp/lvgl/src/lv_core/lv_obj.h" line="310" column="1"/>
      </memberdef>
      <memberdef kind="function" id="lv__obj_8h_1a417b2917d719634f9aa8e00aa6e76301" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>lv_res_t</type>
        <definition>lv_res_t lv_obj_del</definition>
        <argsstring>(lv_obj_t *obj)</argsstring>
        <name>lv_obj_del</name>
        <param>
          <type><ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref> *</type>
          <declname>obj</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Delete &apos;obj&apos; and all of its children <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>obj</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to an object to delete </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>LV_RES_INV because the object is deleted </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kisvegabor/projects/littlevgl/eclipse-workspace/lv_sim_eclipse_sdl/lvgl/scripts/release_tmp/lvgl/src/lv_core/lv_obj.h" line="317" column="1"/>
      </memberdef>
      <memberdef kind="function" id="lv__obj_8h_1aea6f2d4b966b06c06658c12aac2fa254" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void lv_obj_del_anim_ready_cb</definition>
        <argsstring>(lv_anim_t *a)</argsstring>
        <name>lv_obj_del_anim_ready_cb</name>
        <param>
          <type><ref refid="struct__lv__anim__t" kindref="compound">lv_anim_t</ref> *</type>
          <declname>a</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>A function to be easily used in animation ready callback to delete an object when the animation is ready <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>a</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to the animation </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kisvegabor/projects/littlevgl/eclipse-workspace/lv_sim_eclipse_sdl/lvgl/scripts/release_tmp/lvgl/src/lv_core/lv_obj.h" line="324" column="1"/>
      </memberdef>
      <memberdef kind="function" id="lv__obj_8h_1a0080923cccf80af7b1756b0e418db547" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void lv_obj_del_async</definition>
        <argsstring>(struct _lv_obj_t *obj)</argsstring>
        <name>lv_obj_del_async</name>
        <param>
          <type>struct <ref refid="struct__lv__obj__t" kindref="compound">_lv_obj_t</ref> *</type>
          <declname>obj</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Helper function for asynchronously deleting objects. Useful for cases where you can&apos;t delete an object directly in an <computeroutput>LV_EVENT_DELETE</computeroutput> handler (i.e. parent). <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>obj</parametername>
</parameternamelist>
<parameterdescription>
<para>object to delete </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="lv__async_8h_1aee44e660e597215583d71f76f9ce2564" kindref="member">lv_async_call</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kisvegabor/projects/littlevgl/eclipse-workspace/lv_sim_eclipse_sdl/lvgl/scripts/release_tmp/lvgl/src/lv_core/lv_obj.h" line="333" column="1"/>
      </memberdef>
      <memberdef kind="function" id="lv__obj_8h_1ab9e1d84b921e63d1da83fe711b214aea" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void lv_obj_clean</definition>
        <argsstring>(lv_obj_t *obj)</argsstring>
        <name>lv_obj_clean</name>
        <param>
          <type><ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref> *</type>
          <declname>obj</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Delete all children of an object <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>obj</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to an object </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kisvegabor/projects/littlevgl/eclipse-workspace/lv_sim_eclipse_sdl/lvgl/scripts/release_tmp/lvgl/src/lv_core/lv_obj.h" line="339" column="1"/>
      </memberdef>
      <memberdef kind="function" id="lv__obj_8h_1a33a0a3c2c2861391f3b0e58cfe39914a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void lv_obj_invalidate_area</definition>
        <argsstring>(const lv_obj_t *obj, const lv_area_t *area)</argsstring>
        <name>lv_obj_invalidate_area</name>
        <param>
          <type>const <ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref> *</type>
          <declname>obj</declname>
        </param>
        <param>
          <type>const <ref refid="structlv__area__t" kindref="compound">lv_area_t</ref> *</type>
          <declname>area</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Mark an area of an object as invalid. This area will be redrawn by &apos;lv_refr_task&apos; <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>obj</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to an object </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>area</parametername>
</parameternamelist>
<parameterdescription>
<para>the area to redraw </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kisvegabor/projects/littlevgl/eclipse-workspace/lv_sim_eclipse_sdl/lvgl/scripts/release_tmp/lvgl/src/lv_core/lv_obj.h" line="348" column="1"/>
      </memberdef>
      <memberdef kind="function" id="lv__obj_8h_1aad66ca3c74dbc0c194bd5135fa18d033" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void lv_obj_invalidate</definition>
        <argsstring>(const lv_obj_t *obj)</argsstring>
        <name>lv_obj_invalidate</name>
        <param>
          <type>const <ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref> *</type>
          <declname>obj</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Mark the object as invalid therefore its current position will be redrawn by &apos;lv_refr_task&apos; <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>obj</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to an object </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kisvegabor/projects/littlevgl/eclipse-workspace/lv_sim_eclipse_sdl/lvgl/scripts/release_tmp/lvgl/src/lv_core/lv_obj.h" line="354" column="1"/>
      </memberdef>
      <memberdef kind="function" id="lv__obj_8h_1abc514aaa674d90d982ebefebca6b2284" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void lv_obj_set_parent</definition>
        <argsstring>(lv_obj_t *obj, lv_obj_t *parent)</argsstring>
        <name>lv_obj_set_parent</name>
        <param>
          <type><ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref> *</type>
          <declname>obj</declname>
        </param>
        <param>
          <type><ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref> *</type>
          <declname>parent</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set a new parent for an object. Its relative position will be the same. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>obj</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to an object. Can&apos;t be a screen. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>parent</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to the new parent object. (Can&apos;t be NULL) </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kisvegabor/projects/littlevgl/eclipse-workspace/lv_sim_eclipse_sdl/lvgl/scripts/release_tmp/lvgl/src/lv_core/lv_obj.h" line="369" column="1"/>
      </memberdef>
      <memberdef kind="function" id="lv__obj_8h_1aa7aa29e1594d02eac986bf0766ef348e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void lv_obj_move_foreground</definition>
        <argsstring>(lv_obj_t *obj)</argsstring>
        <name>lv_obj_move_foreground</name>
        <param>
          <type><ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref> *</type>
          <declname>obj</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Move and object to the foreground <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>obj</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to an object </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kisvegabor/projects/littlevgl/eclipse-workspace/lv_sim_eclipse_sdl/lvgl/scripts/release_tmp/lvgl/src/lv_core/lv_obj.h" line="375" column="1"/>
      </memberdef>
      <memberdef kind="function" id="lv__obj_8h_1a6a63bb02c90da34db7988904a53b54ba" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void lv_obj_move_background</definition>
        <argsstring>(lv_obj_t *obj)</argsstring>
        <name>lv_obj_move_background</name>
        <param>
          <type><ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref> *</type>
          <declname>obj</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Move and object to the background <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>obj</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to an object </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kisvegabor/projects/littlevgl/eclipse-workspace/lv_sim_eclipse_sdl/lvgl/scripts/release_tmp/lvgl/src/lv_core/lv_obj.h" line="381" column="1"/>
      </memberdef>
      <memberdef kind="function" id="lv__obj_8h_1ab224721bfc40f9fbedc291bccd84cbea" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void lv_obj_set_pos</definition>
        <argsstring>(lv_obj_t *obj, lv_coord_t x, lv_coord_t y)</argsstring>
        <name>lv_obj_set_pos</name>
        <param>
          <type><ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref> *</type>
          <declname>obj</declname>
        </param>
        <param>
          <type>lv_coord_t</type>
          <declname>x</declname>
        </param>
        <param>
          <type>lv_coord_t</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set relative the position of an object (relative to the parent) <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>obj</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to an object </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>new distance from the left side of the parent </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>y</parametername>
</parameternamelist>
<parameterdescription>
<para>new distance from the top of the parent </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kisvegabor/projects/littlevgl/eclipse-workspace/lv_sim_eclipse_sdl/lvgl/scripts/release_tmp/lvgl/src/lv_core/lv_obj.h" line="393" column="1"/>
      </memberdef>
      <memberdef kind="function" id="lv__obj_8h_1abc849c766f9c18783e5ec600fa2b6874" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void lv_obj_set_x</definition>
        <argsstring>(lv_obj_t *obj, lv_coord_t x)</argsstring>
        <name>lv_obj_set_x</name>
        <param>
          <type><ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref> *</type>
          <declname>obj</declname>
        </param>
        <param>
          <type>lv_coord_t</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set the x coordinate of a object <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>obj</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to an object </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>new distance from the left side from the parent </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kisvegabor/projects/littlevgl/eclipse-workspace/lv_sim_eclipse_sdl/lvgl/scripts/release_tmp/lvgl/src/lv_core/lv_obj.h" line="400" column="1"/>
      </memberdef>
      <memberdef kind="function" id="lv__obj_8h_1a1993b15b44f347aeff5aa9f24e816eb2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void lv_obj_set_y</definition>
        <argsstring>(lv_obj_t *obj, lv_coord_t y)</argsstring>
        <name>lv_obj_set_y</name>
        <param>
          <type><ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref> *</type>
          <declname>obj</declname>
        </param>
        <param>
          <type>lv_coord_t</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set the y coordinate of a object <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>obj</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to an object </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>y</parametername>
</parameternamelist>
<parameterdescription>
<para>new distance from the top of the parent </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kisvegabor/projects/littlevgl/eclipse-workspace/lv_sim_eclipse_sdl/lvgl/scripts/release_tmp/lvgl/src/lv_core/lv_obj.h" line="407" column="1"/>
      </memberdef>
      <memberdef kind="function" id="lv__obj_8h_1abcc5ebd0d1bda82435697baeeb58048d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void lv_obj_set_size</definition>
        <argsstring>(lv_obj_t *obj, lv_coord_t w, lv_coord_t h)</argsstring>
        <name>lv_obj_set_size</name>
        <param>
          <type><ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref> *</type>
          <declname>obj</declname>
        </param>
        <param>
          <type>lv_coord_t</type>
          <declname>w</declname>
        </param>
        <param>
          <type>lv_coord_t</type>
          <declname>h</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set the size of an object <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>obj</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to an object </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>w</parametername>
</parameternamelist>
<parameterdescription>
<para>new width </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>h</parametername>
</parameternamelist>
<parameterdescription>
<para>new height </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kisvegabor/projects/littlevgl/eclipse-workspace/lv_sim_eclipse_sdl/lvgl/scripts/release_tmp/lvgl/src/lv_core/lv_obj.h" line="415" column="1"/>
      </memberdef>
      <memberdef kind="function" id="lv__obj_8h_1a63d809001264dd8510fa9fe0f9aaced3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void lv_obj_set_width</definition>
        <argsstring>(lv_obj_t *obj, lv_coord_t w)</argsstring>
        <name>lv_obj_set_width</name>
        <param>
          <type><ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref> *</type>
          <declname>obj</declname>
        </param>
        <param>
          <type>lv_coord_t</type>
          <declname>w</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set the width of an object <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>obj</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to an object </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>w</parametername>
</parameternamelist>
<parameterdescription>
<para>new width </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kisvegabor/projects/littlevgl/eclipse-workspace/lv_sim_eclipse_sdl/lvgl/scripts/release_tmp/lvgl/src/lv_core/lv_obj.h" line="422" column="1"/>
      </memberdef>
      <memberdef kind="function" id="lv__obj_8h_1a0d3e5fba894449938df0b10c9f442537" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void lv_obj_set_height</definition>
        <argsstring>(lv_obj_t *obj, lv_coord_t h)</argsstring>
        <name>lv_obj_set_height</name>
        <param>
          <type><ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref> *</type>
          <declname>obj</declname>
        </param>
        <param>
          <type>lv_coord_t</type>
          <declname>h</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set the height of an object <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>obj</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to an object </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>h</parametername>
</parameternamelist>
<parameterdescription>
<para>new height </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kisvegabor/projects/littlevgl/eclipse-workspace/lv_sim_eclipse_sdl/lvgl/scripts/release_tmp/lvgl/src/lv_core/lv_obj.h" line="429" column="1"/>
      </memberdef>
      <memberdef kind="function" id="lv__obj_8h_1aafe18d3222556637c7ddf6a6a55ffd31" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void lv_obj_set_width_fit</definition>
        <argsstring>(lv_obj_t *obj, lv_coord_t w)</argsstring>
        <name>lv_obj_set_width_fit</name>
        <param>
          <type><ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref> *</type>
          <declname>obj</declname>
        </param>
        <param>
          <type>lv_coord_t</type>
          <declname>w</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set the width reduced by the left and right padding. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>obj</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to an object </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>w</parametername>
</parameternamelist>
<parameterdescription>
<para>the width without paddings </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kisvegabor/projects/littlevgl/eclipse-workspace/lv_sim_eclipse_sdl/lvgl/scripts/release_tmp/lvgl/src/lv_core/lv_obj.h" line="436" column="1"/>
      </memberdef>
      <memberdef kind="function" id="lv__obj_8h_1a6f3b1b3685753caff70160b57b4dcdf1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void lv_obj_set_height_fit</definition>
        <argsstring>(lv_obj_t *obj, lv_coord_t h)</argsstring>
        <name>lv_obj_set_height_fit</name>
        <param>
          <type><ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref> *</type>
          <declname>obj</declname>
        </param>
        <param>
          <type>lv_coord_t</type>
          <declname>h</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set the height reduced by the top and bottom padding. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>obj</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to an object </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>h</parametername>
</parameternamelist>
<parameterdescription>
<para>the height without paddings </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kisvegabor/projects/littlevgl/eclipse-workspace/lv_sim_eclipse_sdl/lvgl/scripts/release_tmp/lvgl/src/lv_core/lv_obj.h" line="443" column="1"/>
      </memberdef>
      <memberdef kind="function" id="lv__obj_8h_1a0e6dfd44bfe3d9719a7b78f59ca3d271" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void lv_obj_set_width_margin</definition>
        <argsstring>(lv_obj_t *obj, lv_coord_t w)</argsstring>
        <name>lv_obj_set_width_margin</name>
        <param>
          <type><ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref> *</type>
          <declname>obj</declname>
        </param>
        <param>
          <type>lv_coord_t</type>
          <declname>w</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set the width of an object by taking the left and right margin into account. The object width will be <computeroutput>obj_w = w - margin_left - margin_right</computeroutput> <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>obj</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to an object </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>w</parametername>
</parameternamelist>
<parameterdescription>
<para>new height including margins </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kisvegabor/projects/littlevgl/eclipse-workspace/lv_sim_eclipse_sdl/lvgl/scripts/release_tmp/lvgl/src/lv_core/lv_obj.h" line="451" column="1"/>
      </memberdef>
      <memberdef kind="function" id="lv__obj_8h_1a4a97585db792c2308eb1441153104053" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void lv_obj_set_height_margin</definition>
        <argsstring>(lv_obj_t *obj, lv_coord_t h)</argsstring>
        <name>lv_obj_set_height_margin</name>
        <param>
          <type><ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref> *</type>
          <declname>obj</declname>
        </param>
        <param>
          <type>lv_coord_t</type>
          <declname>h</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set the height of an object by taking the top and bottom margin into account. The object height will be <computeroutput>obj_h = h - margin_top - margin_bottom</computeroutput> <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>obj</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to an object </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>h</parametername>
</parameternamelist>
<parameterdescription>
<para>new height including margins </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kisvegabor/projects/littlevgl/eclipse-workspace/lv_sim_eclipse_sdl/lvgl/scripts/release_tmp/lvgl/src/lv_core/lv_obj.h" line="459" column="1"/>
      </memberdef>
      <memberdef kind="function" id="lv__obj_8h_1a85f41473c55cd51c1fd364ea613e14ee" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void lv_obj_align</definition>
        <argsstring>(lv_obj_t *obj, const lv_obj_t *base, lv_align_t align, lv_coord_t x_ofs, lv_coord_t y_ofs)</argsstring>
        <name>lv_obj_align</name>
        <param>
          <type><ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref> *</type>
          <declname>obj</declname>
        </param>
        <param>
          <type>const <ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref> *</type>
          <declname>base</declname>
        </param>
        <param>
          <type>lv_align_t</type>
          <declname>align</declname>
        </param>
        <param>
          <type>lv_coord_t</type>
          <declname>x_ofs</declname>
        </param>
        <param>
          <type>lv_coord_t</type>
          <declname>y_ofs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Align an object to an other object. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>obj</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to an object to align </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>base</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to an object (if NULL the parent is used). &apos;obj&apos; will be aligned to it. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>align</parametername>
</parameternamelist>
<parameterdescription>
<para>type of alignment (see &apos;lv_align_t&apos; enum) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>x_ofs</parametername>
</parameternamelist>
<parameterdescription>
<para>x coordinate offset after alignment </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>y_ofs</parametername>
</parameternamelist>
<parameterdescription>
<para>y coordinate offset after alignment </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kisvegabor/projects/littlevgl/eclipse-workspace/lv_sim_eclipse_sdl/lvgl/scripts/release_tmp/lvgl/src/lv_core/lv_obj.h" line="469" column="1"/>
      </memberdef>
      <memberdef kind="function" id="lv__obj_8h_1a2073a440aced3d36e8d240cb5344ef46" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void lv_obj_align_x</definition>
        <argsstring>(lv_obj_t *obj, const lv_obj_t *base, lv_align_t align, lv_coord_t x_ofs)</argsstring>
        <name>lv_obj_align_x</name>
        <param>
          <type><ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref> *</type>
          <declname>obj</declname>
        </param>
        <param>
          <type>const <ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref> *</type>
          <declname>base</declname>
        </param>
        <param>
          <type>lv_align_t</type>
          <declname>align</declname>
        </param>
        <param>
          <type>lv_coord_t</type>
          <declname>x_ofs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Align an object to an other object horizontally. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>obj</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to an object to align </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>base</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to an object (if NULL the parent is used). &apos;obj&apos; will be aligned to it. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>align</parametername>
</parameternamelist>
<parameterdescription>
<para>type of alignment (see &apos;lv_align_t&apos; enum) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>x_ofs</parametername>
</parameternamelist>
<parameterdescription>
<para>x coordinate offset after alignment </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kisvegabor/projects/littlevgl/eclipse-workspace/lv_sim_eclipse_sdl/lvgl/scripts/release_tmp/lvgl/src/lv_core/lv_obj.h" line="478" column="1"/>
      </memberdef>
      <memberdef kind="function" id="lv__obj_8h_1acf3b4c522565c4ded39a1430b43451e0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void lv_obj_align_y</definition>
        <argsstring>(lv_obj_t *obj, const lv_obj_t *base, lv_align_t align, lv_coord_t y_ofs)</argsstring>
        <name>lv_obj_align_y</name>
        <param>
          <type><ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref> *</type>
          <declname>obj</declname>
        </param>
        <param>
          <type>const <ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref> *</type>
          <declname>base</declname>
        </param>
        <param>
          <type>lv_align_t</type>
          <declname>align</declname>
        </param>
        <param>
          <type>lv_coord_t</type>
          <declname>y_ofs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Align an object to an other object vertically. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>obj</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to an object to align </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>base</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to an object (if NULL the parent is used). &apos;obj&apos; will be aligned to it. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>align</parametername>
</parameternamelist>
<parameterdescription>
<para>type of alignment (see &apos;lv_align_t&apos; enum) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>y_ofs</parametername>
</parameternamelist>
<parameterdescription>
<para>y coordinate offset after alignment </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kisvegabor/projects/littlevgl/eclipse-workspace/lv_sim_eclipse_sdl/lvgl/scripts/release_tmp/lvgl/src/lv_core/lv_obj.h" line="487" column="1"/>
      </memberdef>
      <memberdef kind="function" id="lv__obj_8h_1a874cb49ee02168b9a447ea3b3ed34251" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void lv_obj_align_mid</definition>
        <argsstring>(lv_obj_t *obj, const lv_obj_t *base, lv_align_t align, lv_coord_t x_ofs, lv_coord_t y_ofs)</argsstring>
        <name>lv_obj_align_mid</name>
        <param>
          <type><ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref> *</type>
          <declname>obj</declname>
        </param>
        <param>
          <type>const <ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref> *</type>
          <declname>base</declname>
        </param>
        <param>
          <type>lv_align_t</type>
          <declname>align</declname>
        </param>
        <param>
          <type>lv_coord_t</type>
          <declname>x_ofs</declname>
        </param>
        <param>
          <type>lv_coord_t</type>
          <declname>y_ofs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Align an object to an other object. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>obj</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to an object to align </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>base</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to an object (if NULL the parent is used). &apos;obj&apos; will be aligned to it. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>align</parametername>
</parameternamelist>
<parameterdescription>
<para>type of alignment (see &apos;lv_align_t&apos; enum) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>x_ofs</parametername>
</parameternamelist>
<parameterdescription>
<para>x coordinate offset after alignment </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>y_ofs</parametername>
</parameternamelist>
<parameterdescription>
<para>y coordinate offset after alignment </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kisvegabor/projects/littlevgl/eclipse-workspace/lv_sim_eclipse_sdl/lvgl/scripts/release_tmp/lvgl/src/lv_core/lv_obj.h" line="497" column="1"/>
      </memberdef>
      <memberdef kind="function" id="lv__obj_8h_1a6970bc3b4fe3f9604b7c7a0bc4a12664" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void lv_obj_align_mid_x</definition>
        <argsstring>(lv_obj_t *obj, const lv_obj_t *base, lv_align_t align, lv_coord_t x_ofs)</argsstring>
        <name>lv_obj_align_mid_x</name>
        <param>
          <type><ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref> *</type>
          <declname>obj</declname>
        </param>
        <param>
          <type>const <ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref> *</type>
          <declname>base</declname>
        </param>
        <param>
          <type>lv_align_t</type>
          <declname>align</declname>
        </param>
        <param>
          <type>lv_coord_t</type>
          <declname>x_ofs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Align an object&apos;s middle point to an other object horizontally. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>obj</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to an object to align </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>base</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to an object (if NULL the parent is used). &apos;obj&apos; will be aligned to it. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>align</parametername>
</parameternamelist>
<parameterdescription>
<para>type of alignment (see &apos;lv_align_t&apos; enum) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>x_ofs</parametername>
</parameternamelist>
<parameterdescription>
<para>x coordinate offset after alignment </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kisvegabor/projects/littlevgl/eclipse-workspace/lv_sim_eclipse_sdl/lvgl/scripts/release_tmp/lvgl/src/lv_core/lv_obj.h" line="507" column="1"/>
      </memberdef>
      <memberdef kind="function" id="lv__obj_8h_1a014bc13287f2a817e8912d483be5c5cb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void lv_obj_align_mid_y</definition>
        <argsstring>(lv_obj_t *obj, const lv_obj_t *base, lv_align_t align, lv_coord_t y_ofs)</argsstring>
        <name>lv_obj_align_mid_y</name>
        <param>
          <type><ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref> *</type>
          <declname>obj</declname>
        </param>
        <param>
          <type>const <ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref> *</type>
          <declname>base</declname>
        </param>
        <param>
          <type>lv_align_t</type>
          <declname>align</declname>
        </param>
        <param>
          <type>lv_coord_t</type>
          <declname>y_ofs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Align an object&apos;s middle point to an other object vertically. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>obj</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to an object to align </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>base</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to an object (if NULL the parent is used). &apos;obj&apos; will be aligned to it. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>align</parametername>
</parameternamelist>
<parameterdescription>
<para>type of alignment (see &apos;lv_align_t&apos; enum) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>y_ofs</parametername>
</parameternamelist>
<parameterdescription>
<para>y coordinate offset after alignment </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kisvegabor/projects/littlevgl/eclipse-workspace/lv_sim_eclipse_sdl/lvgl/scripts/release_tmp/lvgl/src/lv_core/lv_obj.h" line="516" column="1"/>
      </memberdef>
      <memberdef kind="function" id="lv__obj_8h_1afd4a4d1b1733db6877bbcc088331f90d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void lv_obj_realign</definition>
        <argsstring>(lv_obj_t *obj)</argsstring>
        <name>lv_obj_realign</name>
        <param>
          <type><ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref> *</type>
          <declname>obj</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Realign the object based on the last <computeroutput>lv_obj_align</computeroutput> parameters. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>obj</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to an object </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kisvegabor/projects/littlevgl/eclipse-workspace/lv_sim_eclipse_sdl/lvgl/scripts/release_tmp/lvgl/src/lv_core/lv_obj.h" line="522" column="1"/>
      </memberdef>
      <memberdef kind="function" id="lv__obj_8h_1a3df59c38faba6b47461f23269b43bb38" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void lv_obj_set_auto_realign</definition>
        <argsstring>(lv_obj_t *obj, bool en)</argsstring>
        <name>lv_obj_set_auto_realign</name>
        <param>
          <type><ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref> *</type>
          <declname>obj</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>en</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Enable the automatic realign of the object when its size has changed based on the last <computeroutput>lv_obj_align</computeroutput> parameters. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>obj</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to an object </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>en</parametername>
</parameternamelist>
<parameterdescription>
<para>true: enable auto realign; false: disable auto realign </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kisvegabor/projects/littlevgl/eclipse-workspace/lv_sim_eclipse_sdl/lvgl/scripts/release_tmp/lvgl/src/lv_core/lv_obj.h" line="530" column="1"/>
      </memberdef>
      <memberdef kind="function" id="lv__obj_8h_1aec7e167060da1cfe2fcf9fd796c57a06" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void lv_obj_set_ext_click_area</definition>
        <argsstring>(lv_obj_t *obj, lv_coord_t left, lv_coord_t right, lv_coord_t top, lv_coord_t bottom)</argsstring>
        <name>lv_obj_set_ext_click_area</name>
        <param>
          <type><ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref> *</type>
          <declname>obj</declname>
        </param>
        <param>
          <type>lv_coord_t</type>
          <declname>left</declname>
        </param>
        <param>
          <type>lv_coord_t</type>
          <declname>right</declname>
        </param>
        <param>
          <type>lv_coord_t</type>
          <declname>top</declname>
        </param>
        <param>
          <type>lv_coord_t</type>
          <declname>bottom</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set the size of an extended clickable area <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>obj</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to an object </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>left</parametername>
</parameternamelist>
<parameterdescription>
<para>extended clickable are on the left [px] </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>right</parametername>
</parameternamelist>
<parameterdescription>
<para>extended clickable are on the right [px] </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>top</parametername>
</parameternamelist>
<parameterdescription>
<para>extended clickable are on the top [px] </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>bottom</parametername>
</parameternamelist>
<parameterdescription>
<para>extended clickable are on the bottom [px] </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kisvegabor/projects/littlevgl/eclipse-workspace/lv_sim_eclipse_sdl/lvgl/scripts/release_tmp/lvgl/src/lv_core/lv_obj.h" line="540" column="1"/>
      </memberdef>
      <memberdef kind="function" id="lv__obj_8h_1a8aa4714bef3ab5ad4e4bf09f9c5bd72e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void lv_obj_add_style</definition>
        <argsstring>(lv_obj_t *obj, uint8_t part, lv_style_t *style)</argsstring>
        <name>lv_obj_add_style</name>
        <param>
          <type><ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref> *</type>
          <declname>obj</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>part</declname>
        </param>
        <param>
          <type><ref refid="structlv__style__t" kindref="compound">lv_style_t</ref> *</type>
          <declname>style</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Add a new style to the style list of an object. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>obj</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to an object </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>part</parametername>
</parameternamelist>
<parameterdescription>
<para>the part of the object which style property should be set. E.g. <computeroutput>LV_OBJ_PART_MAIN</computeroutput>, <computeroutput>LV_BTN_PART_MAIN</computeroutput>, <computeroutput>LV_SLIDER_PART_KNOB</computeroutput> </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>style</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to a style to add (Only its pointer will be saved) </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kisvegabor/projects/littlevgl/eclipse-workspace/lv_sim_eclipse_sdl/lvgl/scripts/release_tmp/lvgl/src/lv_core/lv_obj.h" line="553" column="1"/>
      </memberdef>
      <memberdef kind="function" id="lv__obj_8h_1a76fdca3d1b0b4b34afa33d45c1427486" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void lv_obj_remove_style</definition>
        <argsstring>(lv_obj_t *obj, uint8_t part, lv_style_t *style)</argsstring>
        <name>lv_obj_remove_style</name>
        <param>
          <type><ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref> *</type>
          <declname>obj</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>part</declname>
        </param>
        <param>
          <type><ref refid="structlv__style__t" kindref="compound">lv_style_t</ref> *</type>
          <declname>style</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Remove a style from the style list of an object. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>obj</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to an object </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>part</parametername>
</parameternamelist>
<parameterdescription>
<para>the part of the object which style property should be set. E.g. <computeroutput>LV_OBJ_PART_MAIN</computeroutput>, <computeroutput>LV_BTN_PART_MAIN</computeroutput>, <computeroutput>LV_SLIDER_PART_KNOB</computeroutput> </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>style</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to a style to remove </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kisvegabor/projects/littlevgl/eclipse-workspace/lv_sim_eclipse_sdl/lvgl/scripts/release_tmp/lvgl/src/lv_core/lv_obj.h" line="562" column="1"/>
      </memberdef>
      <memberdef kind="function" id="lv__obj_8h_1a9096fa270a44da04a99f589ce4ed1948" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void lv_obj_clean_style_list</definition>
        <argsstring>(lv_obj_t *obj, uint8_t part)</argsstring>
        <name>lv_obj_clean_style_list</name>
        <param>
          <type><ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref> *</type>
          <declname>obj</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>part</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Reset a style to the default (empty) state. Release all used memories and cancel pending related transitions. Typically used in `LV_SIGN_CLEAN_UP. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>obj</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to an object </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>part</parametername>
</parameternamelist>
<parameterdescription>
<para>the part of the object which style list should be reseted. E.g. <computeroutput>LV_OBJ_PART_MAIN</computeroutput>, <computeroutput>LV_BTN_PART_MAIN</computeroutput>, <computeroutput>LV_SLIDER_PART_KNOB</computeroutput> </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kisvegabor/projects/littlevgl/eclipse-workspace/lv_sim_eclipse_sdl/lvgl/scripts/release_tmp/lvgl/src/lv_core/lv_obj.h" line="572" column="1"/>
      </memberdef>
      <memberdef kind="function" id="lv__obj_8h_1a76ea9cd9d4bf925cd9f8eec08b4a458b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void lv_obj_reset_style_list</definition>
        <argsstring>(lv_obj_t *obj, uint8_t part)</argsstring>
        <name>lv_obj_reset_style_list</name>
        <param>
          <type><ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref> *</type>
          <declname>obj</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>part</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Reset a style to the default (empty) state. Release all used memories and cancel pending related transitions. Also notifies the object about the style change. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>obj</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to an object </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>part</parametername>
</parameternamelist>
<parameterdescription>
<para>the part of the object which style list should be reseted. E.g. <computeroutput>LV_OBJ_PART_MAIN</computeroutput>, <computeroutput>LV_BTN_PART_MAIN</computeroutput>, <computeroutput>LV_SLIDER_PART_KNOB</computeroutput> </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kisvegabor/projects/littlevgl/eclipse-workspace/lv_sim_eclipse_sdl/lvgl/scripts/release_tmp/lvgl/src/lv_core/lv_obj.h" line="582" column="1"/>
      </memberdef>
      <memberdef kind="function" id="lv__obj_8h_1aa991e84b0c4929e21ab6101040b45693" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void lv_obj_refresh_style</definition>
        <argsstring>(lv_obj_t *obj, lv_style_property_t prop)</argsstring>
        <name>lv_obj_refresh_style</name>
        <param>
          <type><ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref> *</type>
          <declname>obj</declname>
        </param>
        <param>
          <type>lv_style_property_t</type>
          <declname>prop</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Notify an object (and its children) about its style is modified <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>obj</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to an object </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>prop</parametername>
</parameternamelist>
<parameterdescription>
<para><computeroutput>LV_STYLE_PROP_ALL</computeroutput> or an <computeroutput>LV_STYLE_...</computeroutput> property. It is used to optimize what needs to be refreshed. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kisvegabor/projects/littlevgl/eclipse-workspace/lv_sim_eclipse_sdl/lvgl/scripts/release_tmp/lvgl/src/lv_core/lv_obj.h" line="589" column="1"/>
      </memberdef>
      <memberdef kind="function" id="lv__obj_8h_1a044811a51cd2c0488a4b99aeda66b362" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void lv_obj_report_style_mod</definition>
        <argsstring>(lv_style_t *style)</argsstring>
        <name>lv_obj_report_style_mod</name>
        <param>
          <type><ref refid="structlv__style__t" kindref="compound">lv_style_t</ref> *</type>
          <declname>style</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Notify all object if a style is modified <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>style</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to a style. Only the objects with this style will be notified (NULL to notify all objects) </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kisvegabor/projects/littlevgl/eclipse-workspace/lv_sim_eclipse_sdl/lvgl/scripts/release_tmp/lvgl/src/lv_core/lv_obj.h" line="596" column="1"/>
      </memberdef>
      <memberdef kind="function" id="lv__obj_8h_1a3c14968027b3b58e6f6599e4d69142bc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void _lv_obj_set_style_local_color</definition>
        <argsstring>(lv_obj_t *obj, uint8_t type, lv_style_property_t prop, lv_color_t color)</argsstring>
        <name>_lv_obj_set_style_local_color</name>
        <param>
          <type><ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref> *</type>
          <declname>obj</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>type</declname>
        </param>
        <param>
          <type>lv_style_property_t</type>
          <declname>prop</declname>
        </param>
        <param>
          <type><ref refid="unionlv__color1__t" kindref="compound">lv_color_t</ref></type>
          <declname>color</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set a local style property of a part of an object in a given state. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>obj</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to an object </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>part</parametername>
</parameternamelist>
<parameterdescription>
<para>the part of the object which style property should be set. E.g. <computeroutput>LV_OBJ_PART_MAIN</computeroutput>, <computeroutput>LV_BTN_PART_MAIN</computeroutput>, <computeroutput>LV_SLIDER_PART_KNOB</computeroutput> </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>prop</parametername>
</parameternamelist>
<parameterdescription>
<para>a style property ORed with a state. E.g. <computeroutput>LV_STYLE_BORDER_COLOR | (LV_STATE_PRESSED &lt;&lt; LV_STYLE_STATE_POS)</computeroutput> </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>the</parametername>
</parameternamelist>
<parameterdescription>
<para>value to set </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>shouldn&apos;t be used directly. Use the specific property get functions instead. For example: <computeroutput>lv_obj_style_get_border_opa()</computeroutput> </para></simplesect>
<simplesect kind="note"><para>for performance reasons it&apos;s not checked if the property really has color type </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kisvegabor/projects/littlevgl/eclipse-workspace/lv_sim_eclipse_sdl/lvgl/scripts/release_tmp/lvgl/src/lv_core/lv_obj.h" line="610" column="1"/>
      </memberdef>
      <memberdef kind="function" id="lv__obj_8h_1a27ecc91f1eac933b6d59d87813e8db87" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void _lv_obj_set_style_local_int</definition>
        <argsstring>(lv_obj_t *obj, uint8_t type, lv_style_property_t prop, lv_style_int_t value)</argsstring>
        <name>_lv_obj_set_style_local_int</name>
        <param>
          <type><ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref> *</type>
          <declname>obj</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>type</declname>
        </param>
        <param>
          <type>lv_style_property_t</type>
          <declname>prop</declname>
        </param>
        <param>
          <type>lv_style_int_t</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set a local style property of a part of an object in a given state. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>obj</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to an object </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>part</parametername>
</parameternamelist>
<parameterdescription>
<para>the part of the object which style property should be set. E.g. <computeroutput>LV_OBJ_PART_MAIN</computeroutput>, <computeroutput>LV_BTN_PART_MAIN</computeroutput>, <computeroutput>LV_SLIDER_PART_KNOB</computeroutput> </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>prop</parametername>
</parameternamelist>
<parameterdescription>
<para>a style property ORed with a state. E.g. <computeroutput>LV_STYLE_BORDER_WIDTH | (LV_STATE_PRESSED &lt;&lt; LV_STYLE_STATE_POS)</computeroutput> </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>the</parametername>
</parameternamelist>
<parameterdescription>
<para>value to set </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>shouldn&apos;t be used directly. Use the specific property get functions instead. For example: <computeroutput>lv_obj_style_get_border_opa()</computeroutput> </para></simplesect>
<simplesect kind="note"><para>for performance reasons it&apos;s not checked if the property really has integer type </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kisvegabor/projects/littlevgl/eclipse-workspace/lv_sim_eclipse_sdl/lvgl/scripts/release_tmp/lvgl/src/lv_core/lv_obj.h" line="624" column="1"/>
      </memberdef>
      <memberdef kind="function" id="lv__obj_8h_1a612f9bc6d48d74171528cc7f1db6dd57" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void _lv_obj_set_style_local_opa</definition>
        <argsstring>(lv_obj_t *obj, uint8_t type, lv_style_property_t prop, lv_opa_t opa)</argsstring>
        <name>_lv_obj_set_style_local_opa</name>
        <param>
          <type><ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref> *</type>
          <declname>obj</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>type</declname>
        </param>
        <param>
          <type>lv_style_property_t</type>
          <declname>prop</declname>
        </param>
        <param>
          <type>lv_opa_t</type>
          <declname>opa</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set a local style property of a part of an object in a given state. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>obj</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to an object </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>part</parametername>
</parameternamelist>
<parameterdescription>
<para>the part of the object which style property should be set. E.g. <computeroutput>LV_OBJ_PART_MAIN</computeroutput>, <computeroutput>LV_BTN_PART_MAIN</computeroutput>, <computeroutput>LV_SLIDER_PART_KNOB</computeroutput> </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>prop</parametername>
</parameternamelist>
<parameterdescription>
<para>a style property ORed with a state. E.g. <computeroutput>LV_STYLE_BORDER_OPA | (LV_STATE_PRESSED &lt;&lt; LV_STYLE_STATE_POS)</computeroutput> </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>the</parametername>
</parameternamelist>
<parameterdescription>
<para>value to set </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>shouldn&apos;t be used directly. Use the specific property get functions instead. For example: <computeroutput>lv_obj_style_get_border_opa()</computeroutput> </para></simplesect>
<simplesect kind="note"><para>for performance reasons it&apos;s not checked if the property really has opacity type </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kisvegabor/projects/littlevgl/eclipse-workspace/lv_sim_eclipse_sdl/lvgl/scripts/release_tmp/lvgl/src/lv_core/lv_obj.h" line="638" column="1"/>
      </memberdef>
      <memberdef kind="function" id="lv__obj_8h_1a52f071edacd378ad01b0b23963ef075f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void _lv_obj_set_style_local_ptr</definition>
        <argsstring>(lv_obj_t *obj, uint8_t type, lv_style_property_t prop, const void *value)</argsstring>
        <name>_lv_obj_set_style_local_ptr</name>
        <param>
          <type><ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref> *</type>
          <declname>obj</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>type</declname>
        </param>
        <param>
          <type>lv_style_property_t</type>
          <declname>prop</declname>
        </param>
        <param>
          <type>const void *</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set a local style property of a part of an object in a given state. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>obj</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to an object </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>part</parametername>
</parameternamelist>
<parameterdescription>
<para>the part of the object which style property should be set. E.g. <computeroutput>LV_OBJ_PART_MAIN</computeroutput>, <computeroutput>LV_BTN_PART_MAIN</computeroutput>, <computeroutput>LV_SLIDER_PART_KNOB</computeroutput> </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>prop</parametername>
</parameternamelist>
<parameterdescription>
<para>a style property ORed with a state. E.g. <computeroutput>LV_STYLE_TEXT_FONT | (LV_STATE_PRESSED &lt;&lt; LV_STYLE_STATE_POS)</computeroutput> </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>the</parametername>
</parameternamelist>
<parameterdescription>
<para>value to set </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>shouldn&apos;t be used directly. Use the specific property get functions instead. For example: <computeroutput>lv_obj_style_get_border_opa()</computeroutput> </para></simplesect>
<simplesect kind="note"><para>for performance reasons it&apos;s not checked if the property really has pointer type </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kisvegabor/projects/littlevgl/eclipse-workspace/lv_sim_eclipse_sdl/lvgl/scripts/release_tmp/lvgl/src/lv_core/lv_obj.h" line="652" column="1"/>
      </memberdef>
      <memberdef kind="function" id="lv__obj_8h_1a9a90382df125ebea968e1c0a4a8c1f37" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool lv_obj_remove_style_local_prop</definition>
        <argsstring>(lv_obj_t *obj, uint8_t part, lv_style_property_t prop)</argsstring>
        <name>lv_obj_remove_style_local_prop</name>
        <param>
          <type><ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref> *</type>
          <declname>obj</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>part</declname>
        </param>
        <param>
          <type>lv_style_property_t</type>
          <declname>prop</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Remove a local style property from a part of an object with a given state. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>obj</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to an object </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>part</parametername>
</parameternamelist>
<parameterdescription>
<para>the part of the object which style property should be removed. E.g. <computeroutput>LV_OBJ_PART_MAIN</computeroutput>, <computeroutput>LV_BTN_PART_MAIN</computeroutput>, <computeroutput>LV_SLIDER_PART_KNOB</computeroutput> </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>prop</parametername>
</parameternamelist>
<parameterdescription>
<para>a style property ORed with a state. E.g. <computeroutput>LV_STYLE_TEXT_FONT | (LV_STATE_PRESSED &lt;&lt; LV_STYLE_STATE_POS)</computeroutput> </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>shouldn&apos;t be used directly. Use the specific property remove functions instead. For example: <computeroutput>lv_obj_style_remove_border_opa()</computeroutput> </para></simplesect>
<simplesect kind="return"><para>true: the property was found and removed; false: the property was not found </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kisvegabor/projects/littlevgl/eclipse-workspace/lv_sim_eclipse_sdl/lvgl/scripts/release_tmp/lvgl/src/lv_core/lv_obj.h" line="665" column="1"/>
      </memberdef>
      <memberdef kind="function" id="lv__obj_8h_1a68d00213906652fd3ab84f2e7dd4f133" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void lv_obj_set_hidden</definition>
        <argsstring>(lv_obj_t *obj, bool en)</argsstring>
        <name>lv_obj_set_hidden</name>
        <param>
          <type><ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref> *</type>
          <declname>obj</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>en</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Hide an object. It won&apos;t be visible and clickable. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>obj</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to an object </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>en</parametername>
</parameternamelist>
<parameterdescription>
<para>true: hide the object </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kisvegabor/projects/littlevgl/eclipse-workspace/lv_sim_eclipse_sdl/lvgl/scripts/release_tmp/lvgl/src/lv_core/lv_obj.h" line="676" column="1"/>
      </memberdef>
      <memberdef kind="function" id="lv__obj_8h_1a7086b986efe320a892e0053912314007" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void lv_obj_set_adv_hittest</definition>
        <argsstring>(lv_obj_t *obj, bool en)</argsstring>
        <name>lv_obj_set_adv_hittest</name>
        <param>
          <type><ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref> *</type>
          <declname>obj</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>en</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set whether advanced hit-testing is enabled on an object <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>obj</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to an object </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>en</parametername>
</parameternamelist>
<parameterdescription>
<para>true: advanced hit-testing is enabled </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kisvegabor/projects/littlevgl/eclipse-workspace/lv_sim_eclipse_sdl/lvgl/scripts/release_tmp/lvgl/src/lv_core/lv_obj.h" line="683" column="1"/>
      </memberdef>
      <memberdef kind="function" id="lv__obj_8h_1a0c8cd5f39061009596025309672dae89" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void lv_obj_set_click</definition>
        <argsstring>(lv_obj_t *obj, bool en)</argsstring>
        <name>lv_obj_set_click</name>
        <param>
          <type><ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref> *</type>
          <declname>obj</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>en</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Enable or disable the clicking of an object <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>obj</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to an object </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>en</parametername>
</parameternamelist>
<parameterdescription>
<para>true: make the object clickable </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kisvegabor/projects/littlevgl/eclipse-workspace/lv_sim_eclipse_sdl/lvgl/scripts/release_tmp/lvgl/src/lv_core/lv_obj.h" line="690" column="1"/>
      </memberdef>
      <memberdef kind="function" id="lv__obj_8h_1af7857ca4d8ac1e8183f5d5f0f1d0ba33" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void lv_obj_set_top</definition>
        <argsstring>(lv_obj_t *obj, bool en)</argsstring>
        <name>lv_obj_set_top</name>
        <param>
          <type><ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref> *</type>
          <declname>obj</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>en</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Enable to bring this object to the foreground if it or any of its children is clicked <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>obj</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to an object </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>en</parametername>
</parameternamelist>
<parameterdescription>
<para>true: enable the auto top feature </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kisvegabor/projects/littlevgl/eclipse-workspace/lv_sim_eclipse_sdl/lvgl/scripts/release_tmp/lvgl/src/lv_core/lv_obj.h" line="698" column="1"/>
      </memberdef>
      <memberdef kind="function" id="lv__obj_8h_1a696adcf79f6d66da07fdae2cd30bc9d2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void lv_obj_set_drag</definition>
        <argsstring>(lv_obj_t *obj, bool en)</argsstring>
        <name>lv_obj_set_drag</name>
        <param>
          <type><ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref> *</type>
          <declname>obj</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>en</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Enable the dragging of an object <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>obj</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to an object </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>en</parametername>
</parameternamelist>
<parameterdescription>
<para>true: make the object draggable </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kisvegabor/projects/littlevgl/eclipse-workspace/lv_sim_eclipse_sdl/lvgl/scripts/release_tmp/lvgl/src/lv_core/lv_obj.h" line="705" column="1"/>
      </memberdef>
      <memberdef kind="function" id="lv__obj_8h_1a58a943c6984048224bbb9771b7824b8f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void lv_obj_set_drag_dir</definition>
        <argsstring>(lv_obj_t *obj, lv_drag_dir_t drag_dir)</argsstring>
        <name>lv_obj_set_drag_dir</name>
        <param>
          <type><ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref> *</type>
          <declname>obj</declname>
        </param>
        <param>
          <type>lv_drag_dir_t</type>
          <declname>drag_dir</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set the directions an object can be dragged in <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>obj</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to an object </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>drag_dir</parametername>
</parameternamelist>
<parameterdescription>
<para>bitwise OR of allowed drag directions </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kisvegabor/projects/littlevgl/eclipse-workspace/lv_sim_eclipse_sdl/lvgl/scripts/release_tmp/lvgl/src/lv_core/lv_obj.h" line="712" column="1"/>
      </memberdef>
      <memberdef kind="function" id="lv__obj_8h_1afcc8485737f799ba463194226f5d58fc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void lv_obj_set_drag_throw</definition>
        <argsstring>(lv_obj_t *obj, bool en)</argsstring>
        <name>lv_obj_set_drag_throw</name>
        <param>
          <type><ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref> *</type>
          <declname>obj</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>en</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Enable the throwing of an object after is is dragged <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>obj</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to an object </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>en</parametername>
</parameternamelist>
<parameterdescription>
<para>true: enable the drag throw </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kisvegabor/projects/littlevgl/eclipse-workspace/lv_sim_eclipse_sdl/lvgl/scripts/release_tmp/lvgl/src/lv_core/lv_obj.h" line="719" column="1"/>
      </memberdef>
      <memberdef kind="function" id="lv__obj_8h_1a542be047fdc3ac17cf2c319bcb4dfdb9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void lv_obj_set_drag_parent</definition>
        <argsstring>(lv_obj_t *obj, bool en)</argsstring>
        <name>lv_obj_set_drag_parent</name>
        <param>
          <type><ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref> *</type>
          <declname>obj</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>en</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Enable to use parent for drag related operations. If trying to drag the object the parent will be moved instead <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>obj</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to an object </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>en</parametername>
</parameternamelist>
<parameterdescription>
<para>true: enable the &apos;drag parent&apos; for the object </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kisvegabor/projects/littlevgl/eclipse-workspace/lv_sim_eclipse_sdl/lvgl/scripts/release_tmp/lvgl/src/lv_core/lv_obj.h" line="727" column="1"/>
      </memberdef>
      <memberdef kind="function" id="lv__obj_8h_1a86ca9d8cb0d85950ea4d3183b317b33b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void lv_obj_set_focus_parent</definition>
        <argsstring>(lv_obj_t *obj, bool en)</argsstring>
        <name>lv_obj_set_focus_parent</name>
        <param>
          <type><ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref> *</type>
          <declname>obj</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>en</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Enable to use parent for focus state. When object is focused the parent will get the state instead (visual only) <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>obj</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to an object </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>en</parametername>
</parameternamelist>
<parameterdescription>
<para>true: enable the &apos;focus parent&apos; for the object </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kisvegabor/projects/littlevgl/eclipse-workspace/lv_sim_eclipse_sdl/lvgl/scripts/release_tmp/lvgl/src/lv_core/lv_obj.h" line="735" column="1"/>
      </memberdef>
      <memberdef kind="function" id="lv__obj_8h_1a5a5a282047ee517d06a1388e7d1700f0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void lv_obj_set_gesture_parent</definition>
        <argsstring>(lv_obj_t *obj, bool en)</argsstring>
        <name>lv_obj_set_gesture_parent</name>
        <param>
          <type><ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref> *</type>
          <declname>obj</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>en</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Enable to use parent for gesture related operations. If trying to gesture the object the parent will be moved instead <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>obj</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to an object </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>en</parametername>
</parameternamelist>
<parameterdescription>
<para>true: enable the &apos;gesture parent&apos; for the object </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kisvegabor/projects/littlevgl/eclipse-workspace/lv_sim_eclipse_sdl/lvgl/scripts/release_tmp/lvgl/src/lv_core/lv_obj.h" line="743" column="1"/>
      </memberdef>
      <memberdef kind="function" id="lv__obj_8h_1af56bad14914d3fdb5d242d3883ce491c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void lv_obj_set_parent_event</definition>
        <argsstring>(lv_obj_t *obj, bool en)</argsstring>
        <name>lv_obj_set_parent_event</name>
        <param>
          <type><ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref> *</type>
          <declname>obj</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>en</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Propagate the events to the parent too <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>obj</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to an object </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>en</parametername>
</parameternamelist>
<parameterdescription>
<para>true: enable the event propagation </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kisvegabor/projects/littlevgl/eclipse-workspace/lv_sim_eclipse_sdl/lvgl/scripts/release_tmp/lvgl/src/lv_core/lv_obj.h" line="750" column="1"/>
      </memberdef>
      <memberdef kind="function" id="lv__obj_8h_1a6a086ccdbb96cabcae1f185225215f61" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void lv_obj_set_base_dir</definition>
        <argsstring>(lv_obj_t *obj, lv_bidi_dir_t dir)</argsstring>
        <name>lv_obj_set_base_dir</name>
        <param>
          <type><ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref> *</type>
          <declname>obj</declname>
        </param>
        <param>
          <type>lv_bidi_dir_t</type>
          <declname>dir</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set the base direction of the object <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>obj</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to an object </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dir</parametername>
</parameternamelist>
<parameterdescription>
<para>the new base direction. <computeroutput>LV_BIDI_DIR_LTR/RTL/AUTO/INHERIT</computeroutput> </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kisvegabor/projects/littlevgl/eclipse-workspace/lv_sim_eclipse_sdl/lvgl/scripts/release_tmp/lvgl/src/lv_core/lv_obj.h" line="757" column="1"/>
      </memberdef>
      <memberdef kind="function" id="lv__obj_8h_1acbdf986364d8a59ab4b5bfd014888f6e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void lv_obj_add_protect</definition>
        <argsstring>(lv_obj_t *obj, uint8_t prot)</argsstring>
        <name>lv_obj_add_protect</name>
        <param>
          <type><ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref> *</type>
          <declname>obj</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>prot</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set a bit or bits in the protect filed <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>obj</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to an object </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>prot</parametername>
</parameternamelist>
<parameterdescription>
<para>&apos;OR&apos;-ed values from <computeroutput>lv_protect_t</computeroutput> </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kisvegabor/projects/littlevgl/eclipse-workspace/lv_sim_eclipse_sdl/lvgl/scripts/release_tmp/lvgl/src/lv_core/lv_obj.h" line="764" column="1"/>
      </memberdef>
      <memberdef kind="function" id="lv__obj_8h_1a3b359e8f898fd2c8b8d1ab0c07919e15" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void lv_obj_clear_protect</definition>
        <argsstring>(lv_obj_t *obj, uint8_t prot)</argsstring>
        <name>lv_obj_clear_protect</name>
        <param>
          <type><ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref> *</type>
          <declname>obj</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>prot</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Clear a bit or bits in the protect filed <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>obj</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to an object </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>prot</parametername>
</parameternamelist>
<parameterdescription>
<para>&apos;OR&apos;-ed values from <computeroutput>lv_protect_t</computeroutput> </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kisvegabor/projects/littlevgl/eclipse-workspace/lv_sim_eclipse_sdl/lvgl/scripts/release_tmp/lvgl/src/lv_core/lv_obj.h" line="771" column="1"/>
      </memberdef>
      <memberdef kind="function" id="lv__obj_8h_1ace09574c4d1321eb3d0901052bda1231" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void lv_obj_set_state</definition>
        <argsstring>(lv_obj_t *obj, lv_state_t state)</argsstring>
        <name>lv_obj_set_state</name>
        <param>
          <type><ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref> *</type>
          <declname>obj</declname>
        </param>
        <param>
          <type>lv_state_t</type>
          <declname>state</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set the state (fully overwrite) of an object. If specified in the styles a transition animation will be started from the previous state to the current <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>obj</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to an object </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>state</parametername>
</parameternamelist>
<parameterdescription>
<para>the new state </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kisvegabor/projects/littlevgl/eclipse-workspace/lv_sim_eclipse_sdl/lvgl/scripts/release_tmp/lvgl/src/lv_core/lv_obj.h" line="780" column="1"/>
      </memberdef>
      <memberdef kind="function" id="lv__obj_8h_1adbd258635d3d653e5446336764044db1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void lv_obj_add_state</definition>
        <argsstring>(lv_obj_t *obj, lv_state_t state)</argsstring>
        <name>lv_obj_add_state</name>
        <param>
          <type><ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref> *</type>
          <declname>obj</declname>
        </param>
        <param>
          <type>lv_state_t</type>
          <declname>state</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Add a given state or states to the object. The other state bits will remain unchanged. If specified in the styles a transition animation will be started from the previous state to the current <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>obj</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to an object </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>state</parametername>
</parameternamelist>
<parameterdescription>
<para>the state bits to add. E.g <computeroutput>LV_STATE_PRESSED | LV_STATE_FOCUSED</computeroutput> </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kisvegabor/projects/littlevgl/eclipse-workspace/lv_sim_eclipse_sdl/lvgl/scripts/release_tmp/lvgl/src/lv_core/lv_obj.h" line="789" column="1"/>
      </memberdef>
      <memberdef kind="function" id="lv__obj_8h_1ac94c26d36140c7c83da6914d60170e16" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void lv_obj_clear_state</definition>
        <argsstring>(lv_obj_t *obj, lv_state_t state)</argsstring>
        <name>lv_obj_clear_state</name>
        <param>
          <type><ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref> *</type>
          <declname>obj</declname>
        </param>
        <param>
          <type>lv_state_t</type>
          <declname>state</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Remove a given state or states to the object. The other state bits will remain unchanged. If specified in the styles a transition animation will be started from the previous state to the current <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>obj</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to an object </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>state</parametername>
</parameternamelist>
<parameterdescription>
<para>the state bits to remove. E.g <computeroutput>LV_STATE_PRESSED | LV_STATE_FOCUSED</computeroutput> </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kisvegabor/projects/littlevgl/eclipse-workspace/lv_sim_eclipse_sdl/lvgl/scripts/release_tmp/lvgl/src/lv_core/lv_obj.h" line="798" column="1"/>
      </memberdef>
      <memberdef kind="function" id="lv__obj_8h_1ab9eff15aab87284d8a0e7f217aa90e8b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void lv_obj_finish_transitions</definition>
        <argsstring>(lv_obj_t *obj, uint8_t part)</argsstring>
        <name>lv_obj_finish_transitions</name>
        <param>
          <type><ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref> *</type>
          <declname>obj</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>part</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Finish all pending transitions on a part of an object <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>obj</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to an object </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>part</parametername>
</parameternamelist>
<parameterdescription>
<para>part of the object, e.g <computeroutput>LV_BRN_PART_MAIN</computeroutput> or <computeroutput>LV_OBJ_PART_ALL</computeroutput> for all parts </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kisvegabor/projects/littlevgl/eclipse-workspace/lv_sim_eclipse_sdl/lvgl/scripts/release_tmp/lvgl/src/lv_core/lv_obj.h" line="806" column="1"/>
      </memberdef>
      <memberdef kind="function" id="lv__obj_8h_1a16c2f9020fcde51036b3e319b6217203" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void lv_obj_set_event_cb</definition>
        <argsstring>(lv_obj_t *obj, lv_event_cb_t event_cb)</argsstring>
        <name>lv_obj_set_event_cb</name>
        <param>
          <type><ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref> *</type>
          <declname>obj</declname>
        </param>
        <param>
          <type><ref refid="lv__obj_8h_1a9366c6b8b950ee09075cdfe83105a81f" kindref="member">lv_event_cb_t</ref></type>
          <declname>event_cb</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set a an event handler function for an object. Used by the user to react on event which happens with the object. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>obj</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to an object </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>event_cb</parametername>
</parameternamelist>
<parameterdescription>
<para>the new event function </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kisvegabor/projects/littlevgl/eclipse-workspace/lv_sim_eclipse_sdl/lvgl/scripts/release_tmp/lvgl/src/lv_core/lv_obj.h" line="815" column="1"/>
      </memberdef>
      <memberdef kind="function" id="lv__obj_8h_1acc3d57f4139c996ffb8d9f4550c2b820" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>lv_res_t</type>
        <definition>lv_res_t lv_event_send</definition>
        <argsstring>(lv_obj_t *obj, lv_event_t event, const void *data)</argsstring>
        <name>lv_event_send</name>
        <param>
          <type><ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref> *</type>
          <declname>obj</declname>
        </param>
        <param>
          <type><ref refid="lv__obj_8h_1a81567353752c588831ed89a3b15b4ca0" kindref="member">lv_event_t</ref></type>
          <declname>event</declname>
        </param>
        <param>
          <type>const void *</type>
          <declname>data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Send an event to the object <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>obj</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to an object </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>event</parametername>
</parameternamelist>
<parameterdescription>
<para>the type of the event from <computeroutput>lv_event_t</computeroutput>. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>arbitrary data depending on the object type and the event. (Usually <computeroutput>NULL</computeroutput>) </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>LV_RES_OK: <computeroutput>obj</computeroutput> was not deleted in the event; LV_RES_INV: <computeroutput>obj</computeroutput> was deleted in the event </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kisvegabor/projects/littlevgl/eclipse-workspace/lv_sim_eclipse_sdl/lvgl/scripts/release_tmp/lvgl/src/lv_core/lv_obj.h" line="824" column="1"/>
      </memberdef>
      <memberdef kind="function" id="lv__obj_8h_1aadf4603503bc7bd0cb565125f2b9ef08" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>lv_res_t</type>
        <definition>lv_res_t lv_event_send_refresh</definition>
        <argsstring>(lv_obj_t *obj)</argsstring>
        <name>lv_event_send_refresh</name>
        <param>
          <type><ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref> *</type>
          <declname>obj</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Send LV_EVENT_REFRESH event to an object <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>obj</parametername>
</parameternamelist>
<parameterdescription>
<para>point to an obejct. (Can NOT be NULL) </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>LV_RES_OK: success, LV_RES_INV: to object become invalid (e.g. deleted) due to this event. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kisvegabor/projects/littlevgl/eclipse-workspace/lv_sim_eclipse_sdl/lvgl/scripts/release_tmp/lvgl/src/lv_core/lv_obj.h" line="832" column="1"/>
      </memberdef>
      <memberdef kind="function" id="lv__obj_8h_1a1904ecbfc60e02fe4a0aff3cb8b3af33" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void lv_event_send_refresh_recursive</definition>
        <argsstring>(lv_obj_t *obj)</argsstring>
        <name>lv_event_send_refresh_recursive</name>
        <param>
          <type><ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref> *</type>
          <declname>obj</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Send LV_EVENT_REFRESH event to an object and all of its children <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>obj</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to an object or NULL to refresh all objects of all displays </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kisvegabor/projects/littlevgl/eclipse-workspace/lv_sim_eclipse_sdl/lvgl/scripts/release_tmp/lvgl/src/lv_core/lv_obj.h" line="838" column="1"/>
      </memberdef>
      <memberdef kind="function" id="lv__obj_8h_1ab336a88a900b047e3bfd077a8d4ef20b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>lv_res_t</type>
        <definition>lv_res_t lv_event_send_func</definition>
        <argsstring>(lv_event_cb_t event_xcb, lv_obj_t *obj, lv_event_t event, const void *data)</argsstring>
        <name>lv_event_send_func</name>
        <param>
          <type><ref refid="lv__obj_8h_1a9366c6b8b950ee09075cdfe83105a81f" kindref="member">lv_event_cb_t</ref></type>
          <declname>event_xcb</declname>
        </param>
        <param>
          <type><ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref> *</type>
          <declname>obj</declname>
        </param>
        <param>
          <type><ref refid="lv__obj_8h_1a81567353752c588831ed89a3b15b4ca0" kindref="member">lv_event_t</ref></type>
          <declname>event</declname>
        </param>
        <param>
          <type>const void *</type>
          <declname>data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Call an event function with an object, event, and data. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>event_xcb</parametername>
</parameternamelist>
<parameterdescription>
<para>an event callback function. If <computeroutput>NULL</computeroutput> <computeroutput>LV_RES_OK</computeroutput> will return without any actions. (the &apos;x&apos; in the argument name indicates that its not a fully generic function because it not follows the <computeroutput>func_name(object, callback, ...)</computeroutput> convention) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>obj</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to an object to associate with the event (can be <computeroutput>NULL</computeroutput> to simply call the <computeroutput>event_cb</computeroutput>) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>event</parametername>
</parameternamelist>
<parameterdescription>
<para>an event </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to a custom data </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>LV_RES_OK: <computeroutput>obj</computeroutput> was not deleted in the event; LV_RES_INV: <computeroutput>obj</computeroutput> was deleted in the event </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kisvegabor/projects/littlevgl/eclipse-workspace/lv_sim_eclipse_sdl/lvgl/scripts/release_tmp/lvgl/src/lv_core/lv_obj.h" line="850" column="1"/>
      </memberdef>
      <memberdef kind="function" id="lv__obj_8h_1a472e53d23fcabb36ca29bd53b6ac8c15" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const void *</type>
        <definition>const void* lv_event_get_data</definition>
        <argsstring>(void)</argsstring>
        <name>lv_event_get_data</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the <computeroutput>data</computeroutput> parameter of the current event <simplesect kind="return"><para>the <computeroutput>data</computeroutput> parameter </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kisvegabor/projects/littlevgl/eclipse-workspace/lv_sim_eclipse_sdl/lvgl/scripts/release_tmp/lvgl/src/lv_core/lv_obj.h" line="856" column="1"/>
      </memberdef>
      <memberdef kind="function" id="lv__obj_8h_1a9b15e80bc5b1fa338dcec4eab720796b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void lv_obj_set_signal_cb</definition>
        <argsstring>(lv_obj_t *obj, lv_signal_cb_t signal_cb)</argsstring>
        <name>lv_obj_set_signal_cb</name>
        <param>
          <type><ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref> *</type>
          <declname>obj</declname>
        </param>
        <param>
          <type>lv_signal_cb_t</type>
          <declname>signal_cb</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set the a signal function of an object. Used internally by the library. Always call the previous signal function in the new. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>obj</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to an object </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>signal_cb</parametername>
</parameternamelist>
<parameterdescription>
<para>the new signal function </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kisvegabor/projects/littlevgl/eclipse-workspace/lv_sim_eclipse_sdl/lvgl/scripts/release_tmp/lvgl/src/lv_core/lv_obj.h" line="864" column="1"/>
      </memberdef>
      <memberdef kind="function" id="lv__obj_8h_1a5ed22d66695e9f91f08055f200f79cd2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>lv_res_t</type>
        <definition>lv_res_t lv_signal_send</definition>
        <argsstring>(lv_obj_t *obj, lv_signal_t signal, void *param)</argsstring>
        <name>lv_signal_send</name>
        <param>
          <type><ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref> *</type>
          <declname>obj</declname>
        </param>
        <param>
          <type>lv_signal_t</type>
          <declname>signal</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>param</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Send an event to the object <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>obj</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to an object </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>event</parametername>
</parameternamelist>
<parameterdescription>
<para>the type of the event from <computeroutput>lv_event_t</computeroutput>. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>LV_RES_OK or LV_RES_INV </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kisvegabor/projects/littlevgl/eclipse-workspace/lv_sim_eclipse_sdl/lvgl/scripts/release_tmp/lvgl/src/lv_core/lv_obj.h" line="873" column="1"/>
      </memberdef>
      <memberdef kind="function" id="lv__obj_8h_1aa97d824b977176ad1d8eb1b9e1675e0f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void lv_obj_set_design_cb</definition>
        <argsstring>(lv_obj_t *obj, lv_design_cb_t design_cb)</argsstring>
        <name>lv_obj_set_design_cb</name>
        <param>
          <type><ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref> *</type>
          <declname>obj</declname>
        </param>
        <param>
          <type><ref refid="lv__obj_8h_1ab1b5bf7b2fac5b7cf204a7be845a6679" kindref="member">lv_design_cb_t</ref></type>
          <declname>design_cb</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set a new design function for an object <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>obj</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to an object </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>design_cb</parametername>
</parameternamelist>
<parameterdescription>
<para>the new design function </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kisvegabor/projects/littlevgl/eclipse-workspace/lv_sim_eclipse_sdl/lvgl/scripts/release_tmp/lvgl/src/lv_core/lv_obj.h" line="880" column="1"/>
      </memberdef>
      <memberdef kind="function" id="lv__obj_8h_1aeb8dea7afde33b8851b8e3386c7314a4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void *</type>
        <definition>void* lv_obj_allocate_ext_attr</definition>
        <argsstring>(lv_obj_t *obj, uint16_t ext_size)</argsstring>
        <name>lv_obj_allocate_ext_attr</name>
        <param>
          <type><ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref> *</type>
          <declname>obj</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>ext_size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Allocate a new ext. data for an object <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>obj</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to an object </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ext_size</parametername>
</parameternamelist>
<parameterdescription>
<para>the size of the new ext. data </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>pointer to the allocated ext </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kisvegabor/projects/littlevgl/eclipse-workspace/lv_sim_eclipse_sdl/lvgl/scripts/release_tmp/lvgl/src/lv_core/lv_obj.h" line="892" column="1"/>
      </memberdef>
      <memberdef kind="function" id="lv__obj_8h_1aeb89ad1cad229158b40e7bb97be07b03" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void lv_obj_refresh_ext_draw_pad</definition>
        <argsstring>(lv_obj_t *obj)</argsstring>
        <name>lv_obj_refresh_ext_draw_pad</name>
        <param>
          <type><ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref> *</type>
          <declname>obj</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Send a &apos;LV_SIGNAL_REFR_EXT_SIZE&apos; signal to the object to refresh the extended draw area. he object needs to be invalidated by <computeroutput>lv_obj_invalidate(obj)</computeroutput> manually after this function. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>obj</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to an object </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kisvegabor/projects/littlevgl/eclipse-workspace/lv_sim_eclipse_sdl/lvgl/scripts/release_tmp/lvgl/src/lv_core/lv_obj.h" line="899" column="1"/>
      </memberdef>
      <memberdef kind="function" id="lv__obj_8h_1a52e56ecd96b78115ed0b51c36f653747" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref> *</type>
        <definition>lv_obj_t* lv_obj_get_screen</definition>
        <argsstring>(const lv_obj_t *obj)</argsstring>
        <name>lv_obj_get_screen</name>
        <param>
          <type>const <ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref> *</type>
          <declname>obj</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Return with the screen of an object <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>obj</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to an object </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>pointer to a screen </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kisvegabor/projects/littlevgl/eclipse-workspace/lv_sim_eclipse_sdl/lvgl/scripts/release_tmp/lvgl/src/lv_core/lv_obj.h" line="910" column="1"/>
      </memberdef>
      <memberdef kind="function" id="lv__obj_8h_1a0bd81ae3f2213e55c43c3129b03d2649" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="lv__hal__disp_8h_1a9d29d2918fd1d6117739da09a12b1e90" kindref="member">lv_disp_t</ref> *</type>
        <definition>lv_disp_t* lv_obj_get_disp</definition>
        <argsstring>(const lv_obj_t *obj)</argsstring>
        <name>lv_obj_get_disp</name>
        <param>
          <type>const <ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref> *</type>
          <declname>obj</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the display of an object <simplesect kind="return"><para>pointer the object&apos;s display </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kisvegabor/projects/littlevgl/eclipse-workspace/lv_sim_eclipse_sdl/lvgl/scripts/release_tmp/lvgl/src/lv_core/lv_obj.h" line="916" column="1"/>
      </memberdef>
      <memberdef kind="function" id="lv__obj_8h_1a52905721cbc66958ef9fd1361522f4e4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref> *</type>
        <definition>lv_obj_t* lv_obj_get_parent</definition>
        <argsstring>(const lv_obj_t *obj)</argsstring>
        <name>lv_obj_get_parent</name>
        <param>
          <type>const <ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref> *</type>
          <declname>obj</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns with the parent of an object <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>obj</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to an object </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>pointer to the parent of &apos;obj&apos; </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kisvegabor/projects/littlevgl/eclipse-workspace/lv_sim_eclipse_sdl/lvgl/scripts/release_tmp/lvgl/src/lv_core/lv_obj.h" line="927" column="1"/>
      </memberdef>
      <memberdef kind="function" id="lv__obj_8h_1a36dcadffbb0a2bf02feb62b6a2f963aa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref> *</type>
        <definition>lv_obj_t* lv_obj_get_child</definition>
        <argsstring>(const lv_obj_t *obj, const lv_obj_t *child)</argsstring>
        <name>lv_obj_get_child</name>
        <param>
          <type>const <ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref> *</type>
          <declname>obj</declname>
        </param>
        <param>
          <type>const <ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref> *</type>
          <declname>child</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Iterate through the children of an object (start from the &quot;youngest, lastly created&quot;) <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>obj</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to an object </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>child</parametername>
</parameternamelist>
<parameterdescription>
<para>NULL at first call to get the next children and the previous return value later </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the child after &apos;act_child&apos; or NULL if no more child </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kisvegabor/projects/littlevgl/eclipse-workspace/lv_sim_eclipse_sdl/lvgl/scripts/release_tmp/lvgl/src/lv_core/lv_obj.h" line="936" column="1"/>
      </memberdef>
      <memberdef kind="function" id="lv__obj_8h_1ab620077d4e1d0a6f75dd443e5a4a67a8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref> *</type>
        <definition>lv_obj_t* lv_obj_get_child_back</definition>
        <argsstring>(const lv_obj_t *obj, const lv_obj_t *child)</argsstring>
        <name>lv_obj_get_child_back</name>
        <param>
          <type>const <ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref> *</type>
          <declname>obj</declname>
        </param>
        <param>
          <type>const <ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref> *</type>
          <declname>child</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Iterate through the children of an object (start from the &quot;oldest&quot;, firstly created) <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>obj</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to an object </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>child</parametername>
</parameternamelist>
<parameterdescription>
<para>NULL at first call to get the next children and the previous return value later </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the child after &apos;act_child&apos; or NULL if no more child </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kisvegabor/projects/littlevgl/eclipse-workspace/lv_sim_eclipse_sdl/lvgl/scripts/release_tmp/lvgl/src/lv_core/lv_obj.h" line="945" column="1"/>
      </memberdef>
      <memberdef kind="function" id="lv__obj_8h_1a6ce599b3f83982ae5fa192dce54cba76" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint16_t</type>
        <definition>uint16_t lv_obj_count_children</definition>
        <argsstring>(const lv_obj_t *obj)</argsstring>
        <name>lv_obj_count_children</name>
        <param>
          <type>const <ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref> *</type>
          <declname>obj</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Count the children of an object (only children directly on &apos;obj&apos;) <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>obj</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to an object </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>children number of &apos;obj&apos; </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kisvegabor/projects/littlevgl/eclipse-workspace/lv_sim_eclipse_sdl/lvgl/scripts/release_tmp/lvgl/src/lv_core/lv_obj.h" line="952" column="1"/>
      </memberdef>
      <memberdef kind="function" id="lv__obj_8h_1ab10e50bbf95f7b13a7c04ad440c6aff9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint16_t</type>
        <definition>uint16_t lv_obj_count_children_recursive</definition>
        <argsstring>(const lv_obj_t *obj)</argsstring>
        <name>lv_obj_count_children_recursive</name>
        <param>
          <type>const <ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref> *</type>
          <declname>obj</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Recursively count the children of an object <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>obj</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to an object </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>children number of &apos;obj&apos; </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kisvegabor/projects/littlevgl/eclipse-workspace/lv_sim_eclipse_sdl/lvgl/scripts/release_tmp/lvgl/src/lv_core/lv_obj.h" line="958" column="1"/>
      </memberdef>
      <memberdef kind="function" id="lv__obj_8h_1a05f006d361710d75650677e7c6c9cf3e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void lv_obj_get_coords</definition>
        <argsstring>(const lv_obj_t *obj, lv_area_t *cords_p)</argsstring>
        <name>lv_obj_get_coords</name>
        <param>
          <type>const <ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref> *</type>
          <declname>obj</declname>
        </param>
        <param>
          <type><ref refid="structlv__area__t" kindref="compound">lv_area_t</ref> *</type>
          <declname>cords_p</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Copy the coordinates of an object to an area <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>obj</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to an object </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>cords_p</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to an area to store the coordinates </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kisvegabor/projects/littlevgl/eclipse-workspace/lv_sim_eclipse_sdl/lvgl/scripts/release_tmp/lvgl/src/lv_core/lv_obj.h" line="969" column="1"/>
      </memberdef>
      <memberdef kind="function" id="lv__obj_8h_1aaad347779991e40fd36aea89dcdf4a2b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void lv_obj_get_inner_coords</definition>
        <argsstring>(const lv_obj_t *obj, lv_area_t *coords_p)</argsstring>
        <name>lv_obj_get_inner_coords</name>
        <param>
          <type>const <ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref> *</type>
          <declname>obj</declname>
        </param>
        <param>
          <type><ref refid="structlv__area__t" kindref="compound">lv_area_t</ref> *</type>
          <declname>coords_p</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Reduce area retried by <computeroutput><ref refid="lv__obj_8h_1a05f006d361710d75650677e7c6c9cf3e" kindref="member">lv_obj_get_coords()</ref></computeroutput> the get graphically usable area of an object. (Without the size of the border or other extra graphical elements) <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coords_p</parametername>
</parameternamelist>
<parameterdescription>
<para>store the result area here </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kisvegabor/projects/littlevgl/eclipse-workspace/lv_sim_eclipse_sdl/lvgl/scripts/release_tmp/lvgl/src/lv_core/lv_obj.h" line="976" column="1"/>
      </memberdef>
      <memberdef kind="function" id="lv__obj_8h_1aeefcb58f5d09e5ba9722fc680a3ad409" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>lv_coord_t</type>
        <definition>lv_coord_t lv_obj_get_x</definition>
        <argsstring>(const lv_obj_t *obj)</argsstring>
        <name>lv_obj_get_x</name>
        <param>
          <type>const <ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref> *</type>
          <declname>obj</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the x coordinate of object <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>obj</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to an object </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>distance of &apos;obj&apos; from the left side of its parent </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kisvegabor/projects/littlevgl/eclipse-workspace/lv_sim_eclipse_sdl/lvgl/scripts/release_tmp/lvgl/src/lv_core/lv_obj.h" line="983" column="1"/>
      </memberdef>
      <memberdef kind="function" id="lv__obj_8h_1adb5b94d45013ad689376f1b92eaf7072" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>lv_coord_t</type>
        <definition>lv_coord_t lv_obj_get_y</definition>
        <argsstring>(const lv_obj_t *obj)</argsstring>
        <name>lv_obj_get_y</name>
        <param>
          <type>const <ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref> *</type>
          <declname>obj</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the y coordinate of object <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>obj</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to an object </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>distance of &apos;obj&apos; from the top of its parent </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kisvegabor/projects/littlevgl/eclipse-workspace/lv_sim_eclipse_sdl/lvgl/scripts/release_tmp/lvgl/src/lv_core/lv_obj.h" line="990" column="1"/>
      </memberdef>
      <memberdef kind="function" id="lv__obj_8h_1a118b18e487255be1d8729239e9ddbee1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>lv_coord_t</type>
        <definition>lv_coord_t lv_obj_get_width</definition>
        <argsstring>(const lv_obj_t *obj)</argsstring>
        <name>lv_obj_get_width</name>
        <param>
          <type>const <ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref> *</type>
          <declname>obj</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the width of an object <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>obj</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to an object </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the width </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kisvegabor/projects/littlevgl/eclipse-workspace/lv_sim_eclipse_sdl/lvgl/scripts/release_tmp/lvgl/src/lv_core/lv_obj.h" line="997" column="1"/>
      </memberdef>
      <memberdef kind="function" id="lv__obj_8h_1aada555bdfd06f2673714a7c6fd8a3b58" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>lv_coord_t</type>
        <definition>lv_coord_t lv_obj_get_height</definition>
        <argsstring>(const lv_obj_t *obj)</argsstring>
        <name>lv_obj_get_height</name>
        <param>
          <type>const <ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref> *</type>
          <declname>obj</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the height of an object <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>obj</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to an object </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the height </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kisvegabor/projects/littlevgl/eclipse-workspace/lv_sim_eclipse_sdl/lvgl/scripts/release_tmp/lvgl/src/lv_core/lv_obj.h" line="1004" column="1"/>
      </memberdef>
      <memberdef kind="function" id="lv__obj_8h_1ac43b44ea71e3109e39004d2f57edd5e9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>lv_coord_t</type>
        <definition>lv_coord_t lv_obj_get_width_fit</definition>
        <argsstring>(const lv_obj_t *obj)</argsstring>
        <name>lv_obj_get_width_fit</name>
        <param>
          <type>const <ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref> *</type>
          <declname>obj</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get that width reduced by the left and right padding. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>obj</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to an object </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the width which still fits into the container </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kisvegabor/projects/littlevgl/eclipse-workspace/lv_sim_eclipse_sdl/lvgl/scripts/release_tmp/lvgl/src/lv_core/lv_obj.h" line="1011" column="1"/>
      </memberdef>
      <memberdef kind="function" id="lv__obj_8h_1a3fbceaa8d7bb45a97418e62bb687b9d9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>lv_coord_t</type>
        <definition>lv_coord_t lv_obj_get_height_fit</definition>
        <argsstring>(const lv_obj_t *obj)</argsstring>
        <name>lv_obj_get_height_fit</name>
        <param>
          <type>const <ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref> *</type>
          <declname>obj</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get that height reduced by the top an bottom padding. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>obj</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to an object </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the height which still fits into the container </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kisvegabor/projects/littlevgl/eclipse-workspace/lv_sim_eclipse_sdl/lvgl/scripts/release_tmp/lvgl/src/lv_core/lv_obj.h" line="1018" column="1"/>
      </memberdef>
      <memberdef kind="function" id="lv__obj_8h_1a334827e5f3121d9ca0a297d0c23ac530" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>lv_coord_t</type>
        <definition>lv_coord_t lv_obj_get_height_margin</definition>
        <argsstring>(lv_obj_t *obj)</argsstring>
        <name>lv_obj_get_height_margin</name>
        <param>
          <type><ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref> *</type>
          <declname>obj</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the height of an object by taking the top and bottom margin into account. The returned height will be <computeroutput>obj_h + margin_top + margin_bottom</computeroutput> <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>obj</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to an object </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the height including thee margins </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kisvegabor/projects/littlevgl/eclipse-workspace/lv_sim_eclipse_sdl/lvgl/scripts/release_tmp/lvgl/src/lv_core/lv_obj.h" line="1026" column="1"/>
      </memberdef>
      <memberdef kind="function" id="lv__obj_8h_1a1bc413fc6897c195f8a2e9529b709005" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>lv_coord_t</type>
        <definition>lv_coord_t lv_obj_get_width_margin</definition>
        <argsstring>(lv_obj_t *obj)</argsstring>
        <name>lv_obj_get_width_margin</name>
        <param>
          <type><ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref> *</type>
          <declname>obj</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the width of an object by taking the left and right margin into account. The returned width will be <computeroutput>obj_w + margin_left + margin_right</computeroutput> <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>obj</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to an object </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the height including thee margins </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kisvegabor/projects/littlevgl/eclipse-workspace/lv_sim_eclipse_sdl/lvgl/scripts/release_tmp/lvgl/src/lv_core/lv_obj.h" line="1034" column="1"/>
      </memberdef>
      <memberdef kind="function" id="lv__obj_8h_1ac67fe6e5a5cc5243995ceb8fa8c61634" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>lv_coord_t</type>
        <definition>lv_coord_t lv_obj_get_width_grid</definition>
        <argsstring>(lv_obj_t *obj, uint8_t div, uint8_t span)</argsstring>
        <name>lv_obj_get_width_grid</name>
        <param>
          <type><ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref> *</type>
          <declname>obj</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>div</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>span</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Divide the width of the object and get the width of a given number of columns. Take paddings into account. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>obj</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to an object </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>div</parametername>
</parameternamelist>
<parameterdescription>
<para>indicates how many columns are assumed. If 1 the width will be set the the parent&apos;s width If 2 only half parent width - inner padding of the parent If 3 only third parent width - 2 * inner padding of the parent </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>span</parametername>
</parameternamelist>
<parameterdescription>
<para>how many columns are combined </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the width according to the given parameters </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kisvegabor/projects/littlevgl/eclipse-workspace/lv_sim_eclipse_sdl/lvgl/scripts/release_tmp/lvgl/src/lv_core/lv_obj.h" line="1047" column="1"/>
      </memberdef>
      <memberdef kind="function" id="lv__obj_8h_1a8bbfb81ab17576d25b77391ab2a1770f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>lv_coord_t</type>
        <definition>lv_coord_t lv_obj_get_height_grid</definition>
        <argsstring>(lv_obj_t *obj, uint8_t div, uint8_t span)</argsstring>
        <name>lv_obj_get_height_grid</name>
        <param>
          <type><ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref> *</type>
          <declname>obj</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>div</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>span</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Divide the height of the object and get the width of a given number of columns. Take paddings into account. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>obj</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to an object </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>div</parametername>
</parameternamelist>
<parameterdescription>
<para>indicates how many rows are assumed. If 1 the height will be set the the parent&apos;s height If 2 only half parent height - inner padding of the parent If 3 only third parent height - 2 * inner padding of the parent </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>span</parametername>
</parameternamelist>
<parameterdescription>
<para>how many rows are combined </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the height according to the given parameters </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kisvegabor/projects/littlevgl/eclipse-workspace/lv_sim_eclipse_sdl/lvgl/scripts/release_tmp/lvgl/src/lv_core/lv_obj.h" line="1060" column="1"/>
      </memberdef>
      <memberdef kind="function" id="lv__obj_8h_1a5642c5bfafed524fd6fc20823ad6562b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool lv_obj_get_auto_realign</definition>
        <argsstring>(const lv_obj_t *obj)</argsstring>
        <name>lv_obj_get_auto_realign</name>
        <param>
          <type>const <ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref> *</type>
          <declname>obj</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the automatic realign property of the object. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>obj</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to an object </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true: auto realign is enabled; false: auto realign is disabled </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kisvegabor/projects/littlevgl/eclipse-workspace/lv_sim_eclipse_sdl/lvgl/scripts/release_tmp/lvgl/src/lv_core/lv_obj.h" line="1067" column="1"/>
      </memberdef>
      <memberdef kind="function" id="lv__obj_8h_1ab9fba1d6b6f3916fdcd454c4d7fe368e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>lv_coord_t</type>
        <definition>lv_coord_t lv_obj_get_ext_click_pad_left</definition>
        <argsstring>(const lv_obj_t *obj)</argsstring>
        <name>lv_obj_get_ext_click_pad_left</name>
        <param>
          <type>const <ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref> *</type>
          <declname>obj</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the left padding of extended clickable area <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>obj</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to an object </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the extended left padding </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kisvegabor/projects/littlevgl/eclipse-workspace/lv_sim_eclipse_sdl/lvgl/scripts/release_tmp/lvgl/src/lv_core/lv_obj.h" line="1074" column="1"/>
      </memberdef>
      <memberdef kind="function" id="lv__obj_8h_1a35e95300546b05681322cd764cb8bcba" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>lv_coord_t</type>
        <definition>lv_coord_t lv_obj_get_ext_click_pad_right</definition>
        <argsstring>(const lv_obj_t *obj)</argsstring>
        <name>lv_obj_get_ext_click_pad_right</name>
        <param>
          <type>const <ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref> *</type>
          <declname>obj</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the right padding of extended clickable area <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>obj</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to an object </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the extended right padding </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kisvegabor/projects/littlevgl/eclipse-workspace/lv_sim_eclipse_sdl/lvgl/scripts/release_tmp/lvgl/src/lv_core/lv_obj.h" line="1081" column="1"/>
      </memberdef>
      <memberdef kind="function" id="lv__obj_8h_1acbba8319492dcf57db926ce45744c2fa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>lv_coord_t</type>
        <definition>lv_coord_t lv_obj_get_ext_click_pad_top</definition>
        <argsstring>(const lv_obj_t *obj)</argsstring>
        <name>lv_obj_get_ext_click_pad_top</name>
        <param>
          <type>const <ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref> *</type>
          <declname>obj</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the top padding of extended clickable area <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>obj</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to an object </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the extended top padding </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kisvegabor/projects/littlevgl/eclipse-workspace/lv_sim_eclipse_sdl/lvgl/scripts/release_tmp/lvgl/src/lv_core/lv_obj.h" line="1088" column="1"/>
      </memberdef>
      <memberdef kind="function" id="lv__obj_8h_1a53c539540efc635c7f966ef51a2f3ed6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>lv_coord_t</type>
        <definition>lv_coord_t lv_obj_get_ext_click_pad_bottom</definition>
        <argsstring>(const lv_obj_t *obj)</argsstring>
        <name>lv_obj_get_ext_click_pad_bottom</name>
        <param>
          <type>const <ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref> *</type>
          <declname>obj</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the bottom padding of extended clickable area <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>obj</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to an object </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the extended bottom padding </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kisvegabor/projects/littlevgl/eclipse-workspace/lv_sim_eclipse_sdl/lvgl/scripts/release_tmp/lvgl/src/lv_core/lv_obj.h" line="1095" column="1"/>
      </memberdef>
      <memberdef kind="function" id="lv__obj_8h_1a731df1c9d92621ae049541ade346c6db" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>lv_coord_t</type>
        <definition>lv_coord_t lv_obj_get_ext_draw_pad</definition>
        <argsstring>(const lv_obj_t *obj)</argsstring>
        <name>lv_obj_get_ext_draw_pad</name>
        <param>
          <type>const <ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref> *</type>
          <declname>obj</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the extended size attribute of an object <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>obj</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to an object </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the extended size attribute </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kisvegabor/projects/littlevgl/eclipse-workspace/lv_sim_eclipse_sdl/lvgl/scripts/release_tmp/lvgl/src/lv_core/lv_obj.h" line="1102" column="1"/>
      </memberdef>
      <memberdef kind="function" id="lv__obj_8h_1a98901100346cf00f1d71409703c69da5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structlv__style__list__t" kindref="compound">lv_style_list_t</ref> *</type>
        <definition>lv_style_list_t* lv_obj_get_style_list</definition>
        <argsstring>(const lv_obj_t *obj, uint8_t part)</argsstring>
        <name>lv_obj_get_style_list</name>
        <param>
          <type>const <ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref> *</type>
          <declname>obj</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>part</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the style list of an object&apos;s part. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>obj</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to an object. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>part</parametername>
</parameternamelist>
<parameterdescription>
<para>part the part of the object which style list should be get. E.g. <computeroutput>LV_OBJ_PART_MAIN</computeroutput>, <computeroutput>LV_BTN_PART_MAIN</computeroutput>, <computeroutput>LV_SLIDER_PART_KNOB</computeroutput> </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>pointer to the style list. (Can be <computeroutput>NULL</computeroutput>) </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kisvegabor/projects/littlevgl/eclipse-workspace/lv_sim_eclipse_sdl/lvgl/scripts/release_tmp/lvgl/src/lv_core/lv_obj.h" line="1115" column="1"/>
      </memberdef>
      <memberdef kind="function" id="lv__obj_8h_1a9b085852ad4ade4a4e14c788ae660de3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>lv_style_int_t</type>
        <definition>lv_style_int_t _lv_obj_get_style_int</definition>
        <argsstring>(const lv_obj_t *obj, uint8_t part, lv_style_property_t prop)</argsstring>
        <name>_lv_obj_get_style_int</name>
        <param>
          <type>const <ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref> *</type>
          <declname>obj</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>part</declname>
        </param>
        <param>
          <type>lv_style_property_t</type>
          <declname>prop</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get a style property of a part of an object in the object&apos;s current state. If there is a running transitions it is taken into account <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>obj</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to an object </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>part</parametername>
</parameternamelist>
<parameterdescription>
<para>the part of the object which style property should be get. E.g. <computeroutput>LV_OBJ_PART_MAIN</computeroutput>, <computeroutput>LV_BTN_PART_MAIN</computeroutput>, <computeroutput>LV_SLIDER_PART_KNOB</computeroutput> </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>prop</parametername>
</parameternamelist>
<parameterdescription>
<para>the property to get. E.g. <computeroutput>LV_STYLE_BORDER_WIDTH</computeroutput>. The state of the object will be added internally </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the value of the property of the given part in the current state. If the property is not found a default value will be returned. </para></simplesect>
<simplesect kind="note"><para>shouldn&apos;t be used directly. Use the specific property get functions instead. For example: <computeroutput>lv_obj_style_get_border_width()</computeroutput> </para></simplesect>
<simplesect kind="note"><para>for performance reasons it&apos;s not checked if the property really has integer type </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kisvegabor/projects/littlevgl/eclipse-workspace/lv_sim_eclipse_sdl/lvgl/scripts/release_tmp/lvgl/src/lv_core/lv_obj.h" line="1131" column="1"/>
      </memberdef>
      <memberdef kind="function" id="lv__obj_8h_1a6d690bceb66ef8a571f6c429419b9c25" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="unionlv__color1__t" kindref="compound">lv_color_t</ref></type>
        <definition>lv_color_t _lv_obj_get_style_color</definition>
        <argsstring>(const lv_obj_t *obj, uint8_t part, lv_style_property_t prop)</argsstring>
        <name>_lv_obj_get_style_color</name>
        <param>
          <type>const <ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref> *</type>
          <declname>obj</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>part</declname>
        </param>
        <param>
          <type>lv_style_property_t</type>
          <declname>prop</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get a style property of a part of an object in the object&apos;s current state. If there is a running transitions it is taken into account <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>obj</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to an object </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>part</parametername>
</parameternamelist>
<parameterdescription>
<para>the part of the object which style property should be get. E.g. <computeroutput>LV_OBJ_PART_MAIN</computeroutput>, <computeroutput>LV_BTN_PART_MAIN</computeroutput>, <computeroutput>LV_SLIDER_PART_KNOB</computeroutput> </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>prop</parametername>
</parameternamelist>
<parameterdescription>
<para>the property to get. E.g. <computeroutput>LV_STYLE_BORDER_COLOR</computeroutput>. The state of the object will be added internally </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the value of the property of the given part in the current state. If the property is not found a default value will be returned. </para></simplesect>
<simplesect kind="note"><para>shouldn&apos;t be used directly. Use the specific property get functions instead. For example: <computeroutput>lv_obj_style_get_border_color()</computeroutput> </para></simplesect>
<simplesect kind="note"><para>for performance reasons it&apos;s not checked if the property really has color type </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kisvegabor/projects/littlevgl/eclipse-workspace/lv_sim_eclipse_sdl/lvgl/scripts/release_tmp/lvgl/src/lv_core/lv_obj.h" line="1147" column="1"/>
      </memberdef>
      <memberdef kind="function" id="lv__obj_8h_1afb599f7dfef5ad7be5ae2ac12886c69a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>lv_opa_t</type>
        <definition>lv_opa_t _lv_obj_get_style_opa</definition>
        <argsstring>(const lv_obj_t *obj, uint8_t part, lv_style_property_t prop)</argsstring>
        <name>_lv_obj_get_style_opa</name>
        <param>
          <type>const <ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref> *</type>
          <declname>obj</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>part</declname>
        </param>
        <param>
          <type>lv_style_property_t</type>
          <declname>prop</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get a style property of a part of an object in the object&apos;s current state. If there is a running transitions it is taken into account <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>obj</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to an object </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>part</parametername>
</parameternamelist>
<parameterdescription>
<para>the part of the object which style property should be get. E.g. <computeroutput>LV_OBJ_PART_MAIN</computeroutput>, <computeroutput>LV_BTN_PART_MAIN</computeroutput>, <computeroutput>LV_SLIDER_PART_KNOB</computeroutput> </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>prop</parametername>
</parameternamelist>
<parameterdescription>
<para>the property to get. E.g. <computeroutput>LV_STYLE_BORDER_OPA</computeroutput>. The state of the object will be added internally </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the value of the property of the given part in the current state. If the property is not found a default value will be returned. </para></simplesect>
<simplesect kind="note"><para>shouldn&apos;t be used directly. Use the specific property get functions instead. For example: <computeroutput>lv_obj_style_get_border_opa()</computeroutput> </para></simplesect>
<simplesect kind="note"><para>for performance reasons it&apos;s not checked if the property really has opacity type </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kisvegabor/projects/littlevgl/eclipse-workspace/lv_sim_eclipse_sdl/lvgl/scripts/release_tmp/lvgl/src/lv_core/lv_obj.h" line="1163" column="1"/>
      </memberdef>
      <memberdef kind="function" id="lv__obj_8h_1a354e8d5dbd358f7e7f693241e891dc5b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const void *</type>
        <definition>const void* _lv_obj_get_style_ptr</definition>
        <argsstring>(const lv_obj_t *obj, uint8_t part, lv_style_property_t prop)</argsstring>
        <name>_lv_obj_get_style_ptr</name>
        <param>
          <type>const <ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref> *</type>
          <declname>obj</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>part</declname>
        </param>
        <param>
          <type>lv_style_property_t</type>
          <declname>prop</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get a style property of a part of an object in the object&apos;s current state. If there is a running transitions it is taken into account <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>obj</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to an object </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>part</parametername>
</parameternamelist>
<parameterdescription>
<para>the part of the object which style property should be get. E.g. <computeroutput>LV_OBJ_PART_MAIN</computeroutput>, <computeroutput>LV_BTN_PART_MAIN</computeroutput>, <computeroutput>LV_SLIDER_PART_KNOB</computeroutput> </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>prop</parametername>
</parameternamelist>
<parameterdescription>
<para>the property to get. E.g. <computeroutput>LV_STYLE_TEXT_FONT</computeroutput>. The state of the object will be added internally </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the value of the property of the given part in the current state. If the property is not found a default value will be returned. </para></simplesect>
<simplesect kind="note"><para>shouldn&apos;t be used directly. Use the specific property get functions instead. For example: <computeroutput>lv_obj_style_get_border_opa()</computeroutput> </para></simplesect>
<simplesect kind="note"><para>for performance reasons it&apos;s not checked if the property really has pointer type </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kisvegabor/projects/littlevgl/eclipse-workspace/lv_sim_eclipse_sdl/lvgl/scripts/release_tmp/lvgl/src/lv_core/lv_obj.h" line="1179" column="1"/>
      </memberdef>
      <memberdef kind="function" id="lv__obj_8h_1acc92163fa8b9e786795bcdc39e6cb4e1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structlv__style__t" kindref="compound">lv_style_t</ref> *</type>
        <definition>lv_style_t* lv_obj_get_local_style</definition>
        <argsstring>(lv_obj_t *obj, uint8_t part)</argsstring>
        <name>lv_obj_get_local_style</name>
        <param>
          <type><ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref> *</type>
          <declname>obj</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>part</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the local style of a part of an object. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>obj</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to an object </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>part</parametername>
</parameternamelist>
<parameterdescription>
<para>the part of the object which style property should be set. E.g. <computeroutput>LV_OBJ_PART_MAIN</computeroutput>, <computeroutput>LV_BTN_PART_MAIN</computeroutput>, <computeroutput>LV_SLIDER_PART_KNOB</computeroutput> </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>pointer to the local style if exists else <computeroutput>NULL</computeroutput>. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kisvegabor/projects/littlevgl/eclipse-workspace/lv_sim_eclipse_sdl/lvgl/scripts/release_tmp/lvgl/src/lv_core/lv_obj.h" line="1188" column="1"/>
      </memberdef>
      <memberdef kind="function" id="lv__obj_8h_1a818a3767b76e5edaf2a97beafdf53f61" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool lv_obj_get_hidden</definition>
        <argsstring>(const lv_obj_t *obj)</argsstring>
        <name>lv_obj_get_hidden</name>
        <param>
          <type>const <ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref> *</type>
          <declname>obj</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the hidden attribute of an object <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>obj</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to an object </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true: the object is hidden </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kisvegabor/projects/littlevgl/eclipse-workspace/lv_sim_eclipse_sdl/lvgl/scripts/release_tmp/lvgl/src/lv_core/lv_obj.h" line="1202" column="1"/>
      </memberdef>
      <memberdef kind="function" id="lv__obj_8h_1a339525f348b62b5b3274d8c3c713536f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool lv_obj_get_adv_hittest</definition>
        <argsstring>(const lv_obj_t *obj)</argsstring>
        <name>lv_obj_get_adv_hittest</name>
        <param>
          <type>const <ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref> *</type>
          <declname>obj</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get whether advanced hit-testing is enabled on an object <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>obj</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to an object </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true: advanced hit-testing is enabled </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kisvegabor/projects/littlevgl/eclipse-workspace/lv_sim_eclipse_sdl/lvgl/scripts/release_tmp/lvgl/src/lv_core/lv_obj.h" line="1209" column="1"/>
      </memberdef>
      <memberdef kind="function" id="lv__obj_8h_1a0faee4743a74deb1bc48dbd3f10d7943" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool lv_obj_get_click</definition>
        <argsstring>(const lv_obj_t *obj)</argsstring>
        <name>lv_obj_get_click</name>
        <param>
          <type>const <ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref> *</type>
          <declname>obj</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the click enable attribute of an object <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>obj</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to an object </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true: the object is clickable </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kisvegabor/projects/littlevgl/eclipse-workspace/lv_sim_eclipse_sdl/lvgl/scripts/release_tmp/lvgl/src/lv_core/lv_obj.h" line="1216" column="1"/>
      </memberdef>
      <memberdef kind="function" id="lv__obj_8h_1a54ef4ef13845592fb69222f56e8858d2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool lv_obj_get_top</definition>
        <argsstring>(const lv_obj_t *obj)</argsstring>
        <name>lv_obj_get_top</name>
        <param>
          <type>const <ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref> *</type>
          <declname>obj</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the top enable attribute of an object <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>obj</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to an object </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true: the auto top feature is enabled </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kisvegabor/projects/littlevgl/eclipse-workspace/lv_sim_eclipse_sdl/lvgl/scripts/release_tmp/lvgl/src/lv_core/lv_obj.h" line="1223" column="1"/>
      </memberdef>
      <memberdef kind="function" id="lv__obj_8h_1a1d3e216562fa5dc093cf1f368566470b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool lv_obj_get_drag</definition>
        <argsstring>(const lv_obj_t *obj)</argsstring>
        <name>lv_obj_get_drag</name>
        <param>
          <type>const <ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref> *</type>
          <declname>obj</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the drag enable attribute of an object <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>obj</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to an object </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true: the object is draggable </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kisvegabor/projects/littlevgl/eclipse-workspace/lv_sim_eclipse_sdl/lvgl/scripts/release_tmp/lvgl/src/lv_core/lv_obj.h" line="1230" column="1"/>
      </memberdef>
      <memberdef kind="function" id="lv__obj_8h_1ad507f3af94d2c37f106771e4fefaaec9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>lv_drag_dir_t</type>
        <definition>lv_drag_dir_t lv_obj_get_drag_dir</definition>
        <argsstring>(const lv_obj_t *obj)</argsstring>
        <name>lv_obj_get_drag_dir</name>
        <param>
          <type>const <ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref> *</type>
          <declname>obj</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the directions an object can be dragged <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>obj</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to an object </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>bitwise OR of allowed directions an object can be dragged in </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kisvegabor/projects/littlevgl/eclipse-workspace/lv_sim_eclipse_sdl/lvgl/scripts/release_tmp/lvgl/src/lv_core/lv_obj.h" line="1237" column="1"/>
      </memberdef>
      <memberdef kind="function" id="lv__obj_8h_1a4de8f7bdc9e2333299a04eba46f979c2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool lv_obj_get_drag_throw</definition>
        <argsstring>(const lv_obj_t *obj)</argsstring>
        <name>lv_obj_get_drag_throw</name>
        <param>
          <type>const <ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref> *</type>
          <declname>obj</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the drag throw enable attribute of an object <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>obj</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to an object </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true: drag throw is enabled </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kisvegabor/projects/littlevgl/eclipse-workspace/lv_sim_eclipse_sdl/lvgl/scripts/release_tmp/lvgl/src/lv_core/lv_obj.h" line="1244" column="1"/>
      </memberdef>
      <memberdef kind="function" id="lv__obj_8h_1adc034fe8bd3e032c3eb2b656d62e7474" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool lv_obj_get_drag_parent</definition>
        <argsstring>(const lv_obj_t *obj)</argsstring>
        <name>lv_obj_get_drag_parent</name>
        <param>
          <type>const <ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref> *</type>
          <declname>obj</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the drag parent attribute of an object <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>obj</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to an object </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true: drag parent is enabled </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kisvegabor/projects/littlevgl/eclipse-workspace/lv_sim_eclipse_sdl/lvgl/scripts/release_tmp/lvgl/src/lv_core/lv_obj.h" line="1251" column="1"/>
      </memberdef>
      <memberdef kind="function" id="lv__obj_8h_1a5200f252fc84f56bd76bdd86a10e344c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool lv_obj_get_focus_parent</definition>
        <argsstring>(const lv_obj_t *obj)</argsstring>
        <name>lv_obj_get_focus_parent</name>
        <param>
          <type>const <ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref> *</type>
          <declname>obj</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the focus parent attribute of an object <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>obj</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to an object </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true: focus parent is enabled </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kisvegabor/projects/littlevgl/eclipse-workspace/lv_sim_eclipse_sdl/lvgl/scripts/release_tmp/lvgl/src/lv_core/lv_obj.h" line="1259" column="1"/>
      </memberdef>
      <memberdef kind="function" id="lv__obj_8h_1a49fd592a6955f91dffeb416b13d6bc67" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool lv_obj_get_parent_event</definition>
        <argsstring>(const lv_obj_t *obj)</argsstring>
        <name>lv_obj_get_parent_event</name>
        <param>
          <type>const <ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref> *</type>
          <declname>obj</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the drag parent attribute of an object <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>obj</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to an object </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true: drag parent is enabled </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kisvegabor/projects/littlevgl/eclipse-workspace/lv_sim_eclipse_sdl/lvgl/scripts/release_tmp/lvgl/src/lv_core/lv_obj.h" line="1267" column="1"/>
      </memberdef>
      <memberdef kind="function" id="lv__obj_8h_1a8b1e2a33eb01a4fc39935f2399221cc0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool lv_obj_get_gesture_parent</definition>
        <argsstring>(const lv_obj_t *obj)</argsstring>
        <name>lv_obj_get_gesture_parent</name>
        <param>
          <type>const <ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref> *</type>
          <declname>obj</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the gesture parent attribute of an object <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>obj</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to an object </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true: gesture parent is enabled </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kisvegabor/projects/littlevgl/eclipse-workspace/lv_sim_eclipse_sdl/lvgl/scripts/release_tmp/lvgl/src/lv_core/lv_obj.h" line="1274" column="1"/>
      </memberdef>
      <memberdef kind="function" id="lv__obj_8h_1a3eaa434ba7a1d50bac6685a3ebac0558" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>lv_bidi_dir_t</type>
        <definition>lv_bidi_dir_t lv_obj_get_base_dir</definition>
        <argsstring>(const lv_obj_t *obj)</argsstring>
        <name>lv_obj_get_base_dir</name>
        <param>
          <type>const <ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref> *</type>
          <declname>obj</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kisvegabor/projects/littlevgl/eclipse-workspace/lv_sim_eclipse_sdl/lvgl/scripts/release_tmp/lvgl/src/lv_core/lv_obj.h" line="1276" column="1"/>
      </memberdef>
      <memberdef kind="function" id="lv__obj_8h_1abca39a2aa901c928a3086778dc40ba31" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint8_t</type>
        <definition>uint8_t lv_obj_get_protect</definition>
        <argsstring>(const lv_obj_t *obj)</argsstring>
        <name>lv_obj_get_protect</name>
        <param>
          <type>const <ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref> *</type>
          <declname>obj</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the protect field of an object <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>obj</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to an object </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>protect field (&apos;OR&apos;ed values of <computeroutput>lv_protect_t</computeroutput>) </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kisvegabor/projects/littlevgl/eclipse-workspace/lv_sim_eclipse_sdl/lvgl/scripts/release_tmp/lvgl/src/lv_core/lv_obj.h" line="1283" column="1"/>
      </memberdef>
      <memberdef kind="function" id="lv__obj_8h_1a80d6394bba9e1a414e797efd261ed02f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool lv_obj_is_protected</definition>
        <argsstring>(const lv_obj_t *obj, uint8_t prot)</argsstring>
        <name>lv_obj_is_protected</name>
        <param>
          <type>const <ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref> *</type>
          <declname>obj</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>prot</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Check at least one bit of a given protect bitfield is set <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>obj</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to an object </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>prot</parametername>
</parameternamelist>
<parameterdescription>
<para>protect bits to test (&apos;OR&apos;ed values of <computeroutput>lv_protect_t</computeroutput>) </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>false: none of the given bits are set, true: at least one bit is set </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kisvegabor/projects/littlevgl/eclipse-workspace/lv_sim_eclipse_sdl/lvgl/scripts/release_tmp/lvgl/src/lv_core/lv_obj.h" line="1291" column="1"/>
      </memberdef>
      <memberdef kind="function" id="lv__obj_8h_1a54e85af02f7bbbcd3bdd4186591ac7e4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>lv_state_t</type>
        <definition>lv_state_t lv_obj_get_state</definition>
        <argsstring>(const lv_obj_t *obj, uint8_t part)</argsstring>
        <name>lv_obj_get_state</name>
        <param>
          <type>const <ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref> *</type>
          <declname>obj</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>part</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kisvegabor/projects/littlevgl/eclipse-workspace/lv_sim_eclipse_sdl/lvgl/scripts/release_tmp/lvgl/src/lv_core/lv_obj.h" line="1294" column="1"/>
      </memberdef>
      <memberdef kind="function" id="lv__obj_8h_1ad1b1dc4d61fd765cfd8958254af36b29" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>lv_signal_cb_t</type>
        <definition>lv_signal_cb_t lv_obj_get_signal_cb</definition>
        <argsstring>(const lv_obj_t *obj)</argsstring>
        <name>lv_obj_get_signal_cb</name>
        <param>
          <type>const <ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref> *</type>
          <declname>obj</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the signal function of an object <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>obj</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to an object </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the signal function </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kisvegabor/projects/littlevgl/eclipse-workspace/lv_sim_eclipse_sdl/lvgl/scripts/release_tmp/lvgl/src/lv_core/lv_obj.h" line="1301" column="1"/>
      </memberdef>
      <memberdef kind="function" id="lv__obj_8h_1a5bafa0af4ab8c37e722cb8c65da04131" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="lv__obj_8h_1ab1b5bf7b2fac5b7cf204a7be845a6679" kindref="member">lv_design_cb_t</ref></type>
        <definition>lv_design_cb_t lv_obj_get_design_cb</definition>
        <argsstring>(const lv_obj_t *obj)</argsstring>
        <name>lv_obj_get_design_cb</name>
        <param>
          <type>const <ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref> *</type>
          <declname>obj</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the design function of an object <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>obj</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to an object </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the design function </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kisvegabor/projects/littlevgl/eclipse-workspace/lv_sim_eclipse_sdl/lvgl/scripts/release_tmp/lvgl/src/lv_core/lv_obj.h" line="1308" column="1"/>
      </memberdef>
      <memberdef kind="function" id="lv__obj_8h_1ae9f75ecad464d80305bf6b4064ba23f7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="lv__obj_8h_1a9366c6b8b950ee09075cdfe83105a81f" kindref="member">lv_event_cb_t</ref></type>
        <definition>lv_event_cb_t lv_obj_get_event_cb</definition>
        <argsstring>(const lv_obj_t *obj)</argsstring>
        <name>lv_obj_get_event_cb</name>
        <param>
          <type>const <ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref> *</type>
          <declname>obj</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the event function of an object <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>obj</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to an object </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the event function </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kisvegabor/projects/littlevgl/eclipse-workspace/lv_sim_eclipse_sdl/lvgl/scripts/release_tmp/lvgl/src/lv_core/lv_obj.h" line="1315" column="1"/>
      </memberdef>
      <memberdef kind="function" id="lv__obj_8h_1a8396c9b1fd06d3358cccdaa18dc55712" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool lv_obj_is_point_on_coords</definition>
        <argsstring>(lv_obj_t *obj, const lv_point_t *point)</argsstring>
        <name>lv_obj_is_point_on_coords</name>
        <param>
          <type><ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref> *</type>
          <declname>obj</declname>
        </param>
        <param>
          <type>const <ref refid="structlv__point__t" kindref="compound">lv_point_t</ref> *</type>
          <declname>point</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Check if a given screen-space point is on an object&apos;s coordinates.</para><para>This method is intended to be used mainly by advanced hit testing algorithms to check whether the point is even within the object (as an optimization). <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>obj</parametername>
</parameternamelist>
<parameterdescription>
<para>object to check </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>point</parametername>
</parameternamelist>
<parameterdescription>
<para>screen-space point </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kisvegabor/projects/littlevgl/eclipse-workspace/lv_sim_eclipse_sdl/lvgl/scripts/release_tmp/lvgl/src/lv_core/lv_obj.h" line="1329" column="1"/>
      </memberdef>
      <memberdef kind="function" id="lv__obj_8h_1ad098c46b922e6debfaa7e6a130b63c08" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool lv_obj_hittest</definition>
        <argsstring>(lv_obj_t *obj, lv_point_t *point)</argsstring>
        <name>lv_obj_hittest</name>
        <param>
          <type><ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref> *</type>
          <declname>obj</declname>
        </param>
        <param>
          <type><ref refid="structlv__point__t" kindref="compound">lv_point_t</ref> *</type>
          <declname>point</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Hit-test an object given a particular point in screen space. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>obj</parametername>
</parameternamelist>
<parameterdescription>
<para>object to hit-test </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>point</parametername>
</parameternamelist>
<parameterdescription>
<para>screen-space point </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true if the object is considered under the point </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kisvegabor/projects/littlevgl/eclipse-workspace/lv_sim_eclipse_sdl/lvgl/scripts/release_tmp/lvgl/src/lv_core/lv_obj.h" line="1337" column="1"/>
      </memberdef>
      <memberdef kind="function" id="lv__obj_8h_1a0c06278b59453b3bfa04bd63981bca3b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void *</type>
        <definition>void* lv_obj_get_ext_attr</definition>
        <argsstring>(const lv_obj_t *obj)</argsstring>
        <name>lv_obj_get_ext_attr</name>
        <param>
          <type>const <ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref> *</type>
          <declname>obj</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the ext pointer <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>obj</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to an object </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the ext pointer but not the dynamic version Use it as ext-&gt;data1, and NOT da(ext)-&gt;data1 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kisvegabor/projects/littlevgl/eclipse-workspace/lv_sim_eclipse_sdl/lvgl/scripts/release_tmp/lvgl/src/lv_core/lv_obj.h" line="1345" column="1"/>
      </memberdef>
      <memberdef kind="function" id="lv__obj_8h_1af939d1c447779b6f93bbdcf5a673ec69" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void lv_obj_get_type</definition>
        <argsstring>(const lv_obj_t *obj, lv_obj_type_t *buf)</argsstring>
        <name>lv_obj_get_type</name>
        <param>
          <type>const <ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref> *</type>
          <declname>obj</declname>
        </param>
        <param>
          <type><ref refid="structlv__obj__type__t" kindref="compound">lv_obj_type_t</ref> *</type>
          <declname>buf</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get object&apos;s and its ancestors type. Put their name in <computeroutput>type_buf</computeroutput> starting with the current type. E.g. buf.type[0]=&quot;lv_btn&quot;, buf.type[1]=&quot;lv_cont&quot;, buf.type[2]=&quot;lv_obj&quot; <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>obj</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to an object which type should be get </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>buf</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to an <computeroutput><ref refid="structlv__obj__type__t" kindref="compound">lv_obj_type_t</ref></computeroutput> buffer to store the types </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kisvegabor/projects/littlevgl/eclipse-workspace/lv_sim_eclipse_sdl/lvgl/scripts/release_tmp/lvgl/src/lv_core/lv_obj.h" line="1353" column="1"/>
      </memberdef>
      <memberdef kind="function" id="lv__obj_8h_1a0861c9a603fa9208934ed98314f793f4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>lv_obj_user_data_t</type>
        <definition>lv_obj_user_data_t lv_obj_get_user_data</definition>
        <argsstring>(const lv_obj_t *obj)</argsstring>
        <name>lv_obj_get_user_data</name>
        <param>
          <type>const <ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref> *</type>
          <declname>obj</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the object&apos;s user data <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>obj</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to an object </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>user data </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kisvegabor/projects/littlevgl/eclipse-workspace/lv_sim_eclipse_sdl/lvgl/scripts/release_tmp/lvgl/src/lv_core/lv_obj.h" line="1361" column="1"/>
      </memberdef>
      <memberdef kind="function" id="lv__obj_8h_1a21984ea47aedf381a471e02251870cd3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>lv_obj_user_data_t *</type>
        <definition>lv_obj_user_data_t* lv_obj_get_user_data_ptr</definition>
        <argsstring>(const lv_obj_t *obj)</argsstring>
        <name>lv_obj_get_user_data_ptr</name>
        <param>
          <type>const <ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref> *</type>
          <declname>obj</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get a pointer to the object&apos;s user data <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>obj</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to an object </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>pointer to the user data </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kisvegabor/projects/littlevgl/eclipse-workspace/lv_sim_eclipse_sdl/lvgl/scripts/release_tmp/lvgl/src/lv_core/lv_obj.h" line="1368" column="1"/>
      </memberdef>
      <memberdef kind="function" id="lv__obj_8h_1a36065b16e9a7fa27ba0b7c08b9f4229f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void lv_obj_set_user_data</definition>
        <argsstring>(lv_obj_t *obj, lv_obj_user_data_t data)</argsstring>
        <name>lv_obj_set_user_data</name>
        <param>
          <type><ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref> *</type>
          <declname>obj</declname>
        </param>
        <param>
          <type>lv_obj_user_data_t</type>
          <declname>data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set the object&apos;s user data. The data will be copied. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>obj</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to an object </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>user data </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kisvegabor/projects/littlevgl/eclipse-workspace/lv_sim_eclipse_sdl/lvgl/scripts/release_tmp/lvgl/src/lv_core/lv_obj.h" line="1375" column="1"/>
      </memberdef>
      <memberdef kind="function" id="lv__obj_8h_1a4096ec8a90cb787d671867b9bd43dc73" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void *</type>
        <definition>void* lv_obj_get_group</definition>
        <argsstring>(const lv_obj_t *obj)</argsstring>
        <name>lv_obj_get_group</name>
        <param>
          <type>const <ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref> *</type>
          <declname>obj</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the group of the object <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>obj</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to an object </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the pointer to group of the object </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kisvegabor/projects/littlevgl/eclipse-workspace/lv_sim_eclipse_sdl/lvgl/scripts/release_tmp/lvgl/src/lv_core/lv_obj.h" line="1384" column="1"/>
      </memberdef>
      <memberdef kind="function" id="lv__obj_8h_1ae407987ad633021bd9119141b6506e1e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool lv_obj_is_focused</definition>
        <argsstring>(const lv_obj_t *obj)</argsstring>
        <name>lv_obj_is_focused</name>
        <param>
          <type>const <ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref> *</type>
          <declname>obj</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Tell whether the object is the focused object of a group or not. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>obj</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to an object </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true: the object is focused, false: the object is not focused or not in a group </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kisvegabor/projects/littlevgl/eclipse-workspace/lv_sim_eclipse_sdl/lvgl/scripts/release_tmp/lvgl/src/lv_core/lv_obj.h" line="1391" column="1"/>
      </memberdef>
      <memberdef kind="function" id="lv__obj_8h_1ad8ae791baac274899ef80f67e7129a0b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref> *</type>
        <definition>lv_obj_t* lv_obj_get_focused_obj</definition>
        <argsstring>(const lv_obj_t *obj)</argsstring>
        <name>lv_obj_get_focused_obj</name>
        <param>
          <type>const <ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref> *</type>
          <declname>obj</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the really focused object by taking <computeroutput>focus_parent</computeroutput> into account. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>obj</parametername>
</parameternamelist>
<parameterdescription>
<para>the start object </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the object to really focus </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kisvegabor/projects/littlevgl/eclipse-workspace/lv_sim_eclipse_sdl/lvgl/scripts/release_tmp/lvgl/src/lv_core/lv_obj.h" line="1398" column="1"/>
      </memberdef>
      <memberdef kind="function" id="lv__obj_8h_1a9ca5805e173f2d33bc0fecc6f9920efa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>lv_res_t</type>
        <definition>lv_res_t lv_obj_handle_get_type_signal</definition>
        <argsstring>(lv_obj_type_t *buf, const char *name)</argsstring>
        <name>lv_obj_handle_get_type_signal</name>
        <param>
          <type><ref refid="structlv__obj__type__t" kindref="compound">lv_obj_type_t</ref> *</type>
          <declname>buf</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Used in the signal callback to handle <computeroutput>LV_SIGNAL_GET_TYPE</computeroutput> signal <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>buf</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to <computeroutput><ref refid="structlv__obj__type__t" kindref="compound">lv_obj_type_t</ref></computeroutput>. (<computeroutput>param</computeroutput> in the signal callback) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>name of the object. E.g. &quot;lv_btn&quot;. (Only the pointer is saved) </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>LV_RES_OK </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kisvegabor/projects/littlevgl/eclipse-workspace/lv_sim_eclipse_sdl/lvgl/scripts/release_tmp/lvgl/src/lv_core/lv_obj.h" line="1410" column="1"/>
      </memberdef>
      <memberdef kind="function" id="lv__obj_8h_1aabe77cc0865ce04cb1d881021330b760" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void lv_obj_init_draw_rect_dsc</definition>
        <argsstring>(lv_obj_t *obj, uint8_t type, lv_draw_rect_dsc_t *draw_dsc)</argsstring>
        <name>lv_obj_init_draw_rect_dsc</name>
        <param>
          <type><ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref> *</type>
          <declname>obj</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>type</declname>
        </param>
        <param>
          <type><ref refid="structlv__draw__rect__dsc__t" kindref="compound">lv_draw_rect_dsc_t</ref> *</type>
          <declname>draw_dsc</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Initialize a rectangle descriptor from an object&apos;s styles <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>obj</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to an object </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>type</parametername>
</parameternamelist>
<parameterdescription>
<para>type of style. E.g. <computeroutput>LV_OBJ_PART_MAIN</computeroutput>, <computeroutput>LV_BTN_SLIDER_KOB</computeroutput> </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>draw_dsc</parametername>
</parameternamelist>
<parameterdescription>
<para>the descriptor the initialize </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>Only the relevant fields will be set. E.g. if <computeroutput>border width == 0</computeroutput> the other border properties won&apos;t be evaluated. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kisvegabor/projects/littlevgl/eclipse-workspace/lv_sim_eclipse_sdl/lvgl/scripts/release_tmp/lvgl/src/lv_core/lv_obj.h" line="1420" column="1"/>
      </memberdef>
      <memberdef kind="function" id="lv__obj_8h_1a959db09d2b9ecfb59b5e160ad0e230fd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void lv_obj_init_draw_label_dsc</definition>
        <argsstring>(lv_obj_t *obj, uint8_t type, lv_draw_label_dsc_t *draw_dsc)</argsstring>
        <name>lv_obj_init_draw_label_dsc</name>
        <param>
          <type><ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref> *</type>
          <declname>obj</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>type</declname>
        </param>
        <param>
          <type><ref refid="structlv__draw__label__dsc__t" kindref="compound">lv_draw_label_dsc_t</ref> *</type>
          <declname>draw_dsc</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kisvegabor/projects/littlevgl/eclipse-workspace/lv_sim_eclipse_sdl/lvgl/scripts/release_tmp/lvgl/src/lv_core/lv_obj.h" line="1422" column="1"/>
      </memberdef>
      <memberdef kind="function" id="lv__obj_8h_1a3904947d8c5aeacf257b046f77b76635" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void lv_obj_init_draw_img_dsc</definition>
        <argsstring>(lv_obj_t *obj, uint8_t part, lv_draw_img_dsc_t *draw_dsc)</argsstring>
        <name>lv_obj_init_draw_img_dsc</name>
        <param>
          <type><ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref> *</type>
          <declname>obj</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>part</declname>
        </param>
        <param>
          <type><ref refid="structlv__draw__img__dsc__t" kindref="compound">lv_draw_img_dsc_t</ref> *</type>
          <declname>draw_dsc</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kisvegabor/projects/littlevgl/eclipse-workspace/lv_sim_eclipse_sdl/lvgl/scripts/release_tmp/lvgl/src/lv_core/lv_obj.h" line="1424" column="1"/>
      </memberdef>
      <memberdef kind="function" id="lv__obj_8h_1a47ea3a64ffe3ac90764a7ee43054805f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void lv_obj_init_draw_line_dsc</definition>
        <argsstring>(lv_obj_t *obj, uint8_t part, lv_draw_line_dsc_t *draw_dsc)</argsstring>
        <name>lv_obj_init_draw_line_dsc</name>
        <param>
          <type><ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref> *</type>
          <declname>obj</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>part</declname>
        </param>
        <param>
          <type><ref refid="structlv__draw__line__dsc__t" kindref="compound">lv_draw_line_dsc_t</ref> *</type>
          <declname>draw_dsc</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kisvegabor/projects/littlevgl/eclipse-workspace/lv_sim_eclipse_sdl/lvgl/scripts/release_tmp/lvgl/src/lv_core/lv_obj.h" line="1426" column="1"/>
      </memberdef>
      <memberdef kind="function" id="lv__obj_8h_1a7f2ed5d3200888653838126ba72d59ab" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>lv_coord_t</type>
        <definition>lv_coord_t lv_obj_get_draw_rect_ext_pad_size</definition>
        <argsstring>(lv_obj_t *obj, uint8_t part)</argsstring>
        <name>lv_obj_get_draw_rect_ext_pad_size</name>
        <param>
          <type><ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref> *</type>
          <declname>obj</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>part</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the required extra size (around the object&apos;s part) to draw shadow, outline, value etc. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>obj</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to an object </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>part</parametername>
</parameternamelist>
<parameterdescription>
<para>part of the object </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kisvegabor/projects/littlevgl/eclipse-workspace/lv_sim_eclipse_sdl/lvgl/scripts/release_tmp/lvgl/src/lv_core/lv_obj.h" line="1433" column="1"/>
      </memberdef>
      <memberdef kind="function" id="lv__obj_8h_1a9bb76c83de5e1992f1c302bbd178f693" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void lv_obj_fade_in</definition>
        <argsstring>(lv_obj_t *obj, uint32_t time, uint32_t delay)</argsstring>
        <name>lv_obj_fade_in</name>
        <param>
          <type><ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref> *</type>
          <declname>obj</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>time</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>delay</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Fade in (from transparent to fully cover) an object and all its children using an <computeroutput>opa_scale</computeroutput> animation. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>obj</parametername>
</parameternamelist>
<parameterdescription>
<para>the object to fade in </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>time</parametername>
</parameternamelist>
<parameterdescription>
<para>duration of the animation [ms] </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>delay</parametername>
</parameternamelist>
<parameterdescription>
<para>wait before the animation starts [ms] </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kisvegabor/projects/littlevgl/eclipse-workspace/lv_sim_eclipse_sdl/lvgl/scripts/release_tmp/lvgl/src/lv_core/lv_obj.h" line="1441" column="1"/>
      </memberdef>
      <memberdef kind="function" id="lv__obj_8h_1a4140039b26c41b651bc8909b388f9042" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void lv_obj_fade_out</definition>
        <argsstring>(lv_obj_t *obj, uint32_t time, uint32_t delay)</argsstring>
        <name>lv_obj_fade_out</name>
        <param>
          <type><ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref> *</type>
          <declname>obj</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>time</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>delay</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Fade out (from fully cover to transparent) an object and all its children using an <computeroutput>opa_scale</computeroutput> animation. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>obj</parametername>
</parameternamelist>
<parameterdescription>
<para>the object to fade in </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>time</parametername>
</parameternamelist>
<parameterdescription>
<para>duration of the animation [ms] </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>delay</parametername>
</parameternamelist>
<parameterdescription>
<para>wait before the animation starts [ms] </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kisvegabor/projects/littlevgl/eclipse-workspace/lv_sim_eclipse_sdl/lvgl/scripts/release_tmp/lvgl/src/lv_core/lv_obj.h" line="1449" column="1"/>
      </memberdef>
      <memberdef kind="function" id="lv__obj_8h_1ac689a68d524d31df5a7444c179a5ee67" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool lv_debug_check_obj_type</definition>
        <argsstring>(const lv_obj_t *obj, const char *obj_type)</argsstring>
        <name>lv_debug_check_obj_type</name>
        <param>
          <type>const <ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref> *</type>
          <declname>obj</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>obj_type</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Check if any object has a given type <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>obj</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to an object </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>obj_type</parametername>
</parameternamelist>
<parameterdescription>
<para>type of the object. (e.g. &quot;lv_btn&quot;) </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true: valid </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kisvegabor/projects/littlevgl/eclipse-workspace/lv_sim_eclipse_sdl/lvgl/scripts/release_tmp/lvgl/src/lv_core/lv_obj.h" line="1457" column="1"/>
      </memberdef>
      <memberdef kind="function" id="lv__obj_8h_1ac0a7ddbd150752e76ac6c97f004774ee" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool lv_debug_check_obj_valid</definition>
        <argsstring>(const lv_obj_t *obj)</argsstring>
        <name>lv_debug_check_obj_valid</name>
        <param>
          <type>const <ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref> *</type>
          <declname>obj</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Check if any object is still &quot;alive&quot;, and part of the hierarchy <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>obj</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to an object </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>obj_type</parametername>
</parameternamelist>
<parameterdescription>
<para>type of the object. (e.g. &quot;lv_btn&quot;) </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true: valid </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kisvegabor/projects/littlevgl/eclipse-workspace/lv_sim_eclipse_sdl/lvgl/scripts/release_tmp/lvgl/src/lv_core/lv_obj.h" line="1465" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"></codeline>
<codeline lineno="6"><highlight class="preprocessor">#ifndef<sp/>LV_OBJ_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LV_OBJ_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">/*********************</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>INCLUDES</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*********************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../lv_conf_internal.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stddef.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdbool.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="lv__style_8h" kindref="compound">lv_style.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../lv_misc/lv_types.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../lv_misc/lv_area.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../lv_misc/lv_color.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../lv_misc/lv_debug.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../lv_hal/lv_hal.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../lv_draw/lv_draw_rect.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../lv_draw/lv_draw_label.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../lv_draw/lv_draw_line.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../lv_draw/lv_draw_img.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="comment">/*********************</highlight></codeline>
<codeline lineno="32"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>DEFINES</highlight></codeline>
<codeline lineno="33"><highlight class="comment"><sp/>*********************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="comment">/*Error<sp/>check<sp/>of<sp/>lv_conf.h*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>LV_HOR_RES_MAX<sp/>==<sp/>0<sp/>||<sp/>LV_VER_RES_MAX<sp/>==<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="preprocessor">#error<sp/>&quot;LVGL:<sp/>LV_HOR_RES_MAX<sp/>and<sp/>LV_VER_RES_MAX<sp/>must<sp/>be<sp/>greater<sp/>than<sp/>0&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>LV_ANTIALIAS<sp/>&gt;<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="preprocessor">#error<sp/>&quot;LVGL:<sp/>LV_ANTIALIAS<sp/>can<sp/>be<sp/>only<sp/>0<sp/>or<sp/>1&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LV_MAX_ANCESTOR_NUM<sp/>8</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LV_EXT_CLICK_AREA_OFF<sp/><sp/><sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LV_EXT_CLICK_AREA_TINY<sp/><sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LV_EXT_CLICK_AREA_FULL<sp/><sp/>2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>_LV_OBJ_PART_VIRTUAL_FIRST<sp/>0x01</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>_LV_OBJ_PART_REAL_FIRST<sp/><sp/><sp/><sp/>0x40</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="comment">/**********************</highlight></codeline>
<codeline lineno="54"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>TYPEDEFS</highlight></codeline>
<codeline lineno="55"><highlight class="comment"><sp/>**********************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct__lv__obj__t" kindref="compound">_lv_obj_t</ref>;</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="62" refid="lv__obj_8h_1a99fb83031ce9923c84392b4e92f956b5a1f3afabd4deede77515858ad0308728c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="lv__obj_8h_1a99fb83031ce9923c84392b4e92f956b5a1f3afabd4deede77515858ad0308728c" kindref="member">LV_DESIGN_DRAW_MAIN</ref>,<sp/></highlight></codeline>
<codeline lineno="63" refid="lv__obj_8h_1a99fb83031ce9923c84392b4e92f956b5a52e693710212c03f55ec0dd3927f1d2e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="lv__obj_8h_1a99fb83031ce9923c84392b4e92f956b5a52e693710212c03f55ec0dd3927f1d2e" kindref="member">LV_DESIGN_DRAW_POST</ref>,<sp/></highlight></codeline>
<codeline lineno="64" refid="lv__obj_8h_1a99fb83031ce9923c84392b4e92f956b5a48e3eef6dffe9314f142ac9b38752c40" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="lv__obj_8h_1a99fb83031ce9923c84392b4e92f956b5a48e3eef6dffe9314f142ac9b38752c40" kindref="member">LV_DESIGN_COVER_CHK</ref>,<sp/></highlight></codeline>
<codeline lineno="65"><highlight class="normal">};</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>uint8_t<sp/>lv_design_mode_t;</highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="71" refid="lv__obj_8h_1abc6126af1d45847bc59afa0aa3216b04ac79f7792ca4959c203bef9016ee812a6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="lv__obj_8h_1abc6126af1d45847bc59afa0aa3216b04ac79f7792ca4959c203bef9016ee812a6" kindref="member">LV_DESIGN_RES_OK</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="72" refid="lv__obj_8h_1abc6126af1d45847bc59afa0aa3216b04a1ed44968ec6dc9a9d9db137b6801aea7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="lv__obj_8h_1abc6126af1d45847bc59afa0aa3216b04a1ed44968ec6dc9a9d9db137b6801aea7" kindref="member">LV_DESIGN_RES_COVER</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="73" refid="lv__obj_8h_1abc6126af1d45847bc59afa0aa3216b04aeac794b1c61f85c5aaa5ff04d2f35040" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="lv__obj_8h_1abc6126af1d45847bc59afa0aa3216b04aeac794b1c61f85c5aaa5ff04d2f35040" kindref="member">LV_DESIGN_RES_NOT_COVER</ref>,<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="74" refid="lv__obj_8h_1abc6126af1d45847bc59afa0aa3216b04a9ec4c7d705dc1d20e45c034eaaddef62" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="lv__obj_8h_1abc6126af1d45847bc59afa0aa3216b04a9ec4c7d705dc1d20e45c034eaaddef62" kindref="member">LV_DESIGN_RES_MASKED</ref>,<sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="75"><highlight class="normal">};</highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>uint8_t<sp/>lv_design_res_t;</highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="82" refid="lv__obj_8h_1ab1b5bf7b2fac5b7cf204a7be845a6679" refkind="member"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>lv_design_res_t<sp/>(*<ref refid="lv__obj_8h_1ab1b5bf7b2fac5b7cf204a7be845a6679" kindref="member">lv_design_cb_t</ref>)(</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct__lv__obj__t" kindref="compound">_lv_obj_t</ref><sp/>*<sp/>obj,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structlv__area__t" kindref="compound">lv_area_t</ref><sp/>*<sp/>clip_area,<sp/>lv_design_mode_t<sp/>mode);</highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="85" refid="lv__obj_8h_1adc29c2ff13d900c2f185ee95427fb06ca85e0d9a885dadabf175b273bd44c93ba" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="lv__obj_8h_1adc29c2ff13d900c2f185ee95427fb06ca85e0d9a885dadabf175b273bd44c93ba" kindref="member">LV_EVENT_PRESSED</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="86" refid="lv__obj_8h_1adc29c2ff13d900c2f185ee95427fb06ca560856c6e0eccbbff88521dbd740c64c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="lv__obj_8h_1adc29c2ff13d900c2f185ee95427fb06ca560856c6e0eccbbff88521dbd740c64c" kindref="member">LV_EVENT_PRESSING</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="87" refid="lv__obj_8h_1adc29c2ff13d900c2f185ee95427fb06ca8c4e44f04b065ecd5bb5b858d02b01fc" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="lv__obj_8h_1adc29c2ff13d900c2f185ee95427fb06ca8c4e44f04b065ecd5bb5b858d02b01fc" kindref="member">LV_EVENT_PRESS_LOST</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="88" refid="lv__obj_8h_1adc29c2ff13d900c2f185ee95427fb06caf40c18f3713f9fd7a2b3a86bbe0ce91d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="lv__obj_8h_1adc29c2ff13d900c2f185ee95427fb06caf40c18f3713f9fd7a2b3a86bbe0ce91d" kindref="member">LV_EVENT_SHORT_CLICKED</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="89" refid="lv__obj_8h_1adc29c2ff13d900c2f185ee95427fb06caa7aa6dc2a228e74fc21f3044e874ff84" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="lv__obj_8h_1adc29c2ff13d900c2f185ee95427fb06caa7aa6dc2a228e74fc21f3044e874ff84" kindref="member">LV_EVENT_LONG_PRESSED</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="90" refid="lv__obj_8h_1adc29c2ff13d900c2f185ee95427fb06caf75268f7d57e4d698a5cd4399378dc4b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="lv__obj_8h_1adc29c2ff13d900c2f185ee95427fb06caf75268f7d57e4d698a5cd4399378dc4b" kindref="member">LV_EVENT_LONG_PRESSED_REPEAT</ref>,<sp/></highlight></codeline>
<codeline lineno="92" refid="lv__obj_8h_1adc29c2ff13d900c2f185ee95427fb06caa02bc86fc8e7a7edab3634a816c19ab6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="lv__obj_8h_1adc29c2ff13d900c2f185ee95427fb06caa02bc86fc8e7a7edab3634a816c19ab6" kindref="member">LV_EVENT_CLICKED</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="93" refid="lv__obj_8h_1adc29c2ff13d900c2f185ee95427fb06ca57be5704cf368a6ae442eb3642b52d4b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="lv__obj_8h_1adc29c2ff13d900c2f185ee95427fb06ca57be5704cf368a6ae442eb3642b52d4b" kindref="member">LV_EVENT_RELEASED</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/>LV_EVENT_DRAG_BEGIN,</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/>LV_EVENT_DRAG_END,</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/>LV_EVENT_DRAG_THROW_BEGIN,</highlight></codeline>
<codeline lineno="97" refid="lv__obj_8h_1adc29c2ff13d900c2f185ee95427fb06ca0d85cf2703b9372c524d5c31d4904748" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="lv__obj_8h_1adc29c2ff13d900c2f185ee95427fb06ca0d85cf2703b9372c524d5c31d4904748" kindref="member">LV_EVENT_GESTURE</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/>LV_EVENT_KEY,</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/>LV_EVENT_FOCUSED,</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/>LV_EVENT_DEFOCUSED,</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/>LV_EVENT_LEAVE,</highlight></codeline>
<codeline lineno="102" refid="lv__obj_8h_1adc29c2ff13d900c2f185ee95427fb06ca46740aecc431a95080e7ebd9aca815e3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="lv__obj_8h_1adc29c2ff13d900c2f185ee95427fb06ca46740aecc431a95080e7ebd9aca815e3" kindref="member">LV_EVENT_VALUE_CHANGED</ref>,<sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/>LV_EVENT_INSERT,</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/>LV_EVENT_REFRESH,</highlight></codeline>
<codeline lineno="105" refid="lv__obj_8h_1adc29c2ff13d900c2f185ee95427fb06ca7df0cf4bd306549bead4a83ea2cb49d2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="lv__obj_8h_1adc29c2ff13d900c2f185ee95427fb06ca7df0cf4bd306549bead4a83ea2cb49d2" kindref="member">LV_EVENT_APPLY</ref>,<sp/><sp/></highlight></codeline>
<codeline lineno="106" refid="lv__obj_8h_1adc29c2ff13d900c2f185ee95427fb06cafbc2a898addfb4bc699b9f7a4f66150d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="lv__obj_8h_1adc29c2ff13d900c2f185ee95427fb06cafbc2a898addfb4bc699b9f7a4f66150d" kindref="member">LV_EVENT_CANCEL</ref>,<sp/></highlight></codeline>
<codeline lineno="107" refid="lv__obj_8h_1adc29c2ff13d900c2f185ee95427fb06ca2b6e10a27dd52c80f3ed04e4bc3ced2b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="lv__obj_8h_1adc29c2ff13d900c2f185ee95427fb06ca2b6e10a27dd52c80f3ed04e4bc3ced2b" kindref="member">LV_EVENT_DELETE</ref>,<sp/></highlight></codeline>
<codeline lineno="108"><highlight class="normal">};</highlight></codeline>
<codeline lineno="109" refid="lv__obj_8h_1a81567353752c588831ed89a3b15b4ca0" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>uint8_t<sp/><ref refid="lv__obj_8h_1a81567353752c588831ed89a3b15b4ca0" kindref="member">lv_event_t</ref>;<sp/></highlight></codeline>
<codeline lineno="116" refid="lv__obj_8h_1a9366c6b8b950ee09075cdfe83105a81f" refkind="member"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>void<sp/>(*<ref refid="lv__obj_8h_1a9366c6b8b950ee09075cdfe83105a81f" kindref="member">lv_event_cb_t</ref>)(</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct__lv__obj__t" kindref="compound">_lv_obj_t</ref><sp/>*<sp/>obj,<sp/>lv_event_t<sp/>event);</highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*General<sp/>signals*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="123" refid="lv__obj_8h_1a61dadd085c1777f559549e05962b2c9eadbc2556344c61af73876d1119e16ed39" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="lv__obj_8h_1a61dadd085c1777f559549e05962b2c9eadbc2556344c61af73876d1119e16ed39" kindref="member">LV_SIGNAL_CLEANUP</ref>,<sp/></highlight></codeline>
<codeline lineno="124" refid="lv__obj_8h_1a61dadd085c1777f559549e05962b2c9ea7431d188c928d451bb7d9d9d874a3c25" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="lv__obj_8h_1a61dadd085c1777f559549e05962b2c9ea7431d188c928d451bb7d9d9d874a3c25" kindref="member">LV_SIGNAL_CHILD_CHG</ref>,<sp/></highlight></codeline>
<codeline lineno="125" refid="lv__obj_8h_1a61dadd085c1777f559549e05962b2c9ea228ca2347183d43ac5243fdf954854c6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="lv__obj_8h_1a61dadd085c1777f559549e05962b2c9ea228ca2347183d43ac5243fdf954854c6" kindref="member">LV_SIGNAL_COORD_CHG</ref>,<sp/></highlight></codeline>
<codeline lineno="126" refid="lv__obj_8h_1a61dadd085c1777f559549e05962b2c9ea7ed449098cd77353608f1574a01e0f88" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="lv__obj_8h_1a61dadd085c1777f559549e05962b2c9ea7ed449098cd77353608f1574a01e0f88" kindref="member">LV_SIGNAL_PARENT_SIZE_CHG</ref>,<sp/></highlight></codeline>
<codeline lineno="127" refid="lv__obj_8h_1a61dadd085c1777f559549e05962b2c9ead63b9c7fd5fef5aadb7fc36b5801f22a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="lv__obj_8h_1a61dadd085c1777f559549e05962b2c9ead63b9c7fd5fef5aadb7fc36b5801f22a" kindref="member">LV_SIGNAL_STYLE_CHG</ref>,<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="128" refid="lv__obj_8h_1a61dadd085c1777f559549e05962b2c9ea0309e2b76baf4685660bd8c6f84f1b15" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="lv__obj_8h_1a61dadd085c1777f559549e05962b2c9ea0309e2b76baf4685660bd8c6f84f1b15" kindref="member">LV_SIGNAL_BASE_DIR_CHG</ref>,<sp/></highlight></codeline>
<codeline lineno="129" refid="lv__obj_8h_1a61dadd085c1777f559549e05962b2c9ea2d83e1e99c8e778911f5bcbf94722c08" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="lv__obj_8h_1a61dadd085c1777f559549e05962b2c9ea2d83e1e99c8e778911f5bcbf94722c08" kindref="member">LV_SIGNAL_REFR_EXT_DRAW_PAD</ref>,<sp/></highlight></codeline>
<codeline lineno="130" refid="lv__obj_8h_1a61dadd085c1777f559549e05962b2c9eaa34afa204372de2536c237cf3ef9f706" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="lv__obj_8h_1a61dadd085c1777f559549e05962b2c9eaa34afa204372de2536c237cf3ef9f706" kindref="member">LV_SIGNAL_GET_TYPE</ref>,<sp/></highlight></codeline>
<codeline lineno="131" refid="lv__obj_8h_1a61dadd085c1777f559549e05962b2c9ea96ef659d4ecc2545c5d707930c5bace0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="lv__obj_8h_1a61dadd085c1777f559549e05962b2c9ea96ef659d4ecc2545c5d707930c5bace0" kindref="member">LV_SIGNAL_GET_STYLE</ref>,<sp/></highlight></codeline>
<codeline lineno="132" refid="lv__obj_8h_1a61dadd085c1777f559549e05962b2c9eaa5bebb37a5452d368f8bf2e8899c0558" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="lv__obj_8h_1a61dadd085c1777f559549e05962b2c9eaa5bebb37a5452d368f8bf2e8899c0558" kindref="member">LV_SIGNAL_GET_STATE_DSC</ref>,<sp/></highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*Input<sp/>device<sp/>related*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="135" refid="lv__obj_8h_1a61dadd085c1777f559549e05962b2c9eaaf2d872bea05c3f9e65191b30c432f08" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="lv__obj_8h_1a61dadd085c1777f559549e05962b2c9eaaf2d872bea05c3f9e65191b30c432f08" kindref="member">LV_SIGNAL_HIT_TEST</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="136" refid="lv__obj_8h_1a61dadd085c1777f559549e05962b2c9ea9b8e8b61f251c07a4c23b11433d057bc" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="lv__obj_8h_1a61dadd085c1777f559549e05962b2c9ea9b8e8b61f251c07a4c23b11433d057bc" kindref="member">LV_SIGNAL_PRESSED</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="137" refid="lv__obj_8h_1a61dadd085c1777f559549e05962b2c9eaf0da634720521b34abe41aaa384626de" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="lv__obj_8h_1a61dadd085c1777f559549e05962b2c9eaf0da634720521b34abe41aaa384626de" kindref="member">LV_SIGNAL_PRESSING</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="138" refid="lv__obj_8h_1a61dadd085c1777f559549e05962b2c9ea9055a5dd2dc8415ae8d9757689f38693" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="lv__obj_8h_1a61dadd085c1777f559549e05962b2c9ea9055a5dd2dc8415ae8d9757689f38693" kindref="member">LV_SIGNAL_PRESS_LOST</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="139" refid="lv__obj_8h_1a61dadd085c1777f559549e05962b2c9ea8f500f5ed0bab006bc365e67496ac30f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="lv__obj_8h_1a61dadd085c1777f559549e05962b2c9ea8f500f5ed0bab006bc365e67496ac30f" kindref="member">LV_SIGNAL_RELEASED</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="140" refid="lv__obj_8h_1a61dadd085c1777f559549e05962b2c9ea2d9e0caa05c29ce6c319bb5bca8fae26" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="lv__obj_8h_1a61dadd085c1777f559549e05962b2c9ea2d9e0caa05c29ce6c319bb5bca8fae26" kindref="member">LV_SIGNAL_LONG_PRESS</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="141" refid="lv__obj_8h_1a61dadd085c1777f559549e05962b2c9ea103008d084ba8829b6bf76670251e465" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="lv__obj_8h_1a61dadd085c1777f559549e05962b2c9ea103008d084ba8829b6bf76670251e465" kindref="member">LV_SIGNAL_LONG_PRESS_REP</ref>,<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/>LV_SIGNAL_DRAG_BEGIN,</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/>LV_SIGNAL_DRAG_THROW_BEGIN,</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/>LV_SIGNAL_DRAG_END,</highlight></codeline>
<codeline lineno="145" refid="lv__obj_8h_1a61dadd085c1777f559549e05962b2c9eac4d91026aebff613fe7f2f75761c8a04" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="lv__obj_8h_1a61dadd085c1777f559549e05962b2c9eac4d91026aebff613fe7f2f75761c8a04" kindref="member">LV_SIGNAL_GESTURE</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="146" refid="lv__obj_8h_1a61dadd085c1777f559549e05962b2c9eac10d8dbf287bcda2e8d3efbaa7ddd2e1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="lv__obj_8h_1a61dadd085c1777f559549e05962b2c9eac10d8dbf287bcda2e8d3efbaa7ddd2e1" kindref="member">LV_SIGNAL_LEAVE</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*Group<sp/>related*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/>LV_SIGNAL_FOCUS,</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/>LV_SIGNAL_DEFOCUS,</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/>LV_SIGNAL_CONTROL,</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/>LV_SIGNAL_GET_EDITABLE,</highlight></codeline>
<codeline lineno="153"><highlight class="normal">};</highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>uint8_t<sp/>lv_signal_t;</highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>lv_res_t<sp/>(*lv_signal_cb_t)(</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct__lv__obj__t" kindref="compound">_lv_obj_t</ref><sp/>*<sp/>obj,<sp/>lv_signal_t<sp/>sign,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<sp/>param);</highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>LV_USE_OBJ_REALIGN</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="159" refid="structlv__realign__t" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct__lv__obj__t" kindref="compound">_lv_obj_t</ref><sp/>*<sp/>base;</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/>lv_coord_t<sp/>xofs;</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/>lv_coord_t<sp/>yofs;</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/>lv_align_t<sp/>align;</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>auto_realign<sp/>:<sp/>1;</highlight></codeline>
<codeline lineno="165" refid="structlv__realign__t_1abeda130f17369c929d828c0852733383" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/><ref refid="structlv__realign__t_1abeda130f17369c929d828c0852733383" kindref="member">mid_align</ref><sp/>:<sp/>1;<sp/></highlight></codeline>
<codeline lineno="167"><highlight class="normal">}<sp/><ref refid="structlv__realign__t" kindref="compound">lv_realign_t</ref>;</highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight><highlight class="comment">/*Protect<sp/>some<sp/>attributes<sp/>(max.<sp/>8<sp/>bit)*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/>LV_PROTECT_NONE<sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0x00,</highlight></codeline>
<codeline lineno="173" refid="lv__obj_8h_1a726ca809ffd3d67ab4b8476646f26635ad6905e1772856f1cee258aa080e3a2fb" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="lv__obj_8h_1a726ca809ffd3d67ab4b8476646f26635ad6905e1772856f1cee258aa080e3a2fb" kindref="member">LV_PROTECT_CHILD_CHG</ref><sp/>=<sp/>0x01,<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="174" refid="lv__obj_8h_1a726ca809ffd3d67ab4b8476646f26635abf71fbcdeebdc489d9ed7014f47860eb" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="lv__obj_8h_1a726ca809ffd3d67ab4b8476646f26635abf71fbcdeebdc489d9ed7014f47860eb" kindref="member">LV_PROTECT_PARENT</ref><sp/><sp/><sp/><sp/>=<sp/>0x02,<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="175" refid="lv__obj_8h_1a726ca809ffd3d67ab4b8476646f26635ac605062bb3895bd55356d4520a9e8160" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="lv__obj_8h_1a726ca809ffd3d67ab4b8476646f26635ac605062bb3895bd55356d4520a9e8160" kindref="member">LV_PROTECT_POS</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0x04,<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="176" refid="lv__obj_8h_1a726ca809ffd3d67ab4b8476646f26635a7b5c826d0974bcc4a78c420a92dca626" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="lv__obj_8h_1a726ca809ffd3d67ab4b8476646f26635a7b5c826d0974bcc4a78c420a92dca626" kindref="member">LV_PROTECT_FOLLOW</ref><sp/><sp/><sp/><sp/>=<sp/>0x08,<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="178" refid="lv__obj_8h_1a726ca809ffd3d67ab4b8476646f26635a56ece3ac8b436ca76e4aabf82b1e76b0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="lv__obj_8h_1a726ca809ffd3d67ab4b8476646f26635a56ece3ac8b436ca76e4aabf82b1e76b0" kindref="member">LV_PROTECT_PRESS_LOST</ref><sp/>=<sp/>0x10,<sp/><sp/></highlight></codeline>
<codeline lineno="180" refid="lv__obj_8h_1a726ca809ffd3d67ab4b8476646f26635a3cbe02ea9019628d25cd9aef0ccf8296" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="lv__obj_8h_1a726ca809ffd3d67ab4b8476646f26635a3cbe02ea9019628d25cd9aef0ccf8296" kindref="member">LV_PROTECT_CLICK_FOCUS</ref><sp/>=<sp/>0x20,<sp/></highlight></codeline>
<codeline lineno="181"><highlight class="normal">};</highlight></codeline>
<codeline lineno="182"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>uint8_t<sp/>lv_protect_t;</highlight></codeline>
<codeline lineno="183"><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal"></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/>LV_STATE_DEFAULT<sp/><sp/><sp/>=<sp/><sp/>0x00,</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/>LV_STATE_CHECKED<sp/><sp/>=<sp/><sp/>0x01,</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/>LV_STATE_FOCUSED<sp/><sp/>=<sp/><sp/>0x02,</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/>LV_STATE_EDITED<sp/><sp/><sp/>=<sp/><sp/>0x04,</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/>LV_STATE_HOVERED<sp/><sp/>=<sp/><sp/>0x08,</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/>LV_STATE_PRESSED<sp/><sp/>=<sp/><sp/>0x10,</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/>LV_STATE_DISABLED<sp/>=<sp/><sp/>0x20,</highlight></codeline>
<codeline lineno="192"><highlight class="normal">};</highlight></codeline>
<codeline lineno="193"><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>uint8_t<sp/>lv_state_t;</highlight></codeline>
<codeline lineno="195"><highlight class="normal"></highlight></codeline>
<codeline lineno="196" refid="struct__lv__obj__t" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct__lv__obj__t" kindref="compound">_lv_obj_t</ref><sp/>{</highlight></codeline>
<codeline lineno="197" refid="struct__lv__obj__t_1abf27a654be0ee86860391c9104a4d098" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct__lv__obj__t" kindref="compound">_lv_obj_t</ref><sp/>*<sp/><ref refid="struct__lv__obj__t_1abf27a654be0ee86860391c9104a4d098" kindref="member">parent</ref>;<sp/></highlight></codeline>
<codeline lineno="198" refid="struct__lv__obj__t_1ad6b65cb2303495c9a2dec63def0fd185" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structlv__ll__t" kindref="compound">lv_ll_t</ref><sp/><ref refid="struct__lv__obj__t_1ad6b65cb2303495c9a2dec63def0fd185" kindref="member">child_ll</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="200" refid="struct__lv__obj__t_1a5159a54e860e2efa245ccd12f1f26253" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structlv__area__t" kindref="compound">lv_area_t</ref><sp/><ref refid="struct__lv__obj__t_1a5159a54e860e2efa245ccd12f1f26253" kindref="member">coords</ref>;<sp/></highlight></codeline>
<codeline lineno="202" refid="struct__lv__obj__t_1a057a6a109fa1407369d1b30a4fb37479" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="lv__obj_8h_1a9366c6b8b950ee09075cdfe83105a81f" kindref="member">lv_event_cb_t</ref><sp/><ref refid="struct__lv__obj__t_1a057a6a109fa1407369d1b30a4fb37479" kindref="member">event_cb</ref>;<sp/></highlight></codeline>
<codeline lineno="203" refid="struct__lv__obj__t_1a4b8533e33052e0c5531a82882d0da39e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>lv_signal_cb_t<sp/><ref refid="struct__lv__obj__t_1a4b8533e33052e0c5531a82882d0da39e" kindref="member">signal_cb</ref>;<sp/></highlight></codeline>
<codeline lineno="204" refid="struct__lv__obj__t_1ad6d6cab3f5c316c040583b987d4dafae" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="lv__obj_8h_1ab1b5bf7b2fac5b7cf204a7be845a6679" kindref="member">lv_design_cb_t</ref><sp/><ref refid="struct__lv__obj__t_1ad6d6cab3f5c316c040583b987d4dafae" kindref="member">design_cb</ref>;<sp/></highlight></codeline>
<codeline lineno="206" refid="struct__lv__obj__t_1a18b5c5372f83cb8640acf0c1d2beb7b9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<sp/><ref refid="struct__lv__obj__t_1a18b5c5372f83cb8640acf0c1d2beb7b9" kindref="member">ext_attr</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structlv__style__list__t" kindref="compound">lv_style_list_t</ref><sp/><sp/>style_list;</highlight></codeline>
<codeline lineno="208"><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>LV_USE_EXT_CLICK_AREA<sp/>==<sp/>LV_EXT_CLICK_AREA_TINY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="210" refid="struct__lv__obj__t_1aad18a5c4b9280aa4aeeea668248a65c9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/><ref refid="struct__lv__obj__t_1aad18a5c4b9280aa4aeeea668248a65c9" kindref="member">ext_click_pad_hor</ref>;<sp/></highlight></codeline>
<codeline lineno="211" refid="struct__lv__obj__t_1aa839ad055356234122bb99da277c798d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/><ref refid="struct__lv__obj__t_1aa839ad055356234122bb99da277c798d" kindref="member">ext_click_pad_ver</ref>;<sp/></highlight></codeline>
<codeline lineno="212"><highlight class="preprocessor">#elif<sp/>LV_USE_EXT_CLICK_AREA<sp/>==<sp/>LV_EXT_CLICK_AREA_FULL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="213" refid="struct__lv__obj__t_1aa99bdb30fd8083e42592e442828fedc1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structlv__area__t" kindref="compound">lv_area_t</ref><sp/><ref refid="struct__lv__obj__t_1aa99bdb30fd8083e42592e442828fedc1" kindref="member">ext_click_pad</ref>;<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="214"><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal"></highlight></codeline>
<codeline lineno="216" refid="struct__lv__obj__t_1add6c3fbc963d6a3175ebf92ff6b760f8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>lv_coord_t<sp/><ref refid="struct__lv__obj__t_1add6c3fbc963d6a3175ebf92ff6b760f8" kindref="member">ext_draw_pad</ref>;<sp/></highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*Attributes<sp/>and<sp/>states*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="219" refid="struct__lv__obj__t_1a5aff593ec2b2d1e1461a496569ce2e2c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/><ref refid="struct__lv__obj__t_1a5aff593ec2b2d1e1461a496569ce2e2c" kindref="member">click</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>1;<sp/></highlight></codeline>
<codeline lineno="220" refid="struct__lv__obj__t_1a37f3c5da535b993775a44f556e78aa9b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/><ref refid="struct__lv__obj__t_1a37f3c5da535b993775a44f556e78aa9b" kindref="member">drag</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>1;<sp/></highlight></codeline>
<codeline lineno="221" refid="struct__lv__obj__t_1af06a95de66e183335be8481ce4504500" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/><ref refid="struct__lv__obj__t_1af06a95de66e183335be8481ce4504500" kindref="member">drag_throw</ref><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>1;<sp/></highlight></codeline>
<codeline lineno="222" refid="struct__lv__obj__t_1a57d344e11977aa356cc00fb2453c71d0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/><ref refid="struct__lv__obj__t_1a57d344e11977aa356cc00fb2453c71d0" kindref="member">drag_parent</ref><sp/><sp/><sp/><sp/><sp/>:<sp/>1;<sp/></highlight></codeline>
<codeline lineno="223" refid="struct__lv__obj__t_1a30ea1c215d3c9e72171d2f0bf367fe80" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/><ref refid="struct__lv__obj__t_1a30ea1c215d3c9e72171d2f0bf367fe80" kindref="member">hidden</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>1;<sp/></highlight></codeline>
<codeline lineno="224" refid="struct__lv__obj__t_1af655d7f63d4713ee248868eb9cb995bd" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/><ref refid="struct__lv__obj__t_1af655d7f63d4713ee248868eb9cb995bd" kindref="member">top</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>1;<sp/></highlight></codeline>
<codeline lineno="225" refid="struct__lv__obj__t_1aad0be8113730050561e37f62ec34a74a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/><ref refid="struct__lv__obj__t_1aad0be8113730050561e37f62ec34a74a" kindref="member">parent_event</ref><sp/><sp/><sp/><sp/>:<sp/>1;<sp/></highlight></codeline>
<codeline lineno="226" refid="struct__lv__obj__t_1a0d9358bc8045af18f292630c8e95cb35" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/><ref refid="struct__lv__obj__t_1a0d9358bc8045af18f292630c8e95cb35" kindref="member">adv_hittest</ref><sp/><sp/><sp/><sp/><sp/>:<sp/>1;<sp/></highlight></codeline>
<codeline lineno="227" refid="struct__lv__obj__t_1a1d5d23ee67b068b0febe9f30aebcd44a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/><ref refid="struct__lv__obj__t_1a1d5d23ee67b068b0febe9f30aebcd44a" kindref="member">gesture_parent</ref><sp/><sp/>:<sp/>1;<sp/></highlight></codeline>
<codeline lineno="228" refid="struct__lv__obj__t_1a85660419c4ea749b736330e2f9566535" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/><ref refid="struct__lv__obj__t_1a85660419c4ea749b736330e2f9566535" kindref="member">focus_parent</ref><sp/><sp/><sp/><sp/>:<sp/>1;<sp/></highlight></codeline>
<codeline lineno="230" refid="struct__lv__obj__t_1a3ab46d1105c1a83eec453a7000a1e16c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>lv_drag_dir_t<sp/><ref refid="struct__lv__obj__t_1a3ab46d1105c1a83eec453a7000a1e16c" kindref="member">drag_dir</ref><sp/><sp/>:<sp/>3;<sp/></highlight></codeline>
<codeline lineno="231" refid="struct__lv__obj__t_1aa89682f5fb368858c584c3f4b23c1c91" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>lv_bidi_dir_t<sp/><ref refid="struct__lv__obj__t_1aa89682f5fb368858c584c3f4b23c1c91" kindref="member">base_dir</ref><sp/><sp/>:<sp/>2;<sp/></highlight></codeline>
<codeline lineno="233"><highlight class="preprocessor">#if<sp/>LV_USE_GROUP<sp/>!=<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<sp/>group_p;</highlight></codeline>
<codeline lineno="235"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="236"><highlight class="normal"></highlight></codeline>
<codeline lineno="237" refid="struct__lv__obj__t_1a2b10cb57fa2632b1e89bf517f23e5c7e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/><ref refid="struct__lv__obj__t_1a2b10cb57fa2632b1e89bf517f23e5c7e" kindref="member">protect</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/>lv_state_t<sp/>state;</highlight></codeline>
<codeline lineno="240"><highlight class="normal"></highlight></codeline>
<codeline lineno="241"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>LV_USE_OBJ_REALIGN</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="242" refid="struct__lv__obj__t_1a6aa95376d835dbdc47702019fe74a57c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structlv__realign__t" kindref="compound">lv_realign_t</ref><sp/><ref refid="struct__lv__obj__t_1a6aa95376d835dbdc47702019fe74a57c" kindref="member">realign</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="243"><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="244"><highlight class="normal"></highlight></codeline>
<codeline lineno="245"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>LV_USE_USER_DATA</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="246" refid="struct__lv__obj__t_1ae51711ba68ca64125ed2d4eb7ec03a6d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>lv_obj_user_data_t<sp/><ref refid="struct__lv__obj__t_1ae51711ba68ca64125ed2d4eb7ec03a6d" kindref="member">user_data</ref>;<sp/></highlight></codeline>
<codeline lineno="247"><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="248"><highlight class="normal"></highlight></codeline>
<codeline lineno="249"><highlight class="normal">}<sp/><ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref>;</highlight></codeline>
<codeline lineno="250"><highlight class="normal"></highlight></codeline>
<codeline lineno="251"><highlight class="normal"></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/>LV_OBJ_PART_MAIN,</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/>_LV_OBJ_PART_VIRTUAL_LAST<sp/>=<sp/>_LV_OBJ_PART_VIRTUAL_FIRST,</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/>_LV_OBJ_PART_REAL_LAST<sp/>=<sp/><sp/><sp/><sp/>_LV_OBJ_PART_REAL_FIRST,</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/>LV_OBJ_PART_ALL<sp/>=<sp/>0xFF,</highlight></codeline>
<codeline lineno="256"><highlight class="normal">};</highlight></codeline>
<codeline lineno="257"><highlight class="normal"></highlight></codeline>
<codeline lineno="258"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>uint8_t<sp/>lv_obj_part_t;</highlight></codeline>
<codeline lineno="259"><highlight class="normal"></highlight></codeline>
<codeline lineno="261" refid="structlv__obj__type__t" refkind="compound"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="262" refid="structlv__obj__type__t_1ae24e59ffdb8f2e285b26a743b03f1469" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/>type[LV_MAX_ANCESTOR_NUM];<sp/></highlight></codeline>
<codeline lineno="264"><highlight class="normal">}<sp/><ref refid="structlv__obj__type__t" kindref="compound">lv_obj_type_t</ref>;</highlight></codeline>
<codeline lineno="265"><highlight class="normal"></highlight></codeline>
<codeline lineno="266" refid="structlv__hit__test__info__t" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structlv__point__t" kindref="compound">lv_point_t</ref><sp/>*<sp/>point;</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="269"><highlight class="normal">}<sp/><ref refid="structlv__hit__test__info__t" kindref="compound">lv_hit_test_info_t</ref>;</highlight></codeline>
<codeline lineno="270"><highlight class="normal"></highlight></codeline>
<codeline lineno="271" refid="structlv__get__style__info__t" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>part;</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structlv__style__list__t" kindref="compound">lv_style_list_t</ref><sp/>*<sp/>result;</highlight></codeline>
<codeline lineno="274"><highlight class="normal">}<sp/><ref refid="structlv__get__style__info__t" kindref="compound">lv_get_style_info_t</ref>;</highlight></codeline>
<codeline lineno="275"><highlight class="normal"></highlight></codeline>
<codeline lineno="276" refid="structlv__get__state__info__t" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>part;</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/>lv_state_t<sp/>result;</highlight></codeline>
<codeline lineno="279"><highlight class="normal">}<sp/><ref refid="structlv__get__state__info__t" kindref="compound">lv_get_state_info_t</ref>;</highlight></codeline>
<codeline lineno="280"><highlight class="normal"></highlight></codeline>
<codeline lineno="281"><highlight class="normal"></highlight><highlight class="comment">/**********************</highlight></codeline>
<codeline lineno="282"><highlight class="comment"><sp/>*<sp/>GLOBAL<sp/>PROTOTYPES</highlight></codeline>
<codeline lineno="283"><highlight class="comment"><sp/>**********************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="284"><highlight class="normal"></highlight></codeline>
<codeline lineno="288"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="lv__obj_8h_1a666fa58edac1e61856b2a00fe60308a0" kindref="member">lv_init</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="289"><highlight class="normal"></highlight></codeline>
<codeline lineno="290"><highlight class="normal"></highlight></codeline>
<codeline lineno="295"><highlight class="preprocessor">#if<sp/>LV_ENABLE_GC<sp/>||<sp/>!LV_MEM_CUSTOM</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="296"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="lv__obj_8h_1a302a9934e9b77badac7f527b5116a156" kindref="member">lv_deinit</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="297"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="298"><highlight class="normal"></highlight></codeline>
<codeline lineno="299"><highlight class="normal"></highlight><highlight class="comment">/*--------------------</highlight></codeline>
<codeline lineno="300"><highlight class="comment"><sp/>*<sp/>Create<sp/>and<sp/>delete</highlight></codeline>
<codeline lineno="301"><highlight class="comment"><sp/>*-------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="302"><highlight class="normal"></highlight></codeline>
<codeline lineno="310"><highlight class="normal"><ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref><sp/>*<sp/><ref refid="lv__obj_8h_1af5b63647e5fc488f3a5fcdc755d9eb2a" kindref="member">lv_obj_create</ref>(<ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref><sp/>*<sp/><ref refid="struct__lv__obj__t_1abf27a654be0ee86860391c9104a4d098" kindref="member">parent</ref>,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref><sp/>*<sp/>copy);</highlight></codeline>
<codeline lineno="311"><highlight class="normal"></highlight></codeline>
<codeline lineno="317"><highlight class="normal">lv_res_t<sp/><ref refid="lv__obj_8h_1a417b2917d719634f9aa8e00aa6e76301" kindref="member">lv_obj_del</ref>(<ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref><sp/>*<sp/>obj);</highlight></codeline>
<codeline lineno="318"><highlight class="normal"></highlight></codeline>
<codeline lineno="319"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>LV_USE_ANIMATION</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="320"><highlight class="normal"></highlight></codeline>
<codeline lineno="324"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="lv__obj_8h_1aea6f2d4b966b06c06658c12aac2fa254" kindref="member">lv_obj_del_anim_ready_cb</ref>(<ref refid="struct__lv__anim__t" kindref="compound">lv_anim_t</ref><sp/>*<sp/>a);</highlight></codeline>
<codeline lineno="325"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="326"><highlight class="normal"></highlight></codeline>
<codeline lineno="333"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="lv__obj_8h_1a0080923cccf80af7b1756b0e418db547" kindref="member">lv_obj_del_async</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="struct__lv__obj__t" kindref="compound">_lv_obj_t</ref><sp/>*<sp/>obj);</highlight></codeline>
<codeline lineno="334"><highlight class="normal"></highlight></codeline>
<codeline lineno="339"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="lv__obj_8h_1ab9e1d84b921e63d1da83fe711b214aea" kindref="member">lv_obj_clean</ref>(<ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref><sp/>*<sp/>obj);</highlight></codeline>
<codeline lineno="340"><highlight class="normal"></highlight></codeline>
<codeline lineno="341"><highlight class="normal"></highlight></codeline>
<codeline lineno="348"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="lv__obj_8h_1a33a0a3c2c2861391f3b0e58cfe39914a" kindref="member">lv_obj_invalidate_area</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref><sp/>*<sp/>obj,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structlv__area__t" kindref="compound">lv_area_t</ref><sp/>*<sp/>area);</highlight></codeline>
<codeline lineno="349"><highlight class="normal"></highlight></codeline>
<codeline lineno="354"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="lv__obj_8h_1aad66ca3c74dbc0c194bd5135fa18d033" kindref="member">lv_obj_invalidate</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref><sp/>*<sp/>obj);</highlight></codeline>
<codeline lineno="355"><highlight class="normal"></highlight></codeline>
<codeline lineno="356"><highlight class="normal"></highlight><highlight class="comment">/*=====================</highlight></codeline>
<codeline lineno="357"><highlight class="comment"><sp/>*<sp/>Setter<sp/>functions</highlight></codeline>
<codeline lineno="358"><highlight class="comment"><sp/>*====================*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="359"><highlight class="normal"></highlight></codeline>
<codeline lineno="360"><highlight class="normal"></highlight><highlight class="comment">/*--------------------</highlight></codeline>
<codeline lineno="361"><highlight class="comment"><sp/>*<sp/>Parent/children<sp/>set</highlight></codeline>
<codeline lineno="362"><highlight class="comment"><sp/>*--------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="363"><highlight class="normal"></highlight></codeline>
<codeline lineno="369"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="lv__obj_8h_1abc514aaa674d90d982ebefebca6b2284" kindref="member">lv_obj_set_parent</ref>(<ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref><sp/>*<sp/>obj,<sp/><ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref><sp/>*<sp/>parent);</highlight></codeline>
<codeline lineno="370"><highlight class="normal"></highlight></codeline>
<codeline lineno="375"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="lv__obj_8h_1aa7aa29e1594d02eac986bf0766ef348e" kindref="member">lv_obj_move_foreground</ref>(<ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref><sp/>*<sp/>obj);</highlight></codeline>
<codeline lineno="376"><highlight class="normal"></highlight></codeline>
<codeline lineno="381"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="lv__obj_8h_1a6a63bb02c90da34db7988904a53b54ba" kindref="member">lv_obj_move_background</ref>(<ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref><sp/>*<sp/>obj);</highlight></codeline>
<codeline lineno="382"><highlight class="normal"></highlight></codeline>
<codeline lineno="383"><highlight class="normal"></highlight><highlight class="comment">/*--------------------</highlight></codeline>
<codeline lineno="384"><highlight class="comment"><sp/>*<sp/>Coordinate<sp/>set</highlight></codeline>
<codeline lineno="385"><highlight class="comment"><sp/>*<sp/>------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="386"><highlight class="normal"></highlight></codeline>
<codeline lineno="393"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="lv__obj_8h_1ab224721bfc40f9fbedc291bccd84cbea" kindref="member">lv_obj_set_pos</ref>(<ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref><sp/>*<sp/>obj,<sp/>lv_coord_t<sp/>x,<sp/>lv_coord_t<sp/>y);</highlight></codeline>
<codeline lineno="394"><highlight class="normal"></highlight></codeline>
<codeline lineno="400"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="lv__obj_8h_1abc849c766f9c18783e5ec600fa2b6874" kindref="member">lv_obj_set_x</ref>(<ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref><sp/>*<sp/>obj,<sp/>lv_coord_t<sp/>x);</highlight></codeline>
<codeline lineno="401"><highlight class="normal"></highlight></codeline>
<codeline lineno="407"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="lv__obj_8h_1a1993b15b44f347aeff5aa9f24e816eb2" kindref="member">lv_obj_set_y</ref>(<ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref><sp/>*<sp/>obj,<sp/>lv_coord_t<sp/>y);</highlight></codeline>
<codeline lineno="408"><highlight class="normal"></highlight></codeline>
<codeline lineno="415"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="lv__obj_8h_1abcc5ebd0d1bda82435697baeeb58048d" kindref="member">lv_obj_set_size</ref>(<ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref><sp/>*<sp/>obj,<sp/>lv_coord_t<sp/>w,<sp/>lv_coord_t<sp/>h);</highlight></codeline>
<codeline lineno="416"><highlight class="normal"></highlight></codeline>
<codeline lineno="422"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="lv__obj_8h_1a63d809001264dd8510fa9fe0f9aaced3" kindref="member">lv_obj_set_width</ref>(<ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref><sp/>*<sp/>obj,<sp/>lv_coord_t<sp/>w);</highlight></codeline>
<codeline lineno="423"><highlight class="normal"></highlight></codeline>
<codeline lineno="429"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="lv__obj_8h_1a0d3e5fba894449938df0b10c9f442537" kindref="member">lv_obj_set_height</ref>(<ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref><sp/>*<sp/>obj,<sp/>lv_coord_t<sp/>h);</highlight></codeline>
<codeline lineno="430"><highlight class="normal"></highlight></codeline>
<codeline lineno="436"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="lv__obj_8h_1aafe18d3222556637c7ddf6a6a55ffd31" kindref="member">lv_obj_set_width_fit</ref>(<ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref><sp/>*<sp/>obj,<sp/>lv_coord_t<sp/>w);</highlight></codeline>
<codeline lineno="437"><highlight class="normal"></highlight></codeline>
<codeline lineno="443"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="lv__obj_8h_1a6f3b1b3685753caff70160b57b4dcdf1" kindref="member">lv_obj_set_height_fit</ref>(<ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref><sp/>*<sp/>obj,<sp/>lv_coord_t<sp/>h);</highlight></codeline>
<codeline lineno="444"><highlight class="normal"></highlight></codeline>
<codeline lineno="451"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="lv__obj_8h_1a0e6dfd44bfe3d9719a7b78f59ca3d271" kindref="member">lv_obj_set_width_margin</ref>(<ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref><sp/>*<sp/>obj,<sp/>lv_coord_t<sp/>w);</highlight></codeline>
<codeline lineno="452"><highlight class="normal"></highlight></codeline>
<codeline lineno="459"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="lv__obj_8h_1a4a97585db792c2308eb1441153104053" kindref="member">lv_obj_set_height_margin</ref>(<ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref><sp/>*<sp/>obj,<sp/>lv_coord_t<sp/>h);</highlight></codeline>
<codeline lineno="460"><highlight class="normal"></highlight></codeline>
<codeline lineno="469"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="lv__obj_8h_1a85f41473c55cd51c1fd364ea613e14ee" kindref="member">lv_obj_align</ref>(<ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref><sp/>*<sp/>obj,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref><sp/>*<sp/>base,<sp/>lv_align_t<sp/>align,<sp/>lv_coord_t<sp/>x_ofs,<sp/>lv_coord_t<sp/>y_ofs);</highlight></codeline>
<codeline lineno="470"><highlight class="normal"></highlight></codeline>
<codeline lineno="478"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="lv__obj_8h_1a2073a440aced3d36e8d240cb5344ef46" kindref="member">lv_obj_align_x</ref>(<ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref><sp/>*<sp/>obj,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref><sp/>*<sp/>base,<sp/>lv_align_t<sp/>align,<sp/>lv_coord_t<sp/>x_ofs);</highlight></codeline>
<codeline lineno="479"><highlight class="normal"></highlight></codeline>
<codeline lineno="487"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="lv__obj_8h_1acf3b4c522565c4ded39a1430b43451e0" kindref="member">lv_obj_align_y</ref>(<ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref><sp/>*<sp/>obj,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref><sp/>*<sp/>base,<sp/>lv_align_t<sp/>align,<sp/>lv_coord_t<sp/>y_ofs);</highlight></codeline>
<codeline lineno="488"><highlight class="normal"></highlight></codeline>
<codeline lineno="497"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="lv__obj_8h_1a874cb49ee02168b9a447ea3b3ed34251" kindref="member">lv_obj_align_mid</ref>(<ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref><sp/>*<sp/>obj,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref><sp/>*<sp/>base,<sp/>lv_align_t<sp/>align,<sp/>lv_coord_t<sp/>x_ofs,<sp/>lv_coord_t<sp/>y_ofs);</highlight></codeline>
<codeline lineno="498"><highlight class="normal"></highlight></codeline>
<codeline lineno="499"><highlight class="normal"></highlight></codeline>
<codeline lineno="507"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="lv__obj_8h_1a6970bc3b4fe3f9604b7c7a0bc4a12664" kindref="member">lv_obj_align_mid_x</ref>(<ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref><sp/>*<sp/>obj,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref><sp/>*<sp/>base,<sp/>lv_align_t<sp/>align,<sp/>lv_coord_t<sp/>x_ofs);</highlight></codeline>
<codeline lineno="508"><highlight class="normal"></highlight></codeline>
<codeline lineno="516"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="lv__obj_8h_1a014bc13287f2a817e8912d483be5c5cb" kindref="member">lv_obj_align_mid_y</ref>(<ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref><sp/>*<sp/>obj,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref><sp/>*<sp/>base,<sp/>lv_align_t<sp/>align,<sp/>lv_coord_t<sp/>y_ofs);</highlight></codeline>
<codeline lineno="517"><highlight class="normal"></highlight></codeline>
<codeline lineno="522"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="lv__obj_8h_1afd4a4d1b1733db6877bbcc088331f90d" kindref="member">lv_obj_realign</ref>(<ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref><sp/>*<sp/>obj);</highlight></codeline>
<codeline lineno="523"><highlight class="normal"></highlight></codeline>
<codeline lineno="530"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="lv__obj_8h_1a3df59c38faba6b47461f23269b43bb38" kindref="member">lv_obj_set_auto_realign</ref>(<ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref><sp/>*<sp/>obj,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>en);</highlight></codeline>
<codeline lineno="531"><highlight class="normal"></highlight></codeline>
<codeline lineno="540"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="lv__obj_8h_1aec7e167060da1cfe2fcf9fd796c57a06" kindref="member">lv_obj_set_ext_click_area</ref>(<ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref><sp/>*<sp/>obj,<sp/>lv_coord_t<sp/>left,<sp/>lv_coord_t<sp/>right,<sp/>lv_coord_t<sp/><ref refid="struct__lv__obj__t_1af655d7f63d4713ee248868eb9cb995bd" kindref="member">top</ref>,<sp/>lv_coord_t<sp/>bottom);</highlight></codeline>
<codeline lineno="541"><highlight class="normal"></highlight></codeline>
<codeline lineno="542"><highlight class="normal"></highlight><highlight class="comment">/*---------------------</highlight></codeline>
<codeline lineno="543"><highlight class="comment"><sp/>*<sp/>Appearance<sp/>set</highlight></codeline>
<codeline lineno="544"><highlight class="comment"><sp/>*--------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="545"><highlight class="normal"></highlight></codeline>
<codeline lineno="553"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="lv__obj_8h_1a8aa4714bef3ab5ad4e4bf09f9c5bd72e" kindref="member">lv_obj_add_style</ref>(<ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref><sp/>*<sp/>obj,<sp/>uint8_t<sp/>part,<sp/><ref refid="structlv__style__t" kindref="compound">lv_style_t</ref><sp/>*<sp/>style);</highlight></codeline>
<codeline lineno="554"><highlight class="normal"></highlight></codeline>
<codeline lineno="562"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="lv__obj_8h_1a76fdca3d1b0b4b34afa33d45c1427486" kindref="member">lv_obj_remove_style</ref>(<ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref><sp/>*<sp/>obj,<sp/>uint8_t<sp/>part,<sp/><ref refid="structlv__style__t" kindref="compound">lv_style_t</ref><sp/>*<sp/>style);</highlight></codeline>
<codeline lineno="563"><highlight class="normal"></highlight></codeline>
<codeline lineno="572"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="lv__obj_8h_1a9096fa270a44da04a99f589ce4ed1948" kindref="member">lv_obj_clean_style_list</ref>(<ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref><sp/>*<sp/>obj,<sp/>uint8_t<sp/>part);</highlight></codeline>
<codeline lineno="573"><highlight class="normal"></highlight></codeline>
<codeline lineno="582"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="lv__obj_8h_1a76ea9cd9d4bf925cd9f8eec08b4a458b" kindref="member">lv_obj_reset_style_list</ref>(<ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref><sp/>*<sp/>obj,<sp/>uint8_t<sp/>part);</highlight></codeline>
<codeline lineno="583"><highlight class="normal"></highlight></codeline>
<codeline lineno="589"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="lv__obj_8h_1aa991e84b0c4929e21ab6101040b45693" kindref="member">lv_obj_refresh_style</ref>(<ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref><sp/>*<sp/>obj,<sp/>lv_style_property_t<sp/>prop);</highlight></codeline>
<codeline lineno="590"><highlight class="normal"></highlight></codeline>
<codeline lineno="596"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="lv__obj_8h_1a044811a51cd2c0488a4b99aeda66b362" kindref="member">lv_obj_report_style_mod</ref>(<ref refid="structlv__style__t" kindref="compound">lv_style_t</ref><sp/>*<sp/>style);</highlight></codeline>
<codeline lineno="597"><highlight class="normal"></highlight></codeline>
<codeline lineno="610"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="lv__obj_8h_1a3c14968027b3b58e6f6599e4d69142bc" kindref="member">_lv_obj_set_style_local_color</ref>(<ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref><sp/>*<sp/>obj,<sp/>uint8_t<sp/>type,<sp/>lv_style_property_t<sp/>prop,<sp/><ref refid="unionlv__color1__t" kindref="compound">lv_color_t</ref><sp/>color);</highlight></codeline>
<codeline lineno="611"><highlight class="normal"></highlight></codeline>
<codeline lineno="624"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="lv__obj_8h_1a27ecc91f1eac933b6d59d87813e8db87" kindref="member">_lv_obj_set_style_local_int</ref>(<ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref><sp/>*<sp/>obj,<sp/>uint8_t<sp/>type,<sp/>lv_style_property_t<sp/>prop,<sp/>lv_style_int_t<sp/>value);</highlight></codeline>
<codeline lineno="625"><highlight class="normal"></highlight></codeline>
<codeline lineno="638"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="lv__obj_8h_1a612f9bc6d48d74171528cc7f1db6dd57" kindref="member">_lv_obj_set_style_local_opa</ref>(<ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref><sp/>*<sp/>obj,<sp/>uint8_t<sp/>type,<sp/>lv_style_property_t<sp/>prop,<sp/>lv_opa_t<sp/>opa);</highlight></codeline>
<codeline lineno="639"><highlight class="normal"></highlight></codeline>
<codeline lineno="652"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="lv__obj_8h_1a52f071edacd378ad01b0b23963ef075f" kindref="member">_lv_obj_set_style_local_ptr</ref>(<ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref><sp/>*<sp/>obj,<sp/>uint8_t<sp/>type,<sp/>lv_style_property_t<sp/>prop,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<sp/>value);</highlight></codeline>
<codeline lineno="653"><highlight class="normal"></highlight></codeline>
<codeline lineno="665"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="lv__obj_8h_1a9a90382df125ebea968e1c0a4a8c1f37" kindref="member">lv_obj_remove_style_local_prop</ref>(<ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref><sp/>*<sp/>obj,<sp/>uint8_t<sp/>part,<sp/>lv_style_property_t<sp/>prop);</highlight></codeline>
<codeline lineno="666"><highlight class="normal"></highlight></codeline>
<codeline lineno="667"><highlight class="normal"></highlight><highlight class="comment">/*-----------------</highlight></codeline>
<codeline lineno="668"><highlight class="comment"><sp/>*<sp/>Attribute<sp/>set</highlight></codeline>
<codeline lineno="669"><highlight class="comment"><sp/>*----------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="670"><highlight class="normal"></highlight></codeline>
<codeline lineno="676"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="lv__obj_8h_1a68d00213906652fd3ab84f2e7dd4f133" kindref="member">lv_obj_set_hidden</ref>(<ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref><sp/>*<sp/>obj,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>en);</highlight></codeline>
<codeline lineno="677"><highlight class="normal"></highlight></codeline>
<codeline lineno="683"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="lv__obj_8h_1a7086b986efe320a892e0053912314007" kindref="member">lv_obj_set_adv_hittest</ref>(<ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref><sp/>*<sp/>obj,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>en);</highlight></codeline>
<codeline lineno="684"><highlight class="normal"></highlight></codeline>
<codeline lineno="690"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="lv__obj_8h_1a0c8cd5f39061009596025309672dae89" kindref="member">lv_obj_set_click</ref>(<ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref><sp/>*<sp/>obj,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>en);</highlight></codeline>
<codeline lineno="691"><highlight class="normal"></highlight></codeline>
<codeline lineno="698"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="lv__obj_8h_1af7857ca4d8ac1e8183f5d5f0f1d0ba33" kindref="member">lv_obj_set_top</ref>(<ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref><sp/>*<sp/>obj,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>en);</highlight></codeline>
<codeline lineno="699"><highlight class="normal"></highlight></codeline>
<codeline lineno="705"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="lv__obj_8h_1a696adcf79f6d66da07fdae2cd30bc9d2" kindref="member">lv_obj_set_drag</ref>(<ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref><sp/>*<sp/>obj,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>en);</highlight></codeline>
<codeline lineno="706"><highlight class="normal"></highlight></codeline>
<codeline lineno="712"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="lv__obj_8h_1a58a943c6984048224bbb9771b7824b8f" kindref="member">lv_obj_set_drag_dir</ref>(<ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref><sp/>*<sp/>obj,<sp/>lv_drag_dir_t<sp/><ref refid="struct__lv__obj__t_1a3ab46d1105c1a83eec453a7000a1e16c" kindref="member">drag_dir</ref>);</highlight></codeline>
<codeline lineno="713"><highlight class="normal"></highlight></codeline>
<codeline lineno="719"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="lv__obj_8h_1afcc8485737f799ba463194226f5d58fc" kindref="member">lv_obj_set_drag_throw</ref>(<ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref><sp/>*<sp/>obj,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>en);</highlight></codeline>
<codeline lineno="720"><highlight class="normal"></highlight></codeline>
<codeline lineno="727"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="lv__obj_8h_1a542be047fdc3ac17cf2c319bcb4dfdb9" kindref="member">lv_obj_set_drag_parent</ref>(<ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref><sp/>*<sp/>obj,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>en);</highlight></codeline>
<codeline lineno="728"><highlight class="normal"></highlight></codeline>
<codeline lineno="735"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="lv__obj_8h_1a86ca9d8cb0d85950ea4d3183b317b33b" kindref="member">lv_obj_set_focus_parent</ref>(<ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref><sp/>*<sp/>obj,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>en);</highlight></codeline>
<codeline lineno="736"><highlight class="normal"></highlight></codeline>
<codeline lineno="743"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="lv__obj_8h_1a5a5a282047ee517d06a1388e7d1700f0" kindref="member">lv_obj_set_gesture_parent</ref>(<ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref><sp/>*<sp/>obj,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>en);</highlight></codeline>
<codeline lineno="744"><highlight class="normal"></highlight></codeline>
<codeline lineno="750"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="lv__obj_8h_1af56bad14914d3fdb5d242d3883ce491c" kindref="member">lv_obj_set_parent_event</ref>(<ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref><sp/>*<sp/>obj,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>en);</highlight></codeline>
<codeline lineno="751"><highlight class="normal"></highlight></codeline>
<codeline lineno="757"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="lv__obj_8h_1a6a086ccdbb96cabcae1f185225215f61" kindref="member">lv_obj_set_base_dir</ref>(<ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref><sp/>*<sp/>obj,<sp/>lv_bidi_dir_t<sp/>dir);</highlight></codeline>
<codeline lineno="758"><highlight class="normal"></highlight></codeline>
<codeline lineno="764"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="lv__obj_8h_1acbdf986364d8a59ab4b5bfd014888f6e" kindref="member">lv_obj_add_protect</ref>(<ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref><sp/>*<sp/>obj,<sp/>uint8_t<sp/>prot);</highlight></codeline>
<codeline lineno="765"><highlight class="normal"></highlight></codeline>
<codeline lineno="771"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="lv__obj_8h_1a3b359e8f898fd2c8b8d1ab0c07919e15" kindref="member">lv_obj_clear_protect</ref>(<ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref><sp/>*<sp/>obj,<sp/>uint8_t<sp/>prot);</highlight></codeline>
<codeline lineno="772"><highlight class="normal"></highlight></codeline>
<codeline lineno="780"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="lv__obj_8h_1ace09574c4d1321eb3d0901052bda1231" kindref="member">lv_obj_set_state</ref>(<ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref><sp/>*<sp/>obj,<sp/>lv_state_t<sp/>state);</highlight></codeline>
<codeline lineno="781"><highlight class="normal"></highlight></codeline>
<codeline lineno="789"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="lv__obj_8h_1adbd258635d3d653e5446336764044db1" kindref="member">lv_obj_add_state</ref>(<ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref><sp/>*<sp/>obj,<sp/>lv_state_t<sp/>state);</highlight></codeline>
<codeline lineno="790"><highlight class="normal"></highlight></codeline>
<codeline lineno="798"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="lv__obj_8h_1ac94c26d36140c7c83da6914d60170e16" kindref="member">lv_obj_clear_state</ref>(<ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref><sp/>*<sp/>obj,<sp/>lv_state_t<sp/>state);</highlight></codeline>
<codeline lineno="799"><highlight class="normal"></highlight></codeline>
<codeline lineno="800"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>LV_USE_ANIMATION</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="801"><highlight class="normal"></highlight></codeline>
<codeline lineno="806"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="lv__obj_8h_1ab9eff15aab87284d8a0e7f217aa90e8b" kindref="member">lv_obj_finish_transitions</ref>(<ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref><sp/>*<sp/>obj,<sp/>uint8_t<sp/>part);</highlight></codeline>
<codeline lineno="807"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="808"><highlight class="normal"></highlight></codeline>
<codeline lineno="815"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="lv__obj_8h_1a16c2f9020fcde51036b3e319b6217203" kindref="member">lv_obj_set_event_cb</ref>(<ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref><sp/>*<sp/>obj,<sp/><ref refid="lv__obj_8h_1a9366c6b8b950ee09075cdfe83105a81f" kindref="member">lv_event_cb_t</ref><sp/><ref refid="struct__lv__obj__t_1a057a6a109fa1407369d1b30a4fb37479" kindref="member">event_cb</ref>);</highlight></codeline>
<codeline lineno="816"><highlight class="normal"></highlight></codeline>
<codeline lineno="824"><highlight class="normal">lv_res_t<sp/><ref refid="lv__obj_8h_1acc3d57f4139c996ffb8d9f4550c2b820" kindref="member">lv_event_send</ref>(<ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref><sp/>*<sp/>obj,<sp/>lv_event_t<sp/>event,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<sp/>data);</highlight></codeline>
<codeline lineno="825"><highlight class="normal"></highlight></codeline>
<codeline lineno="826"><highlight class="normal"></highlight></codeline>
<codeline lineno="832"><highlight class="normal">lv_res_t<sp/><ref refid="lv__obj_8h_1aadf4603503bc7bd0cb565125f2b9ef08" kindref="member">lv_event_send_refresh</ref>(<ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref><sp/>*<sp/>obj);</highlight></codeline>
<codeline lineno="833"><highlight class="normal"></highlight></codeline>
<codeline lineno="838"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="lv__obj_8h_1a1904ecbfc60e02fe4a0aff3cb8b3af33" kindref="member">lv_event_send_refresh_recursive</ref>(<ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref><sp/>*<sp/>obj);</highlight></codeline>
<codeline lineno="839"><highlight class="normal"></highlight></codeline>
<codeline lineno="850"><highlight class="normal">lv_res_t<sp/><ref refid="lv__obj_8h_1ab336a88a900b047e3bfd077a8d4ef20b" kindref="member">lv_event_send_func</ref>(<ref refid="lv__obj_8h_1a9366c6b8b950ee09075cdfe83105a81f" kindref="member">lv_event_cb_t</ref><sp/>event_xcb,<sp/><ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref><sp/>*<sp/>obj,<sp/>lv_event_t<sp/>event,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<sp/>data);</highlight></codeline>
<codeline lineno="851"><highlight class="normal"></highlight></codeline>
<codeline lineno="856"><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<sp/><ref refid="lv__obj_8h_1a472e53d23fcabb36ca29bd53b6ac8c15" kindref="member">lv_event_get_data</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="857"><highlight class="normal"></highlight></codeline>
<codeline lineno="864"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="lv__obj_8h_1a9b15e80bc5b1fa338dcec4eab720796b" kindref="member">lv_obj_set_signal_cb</ref>(<ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref><sp/>*<sp/>obj,<sp/>lv_signal_cb_t<sp/><ref refid="struct__lv__obj__t_1a4b8533e33052e0c5531a82882d0da39e" kindref="member">signal_cb</ref>);</highlight></codeline>
<codeline lineno="865"><highlight class="normal"></highlight></codeline>
<codeline lineno="866"><highlight class="normal"></highlight></codeline>
<codeline lineno="873"><highlight class="normal">lv_res_t<sp/><ref refid="lv__obj_8h_1a5ed22d66695e9f91f08055f200f79cd2" kindref="member">lv_signal_send</ref>(<ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref><sp/>*<sp/>obj,<sp/>lv_signal_t<sp/>signal,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<sp/>param);</highlight></codeline>
<codeline lineno="874"><highlight class="normal"></highlight></codeline>
<codeline lineno="880"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="lv__obj_8h_1aa97d824b977176ad1d8eb1b9e1675e0f" kindref="member">lv_obj_set_design_cb</ref>(<ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref><sp/>*<sp/>obj,<sp/><ref refid="lv__obj_8h_1ab1b5bf7b2fac5b7cf204a7be845a6679" kindref="member">lv_design_cb_t</ref><sp/><ref refid="struct__lv__obj__t_1ad6d6cab3f5c316c040583b987d4dafae" kindref="member">design_cb</ref>);</highlight></codeline>
<codeline lineno="881"><highlight class="normal"></highlight></codeline>
<codeline lineno="882"><highlight class="normal"></highlight><highlight class="comment">/*----------------</highlight></codeline>
<codeline lineno="883"><highlight class="comment"><sp/>*<sp/>Other<sp/>set</highlight></codeline>
<codeline lineno="884"><highlight class="comment"><sp/>*--------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="885"><highlight class="normal"></highlight></codeline>
<codeline lineno="892"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<sp/><ref refid="lv__obj_8h_1aeb8dea7afde33b8851b8e3386c7314a4" kindref="member">lv_obj_allocate_ext_attr</ref>(<ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref><sp/>*<sp/>obj,<sp/>uint16_t<sp/>ext_size);</highlight></codeline>
<codeline lineno="893"><highlight class="normal"></highlight></codeline>
<codeline lineno="899"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="lv__obj_8h_1aeb89ad1cad229158b40e7bb97be07b03" kindref="member">lv_obj_refresh_ext_draw_pad</ref>(<ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref><sp/>*<sp/>obj);</highlight></codeline>
<codeline lineno="900"><highlight class="normal"></highlight></codeline>
<codeline lineno="901"><highlight class="normal"></highlight><highlight class="comment">/*=======================</highlight></codeline>
<codeline lineno="902"><highlight class="comment"><sp/>*<sp/>Getter<sp/>functions</highlight></codeline>
<codeline lineno="903"><highlight class="comment"><sp/>*======================*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="904"><highlight class="normal"></highlight></codeline>
<codeline lineno="910"><highlight class="normal"><ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref><sp/>*<sp/><ref refid="lv__obj_8h_1a52e56ecd96b78115ed0b51c36f653747" kindref="member">lv_obj_get_screen</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref><sp/>*<sp/>obj);</highlight></codeline>
<codeline lineno="911"><highlight class="normal"></highlight></codeline>
<codeline lineno="916"><highlight class="normal"><ref refid="struct__disp__t" kindref="compound">lv_disp_t</ref><sp/>*<sp/><ref refid="lv__obj_8h_1a0bd81ae3f2213e55c43c3129b03d2649" kindref="member">lv_obj_get_disp</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref><sp/>*<sp/>obj);</highlight></codeline>
<codeline lineno="917"><highlight class="normal"></highlight></codeline>
<codeline lineno="918"><highlight class="normal"></highlight><highlight class="comment">/*---------------------</highlight></codeline>
<codeline lineno="919"><highlight class="comment"><sp/>*<sp/>Parent/children<sp/>get</highlight></codeline>
<codeline lineno="920"><highlight class="comment"><sp/>*--------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="921"><highlight class="normal"></highlight></codeline>
<codeline lineno="927"><highlight class="normal"><ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref><sp/>*<sp/><ref refid="lv__obj_8h_1a52905721cbc66958ef9fd1361522f4e4" kindref="member">lv_obj_get_parent</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref><sp/>*<sp/>obj);</highlight></codeline>
<codeline lineno="928"><highlight class="normal"></highlight></codeline>
<codeline lineno="936"><highlight class="normal"><ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref><sp/>*<sp/><ref refid="lv__obj_8h_1a36dcadffbb0a2bf02feb62b6a2f963aa" kindref="member">lv_obj_get_child</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref><sp/>*<sp/>obj,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref><sp/>*<sp/>child);</highlight></codeline>
<codeline lineno="937"><highlight class="normal"></highlight></codeline>
<codeline lineno="945"><highlight class="normal"><ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref><sp/>*<sp/><ref refid="lv__obj_8h_1ab620077d4e1d0a6f75dd443e5a4a67a8" kindref="member">lv_obj_get_child_back</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref><sp/>*<sp/>obj,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref><sp/>*<sp/>child);</highlight></codeline>
<codeline lineno="946"><highlight class="normal"></highlight></codeline>
<codeline lineno="952"><highlight class="normal">uint16_t<sp/><ref refid="lv__obj_8h_1a6ce599b3f83982ae5fa192dce54cba76" kindref="member">lv_obj_count_children</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref><sp/>*<sp/>obj);</highlight></codeline>
<codeline lineno="953"><highlight class="normal"></highlight></codeline>
<codeline lineno="958"><highlight class="normal">uint16_t<sp/><ref refid="lv__obj_8h_1ab10e50bbf95f7b13a7c04ad440c6aff9" kindref="member">lv_obj_count_children_recursive</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref><sp/>*<sp/>obj);</highlight></codeline>
<codeline lineno="959"><highlight class="normal"></highlight></codeline>
<codeline lineno="960"><highlight class="normal"></highlight><highlight class="comment">/*---------------------</highlight></codeline>
<codeline lineno="961"><highlight class="comment"><sp/>*<sp/>Coordinate<sp/>get</highlight></codeline>
<codeline lineno="962"><highlight class="comment"><sp/>*--------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="963"><highlight class="normal"></highlight></codeline>
<codeline lineno="969"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="lv__obj_8h_1a05f006d361710d75650677e7c6c9cf3e" kindref="member">lv_obj_get_coords</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref><sp/>*<sp/>obj,<sp/><ref refid="structlv__area__t" kindref="compound">lv_area_t</ref><sp/>*<sp/>cords_p);</highlight></codeline>
<codeline lineno="970"><highlight class="normal"></highlight></codeline>
<codeline lineno="976"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="lv__obj_8h_1aaad347779991e40fd36aea89dcdf4a2b" kindref="member">lv_obj_get_inner_coords</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref><sp/>*<sp/>obj,<sp/><ref refid="structlv__area__t" kindref="compound">lv_area_t</ref><sp/>*<sp/>coords_p);</highlight></codeline>
<codeline lineno="977"><highlight class="normal"></highlight></codeline>
<codeline lineno="983"><highlight class="normal">lv_coord_t<sp/><ref refid="lv__obj_8h_1aeefcb58f5d09e5ba9722fc680a3ad409" kindref="member">lv_obj_get_x</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref><sp/>*<sp/>obj);</highlight></codeline>
<codeline lineno="984"><highlight class="normal"></highlight></codeline>
<codeline lineno="990"><highlight class="normal">lv_coord_t<sp/><ref refid="lv__obj_8h_1adb5b94d45013ad689376f1b92eaf7072" kindref="member">lv_obj_get_y</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref><sp/>*<sp/>obj);</highlight></codeline>
<codeline lineno="991"><highlight class="normal"></highlight></codeline>
<codeline lineno="997"><highlight class="normal">lv_coord_t<sp/><ref refid="lv__obj_8h_1a118b18e487255be1d8729239e9ddbee1" kindref="member">lv_obj_get_width</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref><sp/>*<sp/>obj);</highlight></codeline>
<codeline lineno="998"><highlight class="normal"></highlight></codeline>
<codeline lineno="1004"><highlight class="normal">lv_coord_t<sp/><ref refid="lv__obj_8h_1aada555bdfd06f2673714a7c6fd8a3b58" kindref="member">lv_obj_get_height</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref><sp/>*<sp/>obj);</highlight></codeline>
<codeline lineno="1005"><highlight class="normal"></highlight></codeline>
<codeline lineno="1011"><highlight class="normal">lv_coord_t<sp/><ref refid="lv__obj_8h_1ac43b44ea71e3109e39004d2f57edd5e9" kindref="member">lv_obj_get_width_fit</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref><sp/>*<sp/>obj);</highlight></codeline>
<codeline lineno="1012"><highlight class="normal"></highlight></codeline>
<codeline lineno="1018"><highlight class="normal">lv_coord_t<sp/><ref refid="lv__obj_8h_1a3fbceaa8d7bb45a97418e62bb687b9d9" kindref="member">lv_obj_get_height_fit</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref><sp/>*<sp/>obj);</highlight></codeline>
<codeline lineno="1019"><highlight class="normal"></highlight></codeline>
<codeline lineno="1026"><highlight class="normal">lv_coord_t<sp/><ref refid="lv__obj_8h_1a334827e5f3121d9ca0a297d0c23ac530" kindref="member">lv_obj_get_height_margin</ref>(<ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref><sp/>*<sp/>obj);</highlight></codeline>
<codeline lineno="1027"><highlight class="normal"></highlight></codeline>
<codeline lineno="1034"><highlight class="normal">lv_coord_t<sp/><ref refid="lv__obj_8h_1a1bc413fc6897c195f8a2e9529b709005" kindref="member">lv_obj_get_width_margin</ref>(<ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref><sp/>*<sp/>obj);</highlight></codeline>
<codeline lineno="1035"><highlight class="normal"></highlight></codeline>
<codeline lineno="1047"><highlight class="normal">lv_coord_t<sp/><ref refid="lv__obj_8h_1ac67fe6e5a5cc5243995ceb8fa8c61634" kindref="member">lv_obj_get_width_grid</ref>(<ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref><sp/>*<sp/>obj,<sp/>uint8_t<sp/>div,<sp/>uint8_t<sp/>span);</highlight></codeline>
<codeline lineno="1048"><highlight class="normal"></highlight></codeline>
<codeline lineno="1060"><highlight class="normal">lv_coord_t<sp/><ref refid="lv__obj_8h_1a8bbfb81ab17576d25b77391ab2a1770f" kindref="member">lv_obj_get_height_grid</ref>(<ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref><sp/>*<sp/>obj,<sp/>uint8_t<sp/>div,<sp/>uint8_t<sp/>span);</highlight></codeline>
<codeline lineno="1061"><highlight class="normal"></highlight></codeline>
<codeline lineno="1067"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="lv__obj_8h_1a5642c5bfafed524fd6fc20823ad6562b" kindref="member">lv_obj_get_auto_realign</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref><sp/>*<sp/>obj);</highlight></codeline>
<codeline lineno="1068"><highlight class="normal"></highlight></codeline>
<codeline lineno="1074"><highlight class="normal">lv_coord_t<sp/><ref refid="lv__obj_8h_1ab9fba1d6b6f3916fdcd454c4d7fe368e" kindref="member">lv_obj_get_ext_click_pad_left</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref><sp/>*<sp/>obj);</highlight></codeline>
<codeline lineno="1075"><highlight class="normal"></highlight></codeline>
<codeline lineno="1081"><highlight class="normal">lv_coord_t<sp/><ref refid="lv__obj_8h_1a35e95300546b05681322cd764cb8bcba" kindref="member">lv_obj_get_ext_click_pad_right</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref><sp/>*<sp/>obj);</highlight></codeline>
<codeline lineno="1082"><highlight class="normal"></highlight></codeline>
<codeline lineno="1088"><highlight class="normal">lv_coord_t<sp/><ref refid="lv__obj_8h_1acbba8319492dcf57db926ce45744c2fa" kindref="member">lv_obj_get_ext_click_pad_top</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref><sp/>*<sp/>obj);</highlight></codeline>
<codeline lineno="1089"><highlight class="normal"></highlight></codeline>
<codeline lineno="1095"><highlight class="normal">lv_coord_t<sp/><ref refid="lv__obj_8h_1a53c539540efc635c7f966ef51a2f3ed6" kindref="member">lv_obj_get_ext_click_pad_bottom</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref><sp/>*<sp/>obj);</highlight></codeline>
<codeline lineno="1096"><highlight class="normal"></highlight></codeline>
<codeline lineno="1102"><highlight class="normal">lv_coord_t<sp/><ref refid="lv__obj_8h_1a731df1c9d92621ae049541ade346c6db" kindref="member">lv_obj_get_ext_draw_pad</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref><sp/>*<sp/>obj);</highlight></codeline>
<codeline lineno="1103"><highlight class="normal"></highlight></codeline>
<codeline lineno="1104"><highlight class="normal"></highlight><highlight class="comment">/*-----------------</highlight></codeline>
<codeline lineno="1105"><highlight class="comment"><sp/>*<sp/>Appearance<sp/>get</highlight></codeline>
<codeline lineno="1106"><highlight class="comment"><sp/>*---------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1107"><highlight class="normal"></highlight></codeline>
<codeline lineno="1115"><highlight class="normal"><ref refid="structlv__style__list__t" kindref="compound">lv_style_list_t</ref><sp/>*<sp/><ref refid="lv__obj_8h_1a98901100346cf00f1d71409703c69da5" kindref="member">lv_obj_get_style_list</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref><sp/>*<sp/>obj,<sp/>uint8_t<sp/>part);</highlight></codeline>
<codeline lineno="1116"><highlight class="normal"></highlight></codeline>
<codeline lineno="1131"><highlight class="normal">lv_style_int_t<sp/><ref refid="lv__obj_8h_1a9b085852ad4ade4a4e14c788ae660de3" kindref="member">_lv_obj_get_style_int</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref><sp/>*<sp/>obj,<sp/>uint8_t<sp/>part,<sp/>lv_style_property_t<sp/>prop);</highlight></codeline>
<codeline lineno="1132"><highlight class="normal"></highlight></codeline>
<codeline lineno="1147"><highlight class="normal"><ref refid="unionlv__color1__t" kindref="compound">lv_color_t</ref><sp/><ref refid="lv__obj_8h_1a6d690bceb66ef8a571f6c429419b9c25" kindref="member">_lv_obj_get_style_color</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref><sp/>*<sp/>obj,<sp/>uint8_t<sp/>part,<sp/>lv_style_property_t<sp/>prop);</highlight></codeline>
<codeline lineno="1148"><highlight class="normal"></highlight></codeline>
<codeline lineno="1163"><highlight class="normal">lv_opa_t<sp/><ref refid="lv__obj_8h_1afb599f7dfef5ad7be5ae2ac12886c69a" kindref="member">_lv_obj_get_style_opa</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref><sp/>*<sp/>obj,<sp/>uint8_t<sp/>part,<sp/>lv_style_property_t<sp/>prop);</highlight></codeline>
<codeline lineno="1164"><highlight class="normal"></highlight></codeline>
<codeline lineno="1179"><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<sp/><ref refid="lv__obj_8h_1a354e8d5dbd358f7e7f693241e891dc5b" kindref="member">_lv_obj_get_style_ptr</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref><sp/>*<sp/>obj,<sp/>uint8_t<sp/>part,<sp/>lv_style_property_t<sp/>prop);</highlight></codeline>
<codeline lineno="1180"><highlight class="normal"></highlight></codeline>
<codeline lineno="1188"><highlight class="normal"><ref refid="structlv__style__t" kindref="compound">lv_style_t</ref><sp/>*<sp/><ref refid="lv__obj_8h_1acc92163fa8b9e786795bcdc39e6cb4e1" kindref="member">lv_obj_get_local_style</ref>(<ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref><sp/>*<sp/>obj,<sp/>uint8_t<sp/>part);</highlight></codeline>
<codeline lineno="1189"><highlight class="normal"></highlight></codeline>
<codeline lineno="1190"><highlight class="normal"></highlight></codeline>
<codeline lineno="1191"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="lv__obj__style__dec_8h" kindref="compound">lv_obj_style_dec.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1192"><highlight class="normal"></highlight></codeline>
<codeline lineno="1193"><highlight class="normal"></highlight><highlight class="comment">/*-----------------</highlight></codeline>
<codeline lineno="1194"><highlight class="comment"><sp/>*<sp/>Attribute<sp/>get</highlight></codeline>
<codeline lineno="1195"><highlight class="comment"><sp/>*----------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1196"><highlight class="normal"></highlight></codeline>
<codeline lineno="1202"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="lv__obj_8h_1a818a3767b76e5edaf2a97beafdf53f61" kindref="member">lv_obj_get_hidden</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref><sp/>*<sp/>obj);</highlight></codeline>
<codeline lineno="1203"><highlight class="normal"></highlight></codeline>
<codeline lineno="1209"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="lv__obj_8h_1a339525f348b62b5b3274d8c3c713536f" kindref="member">lv_obj_get_adv_hittest</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref><sp/>*<sp/>obj);</highlight></codeline>
<codeline lineno="1210"><highlight class="normal"></highlight></codeline>
<codeline lineno="1216"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="lv__obj_8h_1a0faee4743a74deb1bc48dbd3f10d7943" kindref="member">lv_obj_get_click</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref><sp/>*<sp/>obj);</highlight></codeline>
<codeline lineno="1217"><highlight class="normal"></highlight></codeline>
<codeline lineno="1223"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="lv__obj_8h_1a54ef4ef13845592fb69222f56e8858d2" kindref="member">lv_obj_get_top</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref><sp/>*<sp/>obj);</highlight></codeline>
<codeline lineno="1224"><highlight class="normal"></highlight></codeline>
<codeline lineno="1230"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="lv__obj_8h_1a1d3e216562fa5dc093cf1f368566470b" kindref="member">lv_obj_get_drag</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref><sp/>*<sp/>obj);</highlight></codeline>
<codeline lineno="1231"><highlight class="normal"></highlight></codeline>
<codeline lineno="1237"><highlight class="normal">lv_drag_dir_t<sp/><ref refid="lv__obj_8h_1ad507f3af94d2c37f106771e4fefaaec9" kindref="member">lv_obj_get_drag_dir</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref><sp/>*<sp/>obj);</highlight></codeline>
<codeline lineno="1238"><highlight class="normal"></highlight></codeline>
<codeline lineno="1244"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="lv__obj_8h_1a4de8f7bdc9e2333299a04eba46f979c2" kindref="member">lv_obj_get_drag_throw</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref><sp/>*<sp/>obj);</highlight></codeline>
<codeline lineno="1245"><highlight class="normal"></highlight></codeline>
<codeline lineno="1251"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="lv__obj_8h_1adc034fe8bd3e032c3eb2b656d62e7474" kindref="member">lv_obj_get_drag_parent</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref><sp/>*<sp/>obj);</highlight></codeline>
<codeline lineno="1252"><highlight class="normal"></highlight></codeline>
<codeline lineno="1253"><highlight class="normal"></highlight></codeline>
<codeline lineno="1259"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="lv__obj_8h_1a5200f252fc84f56bd76bdd86a10e344c" kindref="member">lv_obj_get_focus_parent</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref><sp/>*<sp/>obj);</highlight></codeline>
<codeline lineno="1260"><highlight class="normal"></highlight></codeline>
<codeline lineno="1261"><highlight class="normal"></highlight></codeline>
<codeline lineno="1267"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="lv__obj_8h_1a49fd592a6955f91dffeb416b13d6bc67" kindref="member">lv_obj_get_parent_event</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref><sp/>*<sp/>obj);</highlight></codeline>
<codeline lineno="1268"><highlight class="normal"></highlight></codeline>
<codeline lineno="1274"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="lv__obj_8h_1a8b1e2a33eb01a4fc39935f2399221cc0" kindref="member">lv_obj_get_gesture_parent</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref><sp/>*<sp/>obj);</highlight></codeline>
<codeline lineno="1275"><highlight class="normal"></highlight></codeline>
<codeline lineno="1276"><highlight class="normal">lv_bidi_dir_t<sp/>lv_obj_get_base_dir(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref><sp/>*<sp/>obj);</highlight></codeline>
<codeline lineno="1277"><highlight class="normal"></highlight></codeline>
<codeline lineno="1283"><highlight class="normal">uint8_t<sp/><ref refid="lv__obj_8h_1abca39a2aa901c928a3086778dc40ba31" kindref="member">lv_obj_get_protect</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref><sp/>*<sp/>obj);</highlight></codeline>
<codeline lineno="1284"><highlight class="normal"></highlight></codeline>
<codeline lineno="1291"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="lv__obj_8h_1a80d6394bba9e1a414e797efd261ed02f" kindref="member">lv_obj_is_protected</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref><sp/>*<sp/>obj,<sp/>uint8_t<sp/>prot);</highlight></codeline>
<codeline lineno="1292"><highlight class="normal"></highlight></codeline>
<codeline lineno="1293"><highlight class="normal"></highlight></codeline>
<codeline lineno="1294"><highlight class="normal">lv_state_t<sp/>lv_obj_get_state(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref><sp/>*<sp/>obj,<sp/>uint8_t<sp/>part);</highlight></codeline>
<codeline lineno="1295"><highlight class="normal"></highlight></codeline>
<codeline lineno="1301"><highlight class="normal">lv_signal_cb_t<sp/><ref refid="lv__obj_8h_1ad1b1dc4d61fd765cfd8958254af36b29" kindref="member">lv_obj_get_signal_cb</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref><sp/>*<sp/>obj);</highlight></codeline>
<codeline lineno="1302"><highlight class="normal"></highlight></codeline>
<codeline lineno="1308"><highlight class="normal"><ref refid="lv__obj_8h_1ab1b5bf7b2fac5b7cf204a7be845a6679" kindref="member">lv_design_cb_t</ref><sp/><ref refid="lv__obj_8h_1a5bafa0af4ab8c37e722cb8c65da04131" kindref="member">lv_obj_get_design_cb</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref><sp/>*<sp/>obj);</highlight></codeline>
<codeline lineno="1309"><highlight class="normal"></highlight></codeline>
<codeline lineno="1315"><highlight class="normal"><ref refid="lv__obj_8h_1a9366c6b8b950ee09075cdfe83105a81f" kindref="member">lv_event_cb_t</ref><sp/><ref refid="lv__obj_8h_1ae9f75ecad464d80305bf6b4064ba23f7" kindref="member">lv_obj_get_event_cb</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref><sp/>*<sp/>obj);</highlight></codeline>
<codeline lineno="1316"><highlight class="normal"></highlight></codeline>
<codeline lineno="1317"><highlight class="normal"></highlight><highlight class="comment">/*------------------</highlight></codeline>
<codeline lineno="1318"><highlight class="comment"><sp/>*<sp/>Other<sp/>get</highlight></codeline>
<codeline lineno="1319"><highlight class="comment"><sp/>*-----------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1320"><highlight class="normal"></highlight></codeline>
<codeline lineno="1329"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="lv__obj_8h_1a8396c9b1fd06d3358cccdaa18dc55712" kindref="member">lv_obj_is_point_on_coords</ref>(<ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref><sp/>*<sp/>obj,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structlv__point__t" kindref="compound">lv_point_t</ref><sp/>*<sp/>point);</highlight></codeline>
<codeline lineno="1330"><highlight class="normal"></highlight></codeline>
<codeline lineno="1337"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="lv__obj_8h_1ad098c46b922e6debfaa7e6a130b63c08" kindref="member">lv_obj_hittest</ref>(<ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref><sp/>*<sp/>obj,<sp/><ref refid="structlv__point__t" kindref="compound">lv_point_t</ref><sp/>*<sp/>point);</highlight></codeline>
<codeline lineno="1338"><highlight class="normal"></highlight></codeline>
<codeline lineno="1345"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<sp/><ref refid="lv__obj_8h_1a0c06278b59453b3bfa04bd63981bca3b" kindref="member">lv_obj_get_ext_attr</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref><sp/>*<sp/>obj);</highlight></codeline>
<codeline lineno="1346"><highlight class="normal"></highlight></codeline>
<codeline lineno="1353"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="lv__obj_8h_1af939d1c447779b6f93bbdcf5a673ec69" kindref="member">lv_obj_get_type</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref><sp/>*<sp/>obj,<sp/><ref refid="structlv__obj__type__t" kindref="compound">lv_obj_type_t</ref><sp/>*<sp/>buf);</highlight></codeline>
<codeline lineno="1354"><highlight class="normal"></highlight></codeline>
<codeline lineno="1355"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>LV_USE_USER_DATA</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1356"><highlight class="normal"></highlight></codeline>
<codeline lineno="1361"><highlight class="normal">lv_obj_user_data_t<sp/><ref refid="lv__obj_8h_1a0861c9a603fa9208934ed98314f793f4" kindref="member">lv_obj_get_user_data</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref><sp/>*<sp/>obj);</highlight></codeline>
<codeline lineno="1362"><highlight class="normal"></highlight></codeline>
<codeline lineno="1368"><highlight class="normal">lv_obj_user_data_t<sp/>*<sp/><ref refid="lv__obj_8h_1a21984ea47aedf381a471e02251870cd3" kindref="member">lv_obj_get_user_data_ptr</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref><sp/>*<sp/>obj);</highlight></codeline>
<codeline lineno="1369"><highlight class="normal"></highlight></codeline>
<codeline lineno="1375"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="lv__obj_8h_1a36065b16e9a7fa27ba0b7c08b9f4229f" kindref="member">lv_obj_set_user_data</ref>(<ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref><sp/>*<sp/>obj,<sp/>lv_obj_user_data_t<sp/>data);</highlight></codeline>
<codeline lineno="1376"><highlight class="normal"></highlight></codeline>
<codeline lineno="1377"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1378"><highlight class="normal"></highlight></codeline>
<codeline lineno="1384"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<sp/><ref refid="lv__obj_8h_1a4096ec8a90cb787d671867b9bd43dc73" kindref="member">lv_obj_get_group</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref><sp/>*<sp/>obj);</highlight></codeline>
<codeline lineno="1385"><highlight class="normal"></highlight></codeline>
<codeline lineno="1391"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="lv__obj_8h_1ae407987ad633021bd9119141b6506e1e" kindref="member">lv_obj_is_focused</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref><sp/>*<sp/>obj);</highlight></codeline>
<codeline lineno="1392"><highlight class="normal"></highlight></codeline>
<codeline lineno="1398"><highlight class="normal"><ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref><sp/>*<sp/><ref refid="lv__obj_8h_1ad8ae791baac274899ef80f67e7129a0b" kindref="member">lv_obj_get_focused_obj</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref><sp/>*<sp/>obj);</highlight></codeline>
<codeline lineno="1399"><highlight class="normal"></highlight></codeline>
<codeline lineno="1400"><highlight class="normal"></highlight><highlight class="comment">/*-------------------</highlight></codeline>
<codeline lineno="1401"><highlight class="comment"><sp/>*<sp/>OTHER<sp/>FUNCTIONS</highlight></codeline>
<codeline lineno="1402"><highlight class="comment"><sp/>*------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1403"><highlight class="normal"></highlight></codeline>
<codeline lineno="1410"><highlight class="normal">lv_res_t<sp/><ref refid="lv__obj_8h_1a9ca5805e173f2d33bc0fecc6f9920efa" kindref="member">lv_obj_handle_get_type_signal</ref>(<ref refid="structlv__obj__type__t" kindref="compound">lv_obj_type_t</ref><sp/>*<sp/>buf,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/>name);</highlight></codeline>
<codeline lineno="1411"><highlight class="normal"></highlight></codeline>
<codeline lineno="1420"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="lv__obj_8h_1aabe77cc0865ce04cb1d881021330b760" kindref="member">lv_obj_init_draw_rect_dsc</ref>(<ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref><sp/>*<sp/>obj,<sp/>uint8_t<sp/>type,<sp/><ref refid="structlv__draw__rect__dsc__t" kindref="compound">lv_draw_rect_dsc_t</ref><sp/>*<sp/>draw_dsc);</highlight></codeline>
<codeline lineno="1421"><highlight class="normal"></highlight></codeline>
<codeline lineno="1422"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>lv_obj_init_draw_label_dsc(<ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref><sp/>*<sp/>obj,<sp/>uint8_t<sp/>type,<sp/><ref refid="structlv__draw__label__dsc__t" kindref="compound">lv_draw_label_dsc_t</ref><sp/>*<sp/>draw_dsc);</highlight></codeline>
<codeline lineno="1423"><highlight class="normal"></highlight></codeline>
<codeline lineno="1424"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>lv_obj_init_draw_img_dsc(<ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref><sp/>*<sp/>obj,<sp/>uint8_t<sp/>part,<sp/><ref refid="structlv__draw__img__dsc__t" kindref="compound">lv_draw_img_dsc_t</ref><sp/>*<sp/>draw_dsc);</highlight></codeline>
<codeline lineno="1425"><highlight class="normal"></highlight></codeline>
<codeline lineno="1426"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>lv_obj_init_draw_line_dsc(<ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref><sp/>*<sp/>obj,<sp/>uint8_t<sp/>part,<sp/><ref refid="structlv__draw__line__dsc__t" kindref="compound">lv_draw_line_dsc_t</ref><sp/>*<sp/>draw_dsc);</highlight></codeline>
<codeline lineno="1427"><highlight class="normal"></highlight></codeline>
<codeline lineno="1433"><highlight class="normal">lv_coord_t<sp/><ref refid="lv__obj_8h_1a7f2ed5d3200888653838126ba72d59ab" kindref="member">lv_obj_get_draw_rect_ext_pad_size</ref>(<ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref><sp/>*<sp/>obj,<sp/>uint8_t<sp/>part);</highlight></codeline>
<codeline lineno="1434"><highlight class="normal"></highlight></codeline>
<codeline lineno="1441"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="lv__obj_8h_1a9bb76c83de5e1992f1c302bbd178f693" kindref="member">lv_obj_fade_in</ref>(<ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref><sp/>*<sp/>obj,<sp/>uint32_t<sp/>time,<sp/>uint32_t<sp/>delay);</highlight></codeline>
<codeline lineno="1442"><highlight class="normal"></highlight></codeline>
<codeline lineno="1449"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="lv__obj_8h_1a4140039b26c41b651bc8909b388f9042" kindref="member">lv_obj_fade_out</ref>(<ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref><sp/>*<sp/>obj,<sp/>uint32_t<sp/>time,<sp/>uint32_t<sp/>delay);</highlight></codeline>
<codeline lineno="1450"><highlight class="normal"></highlight></codeline>
<codeline lineno="1457"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="lv__obj_8h_1ac689a68d524d31df5a7444c179a5ee67" kindref="member">lv_debug_check_obj_type</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref><sp/>*<sp/>obj,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/>obj_type);</highlight></codeline>
<codeline lineno="1458"><highlight class="normal"></highlight></codeline>
<codeline lineno="1465"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="lv__obj_8h_1ac0a7ddbd150752e76ac6c97f004774ee" kindref="member">lv_debug_check_obj_valid</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref><sp/>*<sp/>obj);</highlight></codeline>
<codeline lineno="1466"><highlight class="normal"></highlight></codeline>
<codeline lineno="1467"><highlight class="normal"></highlight></codeline>
<codeline lineno="1468"><highlight class="normal"></highlight><highlight class="comment">/**********************</highlight></codeline>
<codeline lineno="1469"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>MACROS</highlight></codeline>
<codeline lineno="1470"><highlight class="comment"><sp/>**********************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1471"><highlight class="normal"></highlight></codeline>
<codeline lineno="1486"><highlight class="preprocessor">#define<sp/>LV_EVENT_CB_DECLARE(name)<sp/>static<sp/>void<sp/>name(lv_obj_t<sp/>*<sp/>obj,<sp/>lv_event_t<sp/>e)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1487"><highlight class="normal"></highlight></codeline>
<codeline lineno="1488"><highlight class="normal"></highlight></codeline>
<codeline lineno="1489"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>LV_USE_DEBUG</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1490"><highlight class="normal"></highlight></codeline>
<codeline lineno="1491"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>ifndef<sp/>LV_DEBUG_IS_OBJ</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1492"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>define<sp/>LV_DEBUG_IS_OBJ(obj_p,<sp/>obj_type)<sp/>(lv_debug_check_null(obj_p)<sp/>&amp;&amp;<sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="1493"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lv_debug_check_obj_valid(obj_p)<sp/>&amp;&amp;<sp/>\</highlight></codeline>
<codeline lineno="1494"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lv_debug_check_obj_type(obj_p,<sp/>obj_type))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1495"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1496"><highlight class="normal"></highlight></codeline>
<codeline lineno="1497"><highlight class="normal"></highlight></codeline>
<codeline lineno="1498"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>if<sp/>LV_USE_ASSERT_OBJ</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1499"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>ifndef<sp/>LV_ASSERT_OBJ</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1500"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/>define<sp/>LV_ASSERT_OBJ(obj_p,<sp/>obj_type)<sp/>LV_DEBUG_ASSERT(LV_DEBUG_IS_OBJ(obj_p,<sp/>obj_type),<sp/>&quot;Invalid<sp/>object&quot;,<sp/>obj_p);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1501"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1502"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>else<sp/></highlight><highlight class="comment">/*<sp/>LV_USE_ASSERT_OBJ<sp/>==<sp/>0<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1503"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>if<sp/>LV_USE_ASSERT_NULL<sp/></highlight><highlight class="comment">/*Use<sp/>at<sp/>least<sp/>LV_ASSERT_NULL<sp/>if<sp/>enabled*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1504"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/><sp/>define<sp/>LV_ASSERT_OBJ(obj_p,<sp/>obj_type)<sp/>LV_ASSERT_NULL(obj_p)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1505"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1506"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/><sp/>define<sp/>LV_ASSERT_OBJ(obj_p,<sp/>obj_type)<sp/>true</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1507"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1508"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1509"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1510"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>define<sp/>LV_ASSERT_OBJ(obj,<sp/>obj_type)<sp/>true</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1511"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1512"><highlight class="normal"></highlight></codeline>
<codeline lineno="1513"><highlight class="normal"></highlight></codeline>
<codeline lineno="1514"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1515"><highlight class="normal">}<sp/></highlight><highlight class="comment">/*<sp/>extern<sp/>&quot;C&quot;<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1516"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1517"><highlight class="normal"></highlight></codeline>
<codeline lineno="1518"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*LV_OBJ_H*/</highlight><highlight class="preprocessor"></highlight></codeline>
    </programlisting>
    <location file="/home/kisvegabor/projects/littlevgl/eclipse-workspace/lv_sim_eclipse_sdl/lvgl/scripts/release_tmp/lvgl/src/lv_core/lv_obj.h"/>
  </compounddef>
</doxygen>
