<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="lv__math_8h" kind="file" language="C++">
    <compoundname>lv_math.h</compoundname>
    <innerclass refid="structlv__sqrt__res__t" prot="public">lv_sqrt_res_t</innerclass>
      <sectiondef kind="func">
      <memberdef kind="function" id="lv__math_8h_1a6c355f9f003c59549a494f4a4b299411" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int32_t</type>
        <definition>int32_t _lv_bezier3</definition>
        <argsstring>(uint32_t t, int32_t u0, int32_t u1, int32_t u2, int32_t u3)</argsstring>
        <name>_lv_bezier3</name>
        <param>
          <type>uint32_t</type>
          <declname>t</declname>
        </param>
        <param>
          <type>int32_t</type>
          <declname>u0</declname>
        </param>
        <param>
          <type>int32_t</type>
          <declname>u1</declname>
        </param>
        <param>
          <type>int32_t</type>
          <declname>u2</declname>
        </param>
        <param>
          <type>int32_t</type>
          <declname>u3</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Calculate a value of a Cubic Bezier function. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>t</parametername>
</parameternamelist>
<parameterdescription>
<para>time in range of [0..LV_BEZIER_VAL_MAX] </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>u0</parametername>
</parameternamelist>
<parameterdescription>
<para>start values in range of [0..LV_BEZIER_VAL_MAX] </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>u1</parametername>
</parameternamelist>
<parameterdescription>
<para>control value 1 values in range of [0..LV_BEZIER_VAL_MAX] </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>u2</parametername>
</parameternamelist>
<parameterdescription>
<para>control value 2 in range of [0..LV_BEZIER_VAL_MAX] </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>u3</parametername>
</parameternamelist>
<parameterdescription>
<para>end values in range of [0..LV_BEZIER_VAL_MAX] </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the value calculated from the given parameters in range of [0..LV_BEZIER_VAL_MAX] </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kisvegabor/projects/littlevgl/eclipse-workspace/lv_sim_eclipse_sdl/lvgl/scripts/release_tmp/lvgl/src/lv_misc/lv_math.h" line="80" column="1"/>
      </memberdef>
      <memberdef kind="function" id="lv__math_8h_1a554c9975465170200d607cba142ee5d9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint16_t</type>
        <definition>uint16_t _lv_atan2</definition>
        <argsstring>(int x, int y)</argsstring>
        <name>_lv_atan2</name>
        <param>
          <type>int</type>
          <declname>x</declname>
        </param>
        <param>
          <type>int</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Calculate the atan2 of a vector. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>y</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the angle in degree calculated from the given parameters in range of [0..360] </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kisvegabor/projects/littlevgl/eclipse-workspace/lv_sim_eclipse_sdl/lvgl/scripts/release_tmp/lvgl/src/lv_misc/lv_math.h" line="88" column="1"/>
      </memberdef>
      <memberdef kind="function" id="lv__math_8h_1a98785d53e48cc5515448b17835ae2f5a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int64_t</type>
        <definition>int64_t _lv_pow</definition>
        <argsstring>(int64_t base, int8_t exp)</argsstring>
        <name>_lv_pow</name>
        <param>
          <type>int64_t</type>
          <declname>base</declname>
        </param>
        <param>
          <type>int8_t</type>
          <declname>exp</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Calculate the integer exponents. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>base</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>power</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>base raised to the power exponent </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kisvegabor/projects/littlevgl/eclipse-workspace/lv_sim_eclipse_sdl/lvgl/scripts/release_tmp/lvgl/src/lv_misc/lv_math.h" line="113" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"></codeline>
<codeline lineno="6"><highlight class="preprocessor">#ifndef<sp/>LV_MATH_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LV_MATH_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">/*********************</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>INCLUDES</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*********************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../lv_conf_internal.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdint.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="comment">/*********************</highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>DEFINES</highlight></codeline>
<codeline lineno="21"><highlight class="comment"><sp/>*********************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LV_MATH_MIN(a,<sp/>b)<sp/>((a)<sp/>&lt;<sp/>(b)<sp/>?<sp/>(a)<sp/>:<sp/>(b))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LV_MATH_MIN3(a,<sp/>b,<sp/>c)<sp/>(LV_MATH_MIN(LV_MATH_MIN(a,b),<sp/>c))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LV_MATH_MIN4(a,<sp/>b,<sp/>c,<sp/>d)<sp/>(LV_MATH_MIN(LV_MATH_MIN(a,b),<sp/>LV_MATH_MIN(c,d)))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LV_MATH_MAX(a,<sp/>b)<sp/>((a)<sp/>&gt;<sp/>(b)<sp/>?<sp/>(a)<sp/>:<sp/>(b))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LV_MATH_MAX3(a,<sp/>b,<sp/>c)<sp/>(LV_MATH_MAX(LV_MATH_MAX(a,b),<sp/>c))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LV_MATH_MAX4(a,<sp/>b,<sp/>c,<sp/>d)<sp/>(LV_MATH_MAX(LV_MATH_MAX(a,b),<sp/>LV_MATH_MAX(c,d)))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LV_MATH_ABS(x)<sp/>((x)<sp/>&gt;<sp/>0<sp/>?<sp/>(x)<sp/>:<sp/>(-(x)))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LV_MATH_UDIV255(x)<sp/>((uint32_t)((uint32_t)<sp/>(x)<sp/>*<sp/>0x8081)<sp/>&gt;&gt;<sp/>0x17)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LV_IS_SIGNED(t)<sp/>(((t)(-1))<sp/>&lt;<sp/>((t)<sp/>0))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LV_UMAX_OF(t)<sp/>(((0x1ULL<sp/>&lt;&lt;<sp/>((sizeof(t)<sp/>*<sp/>8ULL)<sp/>-<sp/>1ULL))<sp/>-<sp/>1ULL)<sp/>|<sp/>(0xFULL<sp/>&lt;&lt;<sp/>((sizeof(t)<sp/>*<sp/>8ULL)<sp/>-<sp/>4ULL)))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LV_SMAX_OF(t)<sp/>(((0x1ULL<sp/>&lt;&lt;<sp/>((sizeof(t)<sp/>*<sp/>8ULL)<sp/>-<sp/>1ULL))<sp/>-<sp/>1ULL)<sp/>|<sp/>(0x7ULL<sp/>&lt;&lt;<sp/>((sizeof(t)<sp/>*<sp/>8ULL)<sp/>-<sp/>4ULL)))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LV_MAX_OF(t)<sp/>((unsigned<sp/>long)<sp/>(LV_IS_SIGNED(t)<sp/>?<sp/>LV_SMAX_OF(t)<sp/>:<sp/>LV_UMAX_OF(t)))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LV_TRIGO_SIN_MAX<sp/>32767</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LV_TRIGO_SHIFT<sp/>15<sp/></highlight></codeline>
<codeline lineno="42"><highlight class="preprocessor">#define<sp/>LV_BEZIER_VAL_MAX<sp/>1024<sp/></highlight></codeline>
<codeline lineno="43"><highlight class="preprocessor">#define<sp/>LV_BEZIER_VAL_SHIFT<sp/>10<sp/></highlight></codeline>
<codeline lineno="47"><highlight class="preprocessor"></highlight><highlight class="comment">/**********************</highlight></codeline>
<codeline lineno="48"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>TYPEDEFS</highlight></codeline>
<codeline lineno="49"><highlight class="comment"><sp/>**********************/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51" refid="structlv__sqrt__res__t" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/>i;</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/>f;</highlight></codeline>
<codeline lineno="54"><highlight class="normal">}<sp/><ref refid="structlv__sqrt__res__t" kindref="compound">lv_sqrt_res_t</ref>;</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight><highlight class="comment">/**********************</highlight></codeline>
<codeline lineno="58"><highlight class="comment"><sp/>*<sp/>GLOBAL<sp/>PROTOTYPES</highlight></codeline>
<codeline lineno="59"><highlight class="comment"><sp/>**********************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="62"></codeline>
<codeline lineno="67"><highlight class="normal">LV_ATTRIBUTE_FAST_MEM<sp/>int16_t<sp/>_lv_trigo_sin(int16_t<sp/>angle);</highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="70"></codeline>
<codeline lineno="80"><highlight class="normal">int32_t<sp/>_lv_bezier3(uint32_t<sp/>t,<sp/>int32_t<sp/>u0,<sp/>int32_t<sp/>u1,<sp/>int32_t<sp/>u2,<sp/>int32_t<sp/>u3);</highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal">uint16_t<sp/>_lv_atan2(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>y);</highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="92"></codeline>
<codeline lineno="103"><highlight class="normal">LV_ATTRIBUTE_FAST_MEM<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>_lv_sqrt(uint32_t<sp/>x,<sp/><ref refid="structlv__sqrt__res__t" kindref="compound">lv_sqrt_res_t</ref><sp/>*<sp/>q,<sp/>uint32_t<sp/>mask);</highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight></codeline>
<codeline lineno="106"></codeline>
<codeline lineno="113"><highlight class="normal">int64_t<sp/>_lv_pow(int64_t<sp/>base,<sp/>int8_t<sp/>exp);</highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight><highlight class="comment">/**********************</highlight></codeline>
<codeline lineno="116"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>MACROS</highlight></codeline>
<codeline lineno="117"><highlight class="comment"><sp/>**********************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal">}<sp/></highlight><highlight class="comment">/*<sp/>extern<sp/>&quot;C&quot;<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="/home/kisvegabor/projects/littlevgl/eclipse-workspace/lv_sim_eclipse_sdl/lvgl/scripts/release_tmp/lvgl/src/lv_misc/lv_math.h"/>
  </compounddef>
</doxygen>
