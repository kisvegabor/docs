<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="lv__linemeter_8h" kind="file" language="C++">
    <compoundname>lv_linemeter.h</compoundname>
    <innerclass refid="structlv__linemeter__ext__t" prot="public">lv_linemeter_ext_t</innerclass>
      <sectiondef kind="enum">
      <memberdef kind="enum" id="lv__linemeter_8h_1a950bf8e3371138ceb9649d45e9a96340" prot="public" static="no">
        <name>@87</name>
        <enumvalue id="lv__linemeter_8h_1a950bf8e3371138ceb9649d45e9a96340a1602ab057800a74e39da101ba3d0a031" prot="public">
          <name>LV_LINEMETER_PART_MAIN</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="lv__linemeter_8h_1a950bf8e3371138ceb9649d45e9a96340a8745a1c5f51527859023c12c7b983cb8" prot="public">
          <name>_LV_LINEMETER_PART_VIRTUAL_LAST</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="lv__linemeter_8h_1a950bf8e3371138ceb9649d45e9a96340a72a9d54929915ef504dba377abcbf437" prot="public">
          <name>_LV_LINEMETER_PART_REAL_LAST</name>
          <initializer>= _LV_OBJ_PART_REAL_LAST</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kisvegabor/projects/littlevgl/eclipse-workspace/lv_sim_eclipse_sdl/lvgl/scripts/release_tmp/lvgl/src/lv_widgets/lv_linemeter.h" line="43" column="1" bodyfile="/home/kisvegabor/projects/littlevgl/eclipse-workspace/lv_sim_eclipse_sdl/lvgl/scripts/release_tmp/lvgl/src/lv_widgets/lv_linemeter.h" bodystart="43" bodyend="47"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="lv__linemeter_8h_1a0b2b86b50bff130e7a5a31346678bc2a" prot="public" static="no">
        <type>uint8_t</type>
        <definition>typedef uint8_t lv_linemeter_part_t</definition>
        <argsstring></argsstring>
        <name>lv_linemeter_part_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kisvegabor/projects/littlevgl/eclipse-workspace/lv_sim_eclipse_sdl/lvgl/scripts/release_tmp/lvgl/src/lv_widgets/lv_linemeter.h" line="48" column="1" bodyfile="/home/kisvegabor/projects/littlevgl/eclipse-workspace/lv_sim_eclipse_sdl/lvgl/scripts/release_tmp/lvgl/src/lv_widgets/lv_linemeter.h" bodystart="48" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="lv__linemeter_8h_1a63c8f3393470b5dfe920af706fa31836" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref> *</type>
        <definition>lv_obj_t* lv_linemeter_create</definition>
        <argsstring>(lv_obj_t *par, const lv_obj_t *copy)</argsstring>
        <name>lv_linemeter_create</name>
        <param>
          <type><ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref> *</type>
          <declname>par</declname>
        </param>
        <param>
          <type>const <ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref> *</type>
          <declname>copy</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Create a line meter objects <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>par</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to an object, it will be the parent of the new line meter </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>copy</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to a line meter object, if not NULL then the new object will be copied from it </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>pointer to the created line meter </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kisvegabor/projects/littlevgl/eclipse-workspace/lv_sim_eclipse_sdl/lvgl/scripts/release_tmp/lvgl/src/lv_widgets/lv_linemeter.h" line="61" column="1"/>
      </memberdef>
      <memberdef kind="function" id="lv__linemeter_8h_1affbb0d7281a7643ebb4627b6f5e42323" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void lv_linemeter_set_value</definition>
        <argsstring>(lv_obj_t *lmeter, int32_t value)</argsstring>
        <name>lv_linemeter_set_value</name>
        <param>
          <type><ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref> *</type>
          <declname>lmeter</declname>
        </param>
        <param>
          <type>int32_t</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set a new value on the line meter <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>lmeter</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to a line meter object </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>value</parametername>
</parameternamelist>
<parameterdescription>
<para>new value </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kisvegabor/projects/littlevgl/eclipse-workspace/lv_sim_eclipse_sdl/lvgl/scripts/release_tmp/lvgl/src/lv_widgets/lv_linemeter.h" line="72" column="1"/>
      </memberdef>
      <memberdef kind="function" id="lv__linemeter_8h_1ad5382bbf1a0514a86c3b501679eb6046" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void lv_linemeter_set_range</definition>
        <argsstring>(lv_obj_t *lmeter, int32_t min, int32_t max)</argsstring>
        <name>lv_linemeter_set_range</name>
        <param>
          <type><ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref> *</type>
          <declname>lmeter</declname>
        </param>
        <param>
          <type>int32_t</type>
          <declname>min</declname>
        </param>
        <param>
          <type>int32_t</type>
          <declname>max</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set minimum and the maximum values of a line meter <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>lmeter</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to he line meter object </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>min</parametername>
</parameternamelist>
<parameterdescription>
<para>minimum value </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>max</parametername>
</parameternamelist>
<parameterdescription>
<para>maximum value </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kisvegabor/projects/littlevgl/eclipse-workspace/lv_sim_eclipse_sdl/lvgl/scripts/release_tmp/lvgl/src/lv_widgets/lv_linemeter.h" line="80" column="1"/>
      </memberdef>
      <memberdef kind="function" id="lv__linemeter_8h_1a6802545bda292d89b7d2aae4e24acb8e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void lv_linemeter_set_scale</definition>
        <argsstring>(lv_obj_t *lmeter, uint16_t angle, uint16_t line_cnt)</argsstring>
        <name>lv_linemeter_set_scale</name>
        <param>
          <type><ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref> *</type>
          <declname>lmeter</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>angle</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>line_cnt</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set the scale settings of a line meter <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>lmeter</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to a line meter object </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>angle</parametername>
</parameternamelist>
<parameterdescription>
<para>angle of the scale (0..360) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>line_cnt</parametername>
</parameternamelist>
<parameterdescription>
<para>number of lines </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kisvegabor/projects/littlevgl/eclipse-workspace/lv_sim_eclipse_sdl/lvgl/scripts/release_tmp/lvgl/src/lv_widgets/lv_linemeter.h" line="88" column="1"/>
      </memberdef>
      <memberdef kind="function" id="lv__linemeter_8h_1a1e5a3c800741b463096cd0a81ac71eac" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void lv_linemeter_set_angle_offset</definition>
        <argsstring>(lv_obj_t *lmeter, uint16_t angle)</argsstring>
        <name>lv_linemeter_set_angle_offset</name>
        <param>
          <type><ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref> *</type>
          <declname>lmeter</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>angle</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set the set an offset for the line meter&apos;s angles to rotate it. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>lmeter</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to a line meter object </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>angle</parametername>
</parameternamelist>
<parameterdescription>
<para>angle offset (0..360), rotates clockwise </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kisvegabor/projects/littlevgl/eclipse-workspace/lv_sim_eclipse_sdl/lvgl/scripts/release_tmp/lvgl/src/lv_widgets/lv_linemeter.h" line="95" column="1"/>
      </memberdef>
      <memberdef kind="function" id="lv__linemeter_8h_1ab5a5b7e4d87d2a37cd88a5263247f12f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void lv_linemeter_set_mirror</definition>
        <argsstring>(lv_obj_t *lmeter, bool mirror)</argsstring>
        <name>lv_linemeter_set_mirror</name>
        <param>
          <type><ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref> *</type>
          <declname>lmeter</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>mirror</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set the orientation of the meter growth, clockwise or counterclockwise (mirrored) <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>lmeter</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to a line meter object </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>mirror</parametername>
</parameternamelist>
<parameterdescription>
<para>mirror setting </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kisvegabor/projects/littlevgl/eclipse-workspace/lv_sim_eclipse_sdl/lvgl/scripts/release_tmp/lvgl/src/lv_widgets/lv_linemeter.h" line="102" column="1"/>
      </memberdef>
      <memberdef kind="function" id="lv__linemeter_8h_1a46fe8128a9fe8d7bbbf4f87f1ac2e65e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int32_t</type>
        <definition>int32_t lv_linemeter_get_value</definition>
        <argsstring>(const lv_obj_t *lmeter)</argsstring>
        <name>lv_linemeter_get_value</name>
        <param>
          <type>const <ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref> *</type>
          <declname>lmeter</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the value of a line meter <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>lmeter</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to a line meter object </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the value of the line meter </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kisvegabor/projects/littlevgl/eclipse-workspace/lv_sim_eclipse_sdl/lvgl/scripts/release_tmp/lvgl/src/lv_widgets/lv_linemeter.h" line="113" column="1"/>
      </memberdef>
      <memberdef kind="function" id="lv__linemeter_8h_1a9ad923e3a37ce21cc437c5893ab78f6d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int32_t</type>
        <definition>int32_t lv_linemeter_get_min_value</definition>
        <argsstring>(const lv_obj_t *lmeter)</argsstring>
        <name>lv_linemeter_get_min_value</name>
        <param>
          <type>const <ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref> *</type>
          <declname>lmeter</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the minimum value of a line meter <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>lmeter</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to a line meter object </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the minimum value of the line meter </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kisvegabor/projects/littlevgl/eclipse-workspace/lv_sim_eclipse_sdl/lvgl/scripts/release_tmp/lvgl/src/lv_widgets/lv_linemeter.h" line="120" column="1"/>
      </memberdef>
      <memberdef kind="function" id="lv__linemeter_8h_1aa34ea02676122c93d2e0c8222637502c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int32_t</type>
        <definition>int32_t lv_linemeter_get_max_value</definition>
        <argsstring>(const lv_obj_t *lmeter)</argsstring>
        <name>lv_linemeter_get_max_value</name>
        <param>
          <type>const <ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref> *</type>
          <declname>lmeter</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the maximum value of a line meter <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>lmeter</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to a line meter object </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the maximum value of the line meter </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kisvegabor/projects/littlevgl/eclipse-workspace/lv_sim_eclipse_sdl/lvgl/scripts/release_tmp/lvgl/src/lv_widgets/lv_linemeter.h" line="127" column="1"/>
      </memberdef>
      <memberdef kind="function" id="lv__linemeter_8h_1a8f97885371cf91863d8cb0f253d702f5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint16_t</type>
        <definition>uint16_t lv_linemeter_get_line_count</definition>
        <argsstring>(const lv_obj_t *lmeter)</argsstring>
        <name>lv_linemeter_get_line_count</name>
        <param>
          <type>const <ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref> *</type>
          <declname>lmeter</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the scale number of a line meter <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>lmeter</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to a line meter object </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>number of the scale units </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kisvegabor/projects/littlevgl/eclipse-workspace/lv_sim_eclipse_sdl/lvgl/scripts/release_tmp/lvgl/src/lv_widgets/lv_linemeter.h" line="134" column="1"/>
      </memberdef>
      <memberdef kind="function" id="lv__linemeter_8h_1a23411cf1cf55c7ad0bf1529ee43b2f47" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint16_t</type>
        <definition>uint16_t lv_linemeter_get_scale_angle</definition>
        <argsstring>(const lv_obj_t *lmeter)</argsstring>
        <name>lv_linemeter_get_scale_angle</name>
        <param>
          <type>const <ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref> *</type>
          <declname>lmeter</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the scale angle of a line meter <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>lmeter</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to a line meter object </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>angle of the scale </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kisvegabor/projects/littlevgl/eclipse-workspace/lv_sim_eclipse_sdl/lvgl/scripts/release_tmp/lvgl/src/lv_widgets/lv_linemeter.h" line="141" column="1"/>
      </memberdef>
      <memberdef kind="function" id="lv__linemeter_8h_1a22ff3c87a8cc195cd99108d2f7eb1a1b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint16_t</type>
        <definition>uint16_t lv_linemeter_get_angle_offset</definition>
        <argsstring>(lv_obj_t *lmeter)</argsstring>
        <name>lv_linemeter_get_angle_offset</name>
        <param>
          <type><ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref> *</type>
          <declname>lmeter</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the offset for the line meter. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>lmeter</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to a line meter object </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>angle offset (0..360) </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kisvegabor/projects/littlevgl/eclipse-workspace/lv_sim_eclipse_sdl/lvgl/scripts/release_tmp/lvgl/src/lv_widgets/lv_linemeter.h" line="148" column="1"/>
      </memberdef>
      <memberdef kind="function" id="lv__linemeter_8h_1a29a05a7b7fc308ad0a63044bce25d594" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void lv_linemeter_draw_scale</definition>
        <argsstring>(lv_obj_t *lmeter, const lv_area_t *clip_area, uint8_t part)</argsstring>
        <name>lv_linemeter_draw_scale</name>
        <param>
          <type><ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref> *</type>
          <declname>lmeter</declname>
        </param>
        <param>
          <type>const <ref refid="structlv__area__t" kindref="compound">lv_area_t</ref> *</type>
          <declname>clip_area</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>part</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kisvegabor/projects/littlevgl/eclipse-workspace/lv_sim_eclipse_sdl/lvgl/scripts/release_tmp/lvgl/src/lv_widgets/lv_linemeter.h" line="151" column="1"/>
      </memberdef>
      <memberdef kind="function" id="lv__linemeter_8h_1abdb263aee7af21f60887d0af1570fcc0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool lv_linemeter_get_mirror</definition>
        <argsstring>(lv_obj_t *lmeter)</argsstring>
        <name>lv_linemeter_get_mirror</name>
        <param>
          <type><ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref> *</type>
          <declname>lmeter</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>get the mirror setting for the line meter <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>lmeter</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to a line meter object </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>mirror (true or false) </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kisvegabor/projects/littlevgl/eclipse-workspace/lv_sim_eclipse_sdl/lvgl/scripts/release_tmp/lvgl/src/lv_widgets/lv_linemeter.h" line="158" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"></codeline>
<codeline lineno="6"><highlight class="preprocessor">#ifndef<sp/>LV_LINEMETER_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LV_LINEMETER_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">/*********************</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>INCLUDES</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*********************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../lv_conf_internal.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>LV_USE_LINEMETER<sp/>!=<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../lv_core/lv_obj.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="comment">/*********************</highlight></codeline>
<codeline lineno="23"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>DEFINES</highlight></codeline>
<codeline lineno="24"><highlight class="comment"><sp/>*********************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="comment">/**********************</highlight></codeline>
<codeline lineno="27"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>TYPEDEFS</highlight></codeline>
<codeline lineno="28"><highlight class="comment"><sp/>**********************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="comment">/*Data<sp/>of<sp/>line<sp/>meter*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30" refid="structlv__linemeter__ext__t" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*No<sp/>inherited<sp/>ext.*/</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">/*Ext.<sp/>of<sp/>ancestor*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*New<sp/>data<sp/>for<sp/>this<sp/>type<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/>scale_angle;<sp/></highlight><highlight class="comment">/*Angle<sp/>of<sp/>the<sp/>scale<sp/>in<sp/>deg.<sp/>(0..360)*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/>angle_ofs;</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/>line_cnt;<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*Count<sp/>of<sp/>lines<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/>int32_t<sp/>cur_value;</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/>int32_t<sp/>min_value;</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/>int32_t<sp/>max_value;</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>mirrored<sp/>:<sp/>1;</highlight></codeline>
<codeline lineno="40"><highlight class="normal">}<sp/><ref refid="structlv__linemeter__ext__t" kindref="compound">lv_linemeter_ext_t</ref>;</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="comment">/*Styles*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/>LV_LINEMETER_PART_MAIN,</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/>_LV_LINEMETER_PART_VIRTUAL_LAST,</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/>_LV_LINEMETER_PART_REAL_LAST<sp/>=<sp/>_LV_OBJ_PART_REAL_LAST,</highlight></codeline>
<codeline lineno="47"><highlight class="normal">};</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>uint8_t<sp/>lv_linemeter_part_t;</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="comment">/**********************</highlight></codeline>
<codeline lineno="51"><highlight class="comment"><sp/>*<sp/>GLOBAL<sp/>PROTOTYPES</highlight></codeline>
<codeline lineno="52"><highlight class="comment"><sp/>**********************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"><ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref><sp/>*<sp/><ref refid="lv__linemeter_8h_1a63c8f3393470b5dfe920af706fa31836" kindref="member">lv_linemeter_create</ref>(<ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref><sp/>*<sp/>par,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref><sp/>*<sp/>copy);</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight><highlight class="comment">/*=====================</highlight></codeline>
<codeline lineno="64"><highlight class="comment"><sp/>*<sp/>Setter<sp/>functions</highlight></codeline>
<codeline lineno="65"><highlight class="comment"><sp/>*====================*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="lv__linemeter_8h_1affbb0d7281a7643ebb4627b6f5e42323" kindref="member">lv_linemeter_set_value</ref>(<ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref><sp/>*<sp/>lmeter,<sp/>int32_t<sp/>value);</highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="lv__linemeter_8h_1ad5382bbf1a0514a86c3b501679eb6046" kindref="member">lv_linemeter_set_range</ref>(<ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref><sp/>*<sp/>lmeter,<sp/>int32_t<sp/>min,<sp/>int32_t<sp/>max);</highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="lv__linemeter_8h_1a6802545bda292d89b7d2aae4e24acb8e" kindref="member">lv_linemeter_set_scale</ref>(<ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref><sp/>*<sp/>lmeter,<sp/>uint16_t<sp/>angle,<sp/>uint16_t<sp/>line_cnt);</highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="lv__linemeter_8h_1a1e5a3c800741b463096cd0a81ac71eac" kindref="member">lv_linemeter_set_angle_offset</ref>(<ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref><sp/>*<sp/>lmeter,<sp/>uint16_t<sp/>angle);</highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="lv__linemeter_8h_1ab5a5b7e4d87d2a37cd88a5263247f12f" kindref="member">lv_linemeter_set_mirror</ref>(<ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref><sp/>*<sp/>lmeter,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>mirror);</highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight><highlight class="comment">/*=====================</highlight></codeline>
<codeline lineno="105"><highlight class="comment"><sp/>*<sp/>Getter<sp/>functions</highlight></codeline>
<codeline lineno="106"><highlight class="comment"><sp/>*====================*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal">int32_t<sp/><ref refid="lv__linemeter_8h_1a46fe8128a9fe8d7bbbf4f87f1ac2e65e" kindref="member">lv_linemeter_get_value</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref><sp/>*<sp/>lmeter);</highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal">int32_t<sp/><ref refid="lv__linemeter_8h_1a9ad923e3a37ce21cc437c5893ab78f6d" kindref="member">lv_linemeter_get_min_value</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref><sp/>*<sp/>lmeter);</highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal">int32_t<sp/><ref refid="lv__linemeter_8h_1aa34ea02676122c93d2e0c8222637502c" kindref="member">lv_linemeter_get_max_value</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref><sp/>*<sp/>lmeter);</highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal">uint16_t<sp/><ref refid="lv__linemeter_8h_1a8f97885371cf91863d8cb0f253d702f5" kindref="member">lv_linemeter_get_line_count</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref><sp/>*<sp/>lmeter);</highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal">uint16_t<sp/><ref refid="lv__linemeter_8h_1a23411cf1cf55c7ad0bf1529ee43b2f47" kindref="member">lv_linemeter_get_scale_angle</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref><sp/>*<sp/>lmeter);</highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal">uint16_t<sp/><ref refid="lv__linemeter_8h_1a22ff3c87a8cc195cd99108d2f7eb1a1b" kindref="member">lv_linemeter_get_angle_offset</ref>(<ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref><sp/>*<sp/>lmeter);</highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>lv_linemeter_draw_scale(<ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref><sp/>*<sp/>lmeter,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structlv__area__t" kindref="compound">lv_area_t</ref><sp/>*<sp/>clip_area,<sp/>uint8_t<sp/>part);</highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="lv__linemeter_8h_1abdb263aee7af21f60887d0af1570fcc0" kindref="member">lv_linemeter_get_mirror</ref>(<ref refid="struct__lv__obj__t" kindref="compound">lv_obj_t</ref><sp/>*<sp/>lmeter);</highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight><highlight class="comment">/**********************</highlight></codeline>
<codeline lineno="161"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>MACROS</highlight></codeline>
<codeline lineno="162"><highlight class="comment"><sp/>**********************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*LV_USE_LINEMETER*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal">}<sp/></highlight><highlight class="comment">/*<sp/>extern<sp/>&quot;C&quot;<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*LV_LINEMETER_H*/</highlight><highlight class="preprocessor"></highlight></codeline>
    </programlisting>
    <location file="/home/kisvegabor/projects/littlevgl/eclipse-workspace/lv_sim_eclipse_sdl/lvgl/scripts/release_tmp/lvgl/src/lv_widgets/lv_linemeter.h"/>
  </compounddef>
</doxygen>
