<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="lv__refr_8h" kind="file" language="C++">
    <compoundname>lv_refr.h</compoundname>
      <sectiondef kind="func">
      <memberdef kind="function" id="lv__refr_8h_1ada28969f0e880484db61b7db55302580" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void _lv_refr_init</definition>
        <argsstring>(void)</argsstring>
        <name>_lv_refr_init</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Initialize the screen refresh subsystem </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kisvegabor/projects/littlevgl/eclipse-workspace/lv_sim_eclipse_sdl/lvgl/scripts/release_tmp/lvgl/src/lv_core/lv_refr.h" line="48" column="1"/>
      </memberdef>
      <memberdef kind="function" id="lv__refr_8h_1a9803f6e4c2d369f17782191ca46da731" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void lv_refr_now</definition>
        <argsstring>(lv_disp_t *disp)</argsstring>
        <name>lv_refr_now</name>
        <param>
          <type><ref refid="lv__hal__disp_8h_1a9d29d2918fd1d6117739da09a12b1e90" kindref="member">lv_disp_t</ref> *</type>
          <declname>disp</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Redraw the invalidated areas now. Normally the redrawing is periodically executed in <computeroutput>lv_task_handler</computeroutput> but a long blocking process can prevent the call of <computeroutput>lv_task_handler</computeroutput>. In this case if the the GUI is updated in the process (e.g. progress bar) this function can be called when the screen should be updated. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>disp</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to display to refresh. NULL to refresh all displays. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kisvegabor/projects/littlevgl/eclipse-workspace/lv_sim_eclipse_sdl/lvgl/scripts/release_tmp/lvgl/src/lv_core/lv_refr.h" line="57" column="1"/>
      </memberdef>
      <memberdef kind="function" id="lv__refr_8h_1abe137a75d2d7de32a35326d31fd66c4a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void _lv_inv_area</definition>
        <argsstring>(lv_disp_t *disp, const lv_area_t *area_p)</argsstring>
        <name>_lv_inv_area</name>
        <param>
          <type><ref refid="lv__hal__disp_8h_1a9d29d2918fd1d6117739da09a12b1e90" kindref="member">lv_disp_t</ref> *</type>
          <declname>disp</declname>
        </param>
        <param>
          <type>const <ref refid="structlv__area__t" kindref="compound">lv_area_t</ref> *</type>
          <declname>area_p</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Invalidate an area on display to redraw it <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>area_p</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to area which should be invalidated (NULL: delete the invalidated areas) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>disp</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to display where the area should be invalidated (NULL can be used if there is only one display) </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kisvegabor/projects/littlevgl/eclipse-workspace/lv_sim_eclipse_sdl/lvgl/scripts/release_tmp/lvgl/src/lv_core/lv_refr.h" line="65" column="1"/>
      </memberdef>
      <memberdef kind="function" id="lv__refr_8h_1a67b108459f11025fcaa582dd5656ebdd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="lv__hal__disp_8h_1a9d29d2918fd1d6117739da09a12b1e90" kindref="member">lv_disp_t</ref> *</type>
        <definition>lv_disp_t* _lv_refr_get_disp_refreshing</definition>
        <argsstring>(void)</argsstring>
        <name>_lv_refr_get_disp_refreshing</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the display which is being refreshed <simplesect kind="return"><para>the display being refreshed </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kisvegabor/projects/littlevgl/eclipse-workspace/lv_sim_eclipse_sdl/lvgl/scripts/release_tmp/lvgl/src/lv_core/lv_refr.h" line="71" column="1"/>
      </memberdef>
      <memberdef kind="function" id="lv__refr_8h_1a3085100d8b61f02bfadfca481dd7a790" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void _lv_refr_set_disp_refreshing</definition>
        <argsstring>(lv_disp_t *disp)</argsstring>
        <name>_lv_refr_set_disp_refreshing</name>
        <param>
          <type><ref refid="lv__hal__disp_8h_1a9d29d2918fd1d6117739da09a12b1e90" kindref="member">lv_disp_t</ref> *</type>
          <declname>disp</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set the display which is being refreshed. It shouldn&apos;t be used directly by the user. It can be used to trick the drawing functions about there is an active display. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>the</parametername>
</parameternamelist>
<parameterdescription>
<para>display being refreshed </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kisvegabor/projects/littlevgl/eclipse-workspace/lv_sim_eclipse_sdl/lvgl/scripts/release_tmp/lvgl/src/lv_core/lv_refr.h" line="79" column="1"/>
      </memberdef>
      <memberdef kind="function" id="lv__refr_8h_1ab6ec0f5908ab713729b0d66bae8a7a21" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void _lv_disp_refr_task</definition>
        <argsstring>(lv_task_t *task)</argsstring>
        <name>_lv_disp_refr_task</name>
        <param>
          <type><ref refid="struct__lv__task__t" kindref="compound">lv_task_t</ref> *</type>
          <declname>task</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Called periodically to handle the refreshing <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>task</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to the task itself </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kisvegabor/projects/littlevgl/eclipse-workspace/lv_sim_eclipse_sdl/lvgl/scripts/release_tmp/lvgl/src/lv_core/lv_refr.h" line="85" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"></codeline>
<codeline lineno="6"><highlight class="preprocessor">#ifndef<sp/>LV_REFR_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LV_REFR_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">/*********************</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>INCLUDES</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*********************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="lv__obj_8h" kindref="compound">lv_obj.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdbool.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="comment">/*********************</highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>DEFINES</highlight></codeline>
<codeline lineno="21"><highlight class="comment"><sp/>*********************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LV_REFR_TASK_PRIO<sp/>LV_TASK_PRIO_MID</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="comment">/**********************</highlight></codeline>
<codeline lineno="26"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>TYPEDEFS</highlight></codeline>
<codeline lineno="27"><highlight class="comment"><sp/>**********************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="comment">/**********************</highlight></codeline>
<codeline lineno="30"><highlight class="comment"><sp/>*<sp/><sp/>STATIC<sp/>PROTOTYPES</highlight></codeline>
<codeline lineno="31"><highlight class="comment"><sp/>**********************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="comment">/**********************</highlight></codeline>
<codeline lineno="34"><highlight class="comment"><sp/>*<sp/><sp/>STATIC<sp/>VARIABLES</highlight></codeline>
<codeline lineno="35"><highlight class="comment"><sp/>**********************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="comment">/**********************</highlight></codeline>
<codeline lineno="38"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>MACROS</highlight></codeline>
<codeline lineno="39"><highlight class="comment"><sp/>**********************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="comment">/**********************</highlight></codeline>
<codeline lineno="42"><highlight class="comment"><sp/>*<sp/><sp/><sp/>GLOBAL<sp/>FUNCTIONS</highlight></codeline>
<codeline lineno="43"><highlight class="comment"><sp/>**********************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="lv__refr_8h_1ada28969f0e880484db61b7db55302580" kindref="member">_lv_refr_init</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="lv__refr_8h_1a9803f6e4c2d369f17782191ca46da731" kindref="member">lv_refr_now</ref>(<ref refid="struct__disp__t" kindref="compound">lv_disp_t</ref><sp/>*<sp/>disp);</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="lv__refr_8h_1abe137a75d2d7de32a35326d31fd66c4a" kindref="member">_lv_inv_area</ref>(<ref refid="struct__disp__t" kindref="compound">lv_disp_t</ref><sp/>*<sp/>disp,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structlv__area__t" kindref="compound">lv_area_t</ref><sp/>*<sp/>area_p);</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"><ref refid="struct__disp__t" kindref="compound">lv_disp_t</ref><sp/>*<sp/><ref refid="lv__refr_8h_1a67b108459f11025fcaa582dd5656ebdd" kindref="member">_lv_refr_get_disp_refreshing</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="lv__refr_8h_1a3085100d8b61f02bfadfca481dd7a790" kindref="member">_lv_refr_set_disp_refreshing</ref>(<ref refid="struct__disp__t" kindref="compound">lv_disp_t</ref><sp/>*<sp/>disp);</highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="lv__refr_8h_1ab6ec0f5908ab713729b0d66bae8a7a21" kindref="member">_lv_disp_refr_task</ref>(<ref refid="struct__lv__task__t" kindref="compound">lv_task_t</ref><sp/>*<sp/>task);</highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight><highlight class="comment">/**********************</highlight></codeline>
<codeline lineno="88"><highlight class="comment"><sp/>*<sp/><sp/><sp/>STATIC<sp/>FUNCTIONS</highlight></codeline>
<codeline lineno="89"><highlight class="comment"><sp/>**********************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal">}<sp/></highlight><highlight class="comment">/*<sp/>extern<sp/>&quot;C&quot;<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*LV_REFR_H*/</highlight><highlight class="preprocessor"></highlight></codeline>
    </programlisting>
    <location file="/home/kisvegabor/projects/littlevgl/eclipse-workspace/lv_sim_eclipse_sdl/lvgl/scripts/release_tmp/lvgl/src/lv_core/lv_refr.h"/>
  </compounddef>
</doxygen>
